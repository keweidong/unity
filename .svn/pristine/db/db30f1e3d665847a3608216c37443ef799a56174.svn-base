// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DashFire.Billing {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Billing {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_LB_VerifyAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.Billing.LB_VerifyAccount, global::DashFire.Billing.LB_VerifyAccount.Builder> internal__static_LB_VerifyAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_BL_VerifyAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.Billing.BL_VerifyAccountResult, global::DashFire.Billing.BL_VerifyAccountResult.Builder> internal__static_BL_VerifyAccountResult__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Billing() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChVCaWxsaW5nL0JpbGxpbmcucHJvdG8iVAoQTEJfVmVyaWZ5QWNjb3VudBIP" + 
          "CgdBY2NvdW50GAEgAigJEg4KBk9wQ29kZRgCIAIoBRIRCglDaGFubmVsSWQY" + 
          "AyACKAUSDAoERGF0YRgEIAIoCSJvChZCTF9WZXJpZnlBY2NvdW50UmVzdWx0" + 
          "Eg8KB0FjY291bnQYASACKAkSDgoGUmVzdWx0GAIgAigIEhEKCUFjY291bnRJ" + 
          "ZBgDIAIoCRIOCgZPcENvZGUYBCACKAUSEQoJQ2hhbm5lbElkGAUgAigF");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_LB_VerifyAccount__Descriptor = Descriptor.MessageTypes[0];
        internal__static_LB_VerifyAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.Billing.LB_VerifyAccount, global::DashFire.Billing.LB_VerifyAccount.Builder>(internal__static_LB_VerifyAccount__Descriptor,
                new string[] { "Account", "OpCode", "ChannelId", "Data", });
        internal__static_BL_VerifyAccountResult__Descriptor = Descriptor.MessageTypes[1];
        internal__static_BL_VerifyAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.Billing.BL_VerifyAccountResult, global::DashFire.Billing.BL_VerifyAccountResult.Builder>(internal__static_BL_VerifyAccountResult__Descriptor,
                new string[] { "Account", "Result", "AccountId", "OpCode", "ChannelId", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LB_VerifyAccount : pb::GeneratedMessage<LB_VerifyAccount, LB_VerifyAccount.Builder> {
    private LB_VerifyAccount() { }
    private static readonly LB_VerifyAccount defaultInstance = new LB_VerifyAccount().MakeReadOnly();
    private static readonly string[] _lBVerifyAccountFieldNames = new string[] { "Account", "ChannelId", "Data", "OpCode" };
    private static readonly uint[] _lBVerifyAccountFieldTags = new uint[] { 10, 24, 34, 16 };
    public static LB_VerifyAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LB_VerifyAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LB_VerifyAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.Billing.Billing.internal__static_LB_VerifyAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LB_VerifyAccount, LB_VerifyAccount.Builder> InternalFieldAccessors {
      get { return global::DashFire.Billing.Billing.internal__static_LB_VerifyAccount__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int OpCodeFieldNumber = 2;
    private bool hasOpCode;
    private int opCode_;
    public bool HasOpCode {
      get { return hasOpCode; }
    }
    public int OpCode {
      get { return opCode_; }
    }
    
    public const int ChannelIdFieldNumber = 3;
    private bool hasChannelId;
    private int channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public int ChannelId {
      get { return channelId_; }
    }
    
    public const int DataFieldNumber = 4;
    private bool hasData;
    private string data_ = "";
    public bool HasData {
      get { return hasData; }
    }
    public string Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasOpCode) return false;
        if (!hasChannelId) return false;
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _lBVerifyAccountFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasOpCode) {
        output.WriteInt32(2, field_names[3], OpCode);
      }
      if (hasChannelId) {
        output.WriteInt32(3, field_names[1], ChannelId);
      }
      if (hasData) {
        output.WriteString(4, field_names[2], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasOpCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, OpCode);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ChannelId);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LB_VerifyAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LB_VerifyAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LB_VerifyAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LB_VerifyAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LB_VerifyAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LB_VerifyAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LB_VerifyAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LB_VerifyAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LB_VerifyAccount result;
      
      private LB_VerifyAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          LB_VerifyAccount original = result;
          result = new LB_VerifyAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LB_VerifyAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.Billing.LB_VerifyAccount.Descriptor; }
      }
      
      public override LB_VerifyAccount DefaultInstanceForType {
        get { return global::DashFire.Billing.LB_VerifyAccount.DefaultInstance; }
      }
      
      public override LB_VerifyAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LB_VerifyAccount) {
          return MergeFrom((LB_VerifyAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LB_VerifyAccount other) {
        if (other == global::DashFire.Billing.LB_VerifyAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasOpCode) {
          OpCode = other.OpCode;
        }
        if (other.HasChannelId) {
          ChannelId = other.ChannelId;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lBVerifyAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lBVerifyAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 16: {
              result.hasOpCode = input.ReadInt32(ref result.opCode_);
              break;
            }
            case 24: {
              result.hasChannelId = input.ReadInt32(ref result.channelId_);
              break;
            }
            case 34: {
              result.hasData = input.ReadString(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasOpCode {
        get { return result.hasOpCode; }
      }
      public int OpCode {
        get { return result.OpCode; }
        set { SetOpCode(value); }
      }
      public Builder SetOpCode(int value) {
        PrepareBuilder();
        result.hasOpCode = true;
        result.opCode_ = value;
        return this;
      }
      public Builder ClearOpCode() {
        PrepareBuilder();
        result.hasOpCode = false;
        result.opCode_ = 0;
        return this;
      }
      
      public bool HasChannelId {
        get { return result.hasChannelId; }
      }
      public int ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(int value) {
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public string Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = "";
        return this;
      }
    }
    static LB_VerifyAccount() {
      object.ReferenceEquals(global::DashFire.Billing.Billing.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BL_VerifyAccountResult : pb::GeneratedMessage<BL_VerifyAccountResult, BL_VerifyAccountResult.Builder> {
    private BL_VerifyAccountResult() { }
    private static readonly BL_VerifyAccountResult defaultInstance = new BL_VerifyAccountResult().MakeReadOnly();
    private static readonly string[] _bLVerifyAccountResultFieldNames = new string[] { "Account", "AccountId", "ChannelId", "OpCode", "Result" };
    private static readonly uint[] _bLVerifyAccountResultFieldTags = new uint[] { 10, 26, 40, 32, 16 };
    public static BL_VerifyAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BL_VerifyAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BL_VerifyAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.Billing.Billing.internal__static_BL_VerifyAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BL_VerifyAccountResult, BL_VerifyAccountResult.Builder> InternalFieldAccessors {
      get { return global::DashFire.Billing.Billing.internal__static_BL_VerifyAccountResult__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private bool result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public bool Result {
      get { return result_; }
    }
    
    public const int AccountIdFieldNumber = 3;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int OpCodeFieldNumber = 4;
    private bool hasOpCode;
    private int opCode_;
    public bool HasOpCode {
      get { return hasOpCode; }
    }
    public int OpCode {
      get { return opCode_; }
    }
    
    public const int ChannelIdFieldNumber = 5;
    private bool hasChannelId;
    private int channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public int ChannelId {
      get { return channelId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasResult) return false;
        if (!hasAccountId) return false;
        if (!hasOpCode) return false;
        if (!hasChannelId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bLVerifyAccountResultFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasResult) {
        output.WriteBool(2, field_names[4], Result);
      }
      if (hasAccountId) {
        output.WriteString(3, field_names[1], AccountId);
      }
      if (hasOpCode) {
        output.WriteInt32(4, field_names[3], OpCode);
      }
      if (hasChannelId) {
        output.WriteInt32(5, field_names[2], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Result);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, AccountId);
        }
        if (hasOpCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, OpCode);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BL_VerifyAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BL_VerifyAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BL_VerifyAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BL_VerifyAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BL_VerifyAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BL_VerifyAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BL_VerifyAccountResult result;
      
      private BL_VerifyAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          BL_VerifyAccountResult original = result;
          result = new BL_VerifyAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BL_VerifyAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.Billing.BL_VerifyAccountResult.Descriptor; }
      }
      
      public override BL_VerifyAccountResult DefaultInstanceForType {
        get { return global::DashFire.Billing.BL_VerifyAccountResult.DefaultInstance; }
      }
      
      public override BL_VerifyAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BL_VerifyAccountResult) {
          return MergeFrom((BL_VerifyAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BL_VerifyAccountResult other) {
        if (other == global::DashFire.Billing.BL_VerifyAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasOpCode) {
          OpCode = other.OpCode;
        }
        if (other.HasChannelId) {
          ChannelId = other.ChannelId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bLVerifyAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bLVerifyAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 16: {
              result.hasResult = input.ReadBool(ref result.result_);
              break;
            }
            case 26: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 32: {
              result.hasOpCode = input.ReadInt32(ref result.opCode_);
              break;
            }
            case 40: {
              result.hasChannelId = input.ReadInt32(ref result.channelId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public bool Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(bool value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = false;
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasOpCode {
        get { return result.hasOpCode; }
      }
      public int OpCode {
        get { return result.OpCode; }
        set { SetOpCode(value); }
      }
      public Builder SetOpCode(int value) {
        PrepareBuilder();
        result.hasOpCode = true;
        result.opCode_ = value;
        return this;
      }
      public Builder ClearOpCode() {
        PrepareBuilder();
        result.hasOpCode = false;
        result.opCode_ = 0;
        return this;
      }
      
      public bool HasChannelId {
        get { return result.hasChannelId; }
      }
      public int ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(int value) {
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = 0;
        return this;
      }
    }
    static BL_VerifyAccountResult() {
      object.ReferenceEquals(global::DashFire.Billing.Billing.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
