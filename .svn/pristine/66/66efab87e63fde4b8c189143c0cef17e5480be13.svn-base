// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Lobby_RoomServer {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MessageDefine {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Msg_RL_RegisterRoomServer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_RegisterRoomServer, global::Lobby_RoomServer.Msg_RL_RegisterRoomServer.Builder> internal__static_Msg_RL_RegisterRoomServer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_ReplyRegisterRoomServer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer, global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer.Builder> internal__static_Msg_LR_ReplyRegisterRoomServer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Builder> internal__static_Msg_LR_RoomUserInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo_SkillInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.Builder> internal__static_Msg_LR_RoomUserInfo_SkillInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo_EquipInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.Builder> internal__static_Msg_LR_RoomUserInfo_EquipInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo_LegacyInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.Builder> internal__static_Msg_LR_RoomUserInfo_LegacyInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.Builder> internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_RoomUserInfo_PartnerInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.Builder> internal__static_Msg_LR_RoomUserInfo_PartnerInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_ReconnectUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_ReconnectUser, global::Lobby_RoomServer.Msg_LR_ReconnectUser.Builder> internal__static_Msg_LR_ReconnectUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_ReplyReconnectUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser, global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser.Builder> internal__static_Msg_RL_ReplyReconnectUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_CreateBattleRoom__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_CreateBattleRoom, global::Lobby_RoomServer.Msg_LR_CreateBattleRoom.Builder> internal__static_Msg_LR_CreateBattleRoom__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_ReplyCreateBattleRoom__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom, global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom.Builder> internal__static_Msg_RL_ReplyCreateBattleRoom__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_RoomServerUpdateInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo, global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo.Builder> internal__static_Msg_RL_RoomServerUpdateInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_UserLobbyItemInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo, global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo.Builder> internal__static_Msg_RL_UserLobbyItemInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_UserBattleInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserBattleInfo, global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Builder> internal__static_Msg_RL_UserBattleInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_BattleEnd__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_BattleEnd, global::Lobby_RoomServer.Msg_RL_BattleEnd.Builder> internal__static_Msg_RL_BattleEnd__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_RL_UserQuit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserQuit, global::Lobby_RoomServer.Msg_RL_UserQuit.Builder> internal__static_Msg_RL_UserQuit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_LR_UserReLive__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_UserReLive, global::Lobby_RoomServer.Msg_LR_UserReLive.Builder> internal__static_Msg_LR_UserReLive__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static MessageDefine() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChNNZXNzYWdlRGVmaW5lLnByb3RvImkKGU1zZ19STF9SZWdpc3RlclJvb21T" + 
          "ZXJ2ZXISEgoKU2VydmVyTmFtZRgBIAIoCRISCgpNYXhSb29tTnVtGAIgAigF" + 
          "EhAKCFNlcnZlcklwGAMgAigJEhIKClNlcnZlclBvcnQYBCACKA0iLgoeTXNn" + 
          "X0xSX1JlcGx5UmVnaXN0ZXJSb29tU2VydmVyEgwKBElzT2sYASACKAgi1wYK" + 
          "E01zZ19MUl9Sb29tVXNlckluZm8SDAoER3VpZBgBIAIoBBIMCgROaWNrGAIg" + 
          "AigJEgsKA0tleRgDIAIoDRIMCgRIZXJvGAQgAigFEhAKCEFyZ1Njb3JlGAUg" + 
          "AigFEgwKBENhbXAYBiACKAUSEQoJSXNNYWNoaW5lGAcgAigIEhgKEFNob3BF" + 
          "cXVpcG1lbnRzSWQYCCADKAUSLgoGU2tpbGxzGAkgAygLMh4uTXNnX0xSX1Jv" + 
          "b21Vc2VySW5mby5Ta2lsbEluZm8SEwoLUHJlc2V0SW5kZXgYCiABKAUSLgoG" + 
          "RXF1aXBzGAsgAygLMh4uTXNnX0xSX1Jvb21Vc2VySW5mby5FcXVpcEluZm8S" + 
          "DQoFTGV2ZWwYDCACKAUSMAoHTGVnYWN5cxgNIAMoCzIfLk1zZ19MUl9Sb29t" + 
          "VXNlckluZm8uTGVnYWN5SW5mbxIyCgZYU291bHMYDiADKAsyIi5Nc2dfTFJf" + 
          "Um9vbVVzZXJJbmZvLlhTb3VsRGF0YUluZm8SMQoHUGFydG5lchgPIAEoCzIg" + 
          "Lk1zZ19MUl9Sb29tVXNlckluZm8uUGFydG5lckluZm8aMgoJU2tpbGxJbmZv" + 
          "EhAKCHNraWxsX2lkGAEgAigFEhMKC3NraWxsX2xldmVsGAIgAigFGlEKCUVx" + 
          "dWlwSW5mbxIQCghlcXVpcF9pZBgBIAIoBRITCgtlcXVpcF9sZXZlbBgCIAIo" + 
          "BRIdChVlcXVpcF9yYW5kb21fcHJvcGVydHkYAyACKAUabwoKTGVnYWN5SW5m" + 
          "bxIRCglsZWdhY3lfaWQYASACKAUSFAoMbGVnYWN5X2xldmVsGAIgAigFEh4K" + 
          "FmxlZ2FjeV9yYW5kb21fcHJvcGVydHkYAyACKAUSGAoQbGVnYWN5X2lzX3Vu" + 
          "bG9jaxgEIAIoCBpWCg1YU291bERhdGFJbmZvEg4KBkl0ZW1JZBgBIAIoBRIN" + 
          "CgVMZXZlbBgCIAIoBRISCgpNb2RlbExldmVsGAMgAigFEhIKCkV4cGVyaWVu" + 
          "Y2UYBCACKAUaTwoLUGFydG5lckluZm8SEgoKcGFydG5lcl9pZBgBIAIoBRIV" + 
          "Cg1wYXJ0bmVyX2xldmVsGAIgAigFEhUKDXBhcnRuZXJfc3RhZ2UYAyACKAUi" + 
          "OAoUTXNnX0xSX1JlY29ubmVjdFVzZXISEAoIVXNlckd1aWQYASACKAQSDgoG" + 
          "Um9vbUlEGAIgAigFIlAKGU1zZ19STF9SZXBseVJlY29ubmVjdFVzZXISEAoI" + 
          "VXNlckd1aWQYASACKAQSDgoGUm9vbUlEGAIgAigFEhEKCUlzU3VjY2VzcxgD" + 
          "IAIoCCJhChdNc2dfTFJfQ3JlYXRlQmF0dGxlUm9vbRIOCgZSb29tSWQYASAC" + 
          "KAUSEQoJU2NlbmVUeXBlGAIgAigFEiMKBVVzZXJzGAMgAygLMhQuTXNnX0xS" + 
          "X1Jvb21Vc2VySW5mbyJBChxNc2dfUkxfUmVwbHlDcmVhdGVCYXR0bGVSb29t" + 
          "Eg4KBlJvb21JZBgBIAIoBRIRCglJc1N1Y2Nlc3MYAiACKAgiVwobTXNnX1JM" + 
          "X1Jvb21TZXJ2ZXJVcGRhdGVJbmZvEhIKClNlcnZlck5hbWUYASACKAkSEwoL" + 
          "SWRsZVJvb21OdW0YAiACKAUSDwoHVXNlck51bRgDIAIoBSI7ChhNc2dfUkxf" + 
          "VXNlckxvYmJ5SXRlbUluZm8SDgoGSXRlbUlkGAEgAigFEg8KB0l0ZW1OdW0Y" + 
          "AiACKAUiqgIKFU1zZ19STF9Vc2VyQmF0dGxlSW5mbxIQCghVc2VyR3VpZBgB" + 
          "IAIoBBI9CgxCYXR0bGVSZXN1bHQYAiACKA4yJy5Nc2dfUkxfVXNlckJhdHRs" + 
          "ZUluZm8uQmF0dGxlUmVzdWx0RW51bRINCgVNb25leRgDIAEoBRIQCghIaXRD" + 
          "b3VudBgEIAEoBRIUCgxLaWxsTnBjQ291bnQYBSABKAUSGAoQTWF4TXVsdGlI" + 
          "aXRDb3VudBgGIAEoBRIbChNUb3RhbERhbWFnZVRvTXlzZWxmGAcgASgFEh0K" + 
          "FVRvdGFsRGFtYWdlRnJvbU15c2VsZhgIIAEoBSIzChBCYXR0bGVSZXN1bHRF" + 
          "bnVtEgcKA1dpbhAAEggKBExvc3QQARIMCghVbmZpbmlzaBACIrgBChBNc2df" + 
          "UkxfQmF0dGxlRW5kEg4KBlJvb21JRBgBIAIoBRI0CgpXaW5uZXJDYW1wGAIg" + 
          "AigOMiAuTXNnX1JMX0JhdHRsZUVuZC5XaW5uZXJDYW1wRW51bRIvCg9Vc2Vy" + 
          "QmF0dGxlSW5mb3MYAyADKAsyFi5Nc2dfUkxfVXNlckJhdHRsZUluZm8iLQoO" + 
          "V2lubmVyQ2FtcEVudW0SCAoETm9uZRAAEgcKA1JlZBABEggKBEJsdWUQAiJI" + 
          "Cg9Nc2dfUkxfVXNlclF1aXQSEAoIVXNlckd1aWQYASACKAQSDgoGUm9vbUlE" + 
          "GAIgAigFEhMKC0lzQmF0dGxlRW5kGAMgAigIIjUKEU1zZ19MUl9Vc2VyUmVM" + 
          "aXZlEhAKCFVzZXJHdWlkGAEgAigEEg4KBlJvb21JRBgCIAIoBQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Msg_RL_RegisterRoomServer__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Msg_RL_RegisterRoomServer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_RegisterRoomServer, global::Lobby_RoomServer.Msg_RL_RegisterRoomServer.Builder>(internal__static_Msg_RL_RegisterRoomServer__Descriptor,
                new string[] { "ServerName", "MaxRoomNum", "ServerIp", "ServerPort", });
        internal__static_Msg_LR_ReplyRegisterRoomServer__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Msg_LR_ReplyRegisterRoomServer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer, global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer.Builder>(internal__static_Msg_LR_ReplyRegisterRoomServer__Descriptor,
                new string[] { "IsOk", });
        internal__static_Msg_LR_RoomUserInfo__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Msg_LR_RoomUserInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Builder>(internal__static_Msg_LR_RoomUserInfo__Descriptor,
                new string[] { "Guid", "Nick", "Key", "Hero", "ArgScore", "Camp", "IsMachine", "ShopEquipmentsId", "Skills", "PresetIndex", "Equips", "Level", "Legacys", "XSouls", "Partner", });
        internal__static_Msg_LR_RoomUserInfo_SkillInfo__Descriptor = internal__static_Msg_LR_RoomUserInfo__Descriptor.NestedTypes[0];
        internal__static_Msg_LR_RoomUserInfo_SkillInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.Builder>(internal__static_Msg_LR_RoomUserInfo_SkillInfo__Descriptor,
                new string[] { "SkillId", "SkillLevel", });
        internal__static_Msg_LR_RoomUserInfo_EquipInfo__Descriptor = internal__static_Msg_LR_RoomUserInfo__Descriptor.NestedTypes[1];
        internal__static_Msg_LR_RoomUserInfo_EquipInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.Builder>(internal__static_Msg_LR_RoomUserInfo_EquipInfo__Descriptor,
                new string[] { "EquipId", "EquipLevel", "EquipRandomProperty", });
        internal__static_Msg_LR_RoomUserInfo_LegacyInfo__Descriptor = internal__static_Msg_LR_RoomUserInfo__Descriptor.NestedTypes[2];
        internal__static_Msg_LR_RoomUserInfo_LegacyInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.Builder>(internal__static_Msg_LR_RoomUserInfo_LegacyInfo__Descriptor,
                new string[] { "LegacyId", "LegacyLevel", "LegacyRandomProperty", "LegacyIsUnlock", });
        internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__Descriptor = internal__static_Msg_LR_RoomUserInfo__Descriptor.NestedTypes[3];
        internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.Builder>(internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__Descriptor,
                new string[] { "ItemId", "Level", "ModelLevel", "Experience", });
        internal__static_Msg_LR_RoomUserInfo_PartnerInfo__Descriptor = internal__static_Msg_LR_RoomUserInfo__Descriptor.NestedTypes[4];
        internal__static_Msg_LR_RoomUserInfo_PartnerInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.Builder>(internal__static_Msg_LR_RoomUserInfo_PartnerInfo__Descriptor,
                new string[] { "PartnerId", "PartnerLevel", "PartnerStage", });
        internal__static_Msg_LR_ReconnectUser__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Msg_LR_ReconnectUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_ReconnectUser, global::Lobby_RoomServer.Msg_LR_ReconnectUser.Builder>(internal__static_Msg_LR_ReconnectUser__Descriptor,
                new string[] { "UserGuid", "RoomID", });
        internal__static_Msg_RL_ReplyReconnectUser__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Msg_RL_ReplyReconnectUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser, global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser.Builder>(internal__static_Msg_RL_ReplyReconnectUser__Descriptor,
                new string[] { "UserGuid", "RoomID", "IsSuccess", });
        internal__static_Msg_LR_CreateBattleRoom__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Msg_LR_CreateBattleRoom__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_CreateBattleRoom, global::Lobby_RoomServer.Msg_LR_CreateBattleRoom.Builder>(internal__static_Msg_LR_CreateBattleRoom__Descriptor,
                new string[] { "RoomId", "SceneType", "Users", });
        internal__static_Msg_RL_ReplyCreateBattleRoom__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Msg_RL_ReplyCreateBattleRoom__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom, global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom.Builder>(internal__static_Msg_RL_ReplyCreateBattleRoom__Descriptor,
                new string[] { "RoomId", "IsSuccess", });
        internal__static_Msg_RL_RoomServerUpdateInfo__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Msg_RL_RoomServerUpdateInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo, global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo.Builder>(internal__static_Msg_RL_RoomServerUpdateInfo__Descriptor,
                new string[] { "ServerName", "IdleRoomNum", "UserNum", });
        internal__static_Msg_RL_UserLobbyItemInfo__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Msg_RL_UserLobbyItemInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo, global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo.Builder>(internal__static_Msg_RL_UserLobbyItemInfo__Descriptor,
                new string[] { "ItemId", "ItemNum", });
        internal__static_Msg_RL_UserBattleInfo__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Msg_RL_UserBattleInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserBattleInfo, global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Builder>(internal__static_Msg_RL_UserBattleInfo__Descriptor,
                new string[] { "UserGuid", "BattleResult", "Money", "HitCount", "KillNpcCount", "MaxMultiHitCount", "TotalDamageToMyself", "TotalDamageFromMyself", });
        internal__static_Msg_RL_BattleEnd__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Msg_RL_BattleEnd__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_BattleEnd, global::Lobby_RoomServer.Msg_RL_BattleEnd.Builder>(internal__static_Msg_RL_BattleEnd__Descriptor,
                new string[] { "RoomID", "WinnerCamp", "UserBattleInfos", });
        internal__static_Msg_RL_UserQuit__Descriptor = Descriptor.MessageTypes[11];
        internal__static_Msg_RL_UserQuit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_RL_UserQuit, global::Lobby_RoomServer.Msg_RL_UserQuit.Builder>(internal__static_Msg_RL_UserQuit__Descriptor,
                new string[] { "UserGuid", "RoomID", "IsBattleEnd", });
        internal__static_Msg_LR_UserReLive__Descriptor = Descriptor.MessageTypes[12];
        internal__static_Msg_LR_UserReLive__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_RoomServer.Msg_LR_UserReLive, global::Lobby_RoomServer.Msg_LR_UserReLive.Builder>(internal__static_Msg_LR_UserReLive__Descriptor,
                new string[] { "UserGuid", "RoomID", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_RegisterRoomServer : pb::GeneratedMessage<Msg_RL_RegisterRoomServer, Msg_RL_RegisterRoomServer.Builder> {
    private Msg_RL_RegisterRoomServer() { }
    private static readonly Msg_RL_RegisterRoomServer defaultInstance = new Msg_RL_RegisterRoomServer().MakeReadOnly();
    private static readonly string[] _msgRLRegisterRoomServerFieldNames = new string[] { "MaxRoomNum", "ServerIp", "ServerName", "ServerPort" };
    private static readonly uint[] _msgRLRegisterRoomServerFieldTags = new uint[] { 16, 26, 10, 32 };
    public static Msg_RL_RegisterRoomServer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_RegisterRoomServer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_RegisterRoomServer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_RegisterRoomServer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_RegisterRoomServer, Msg_RL_RegisterRoomServer.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_RegisterRoomServer__FieldAccessorTable; }
    }
    
    public const int ServerNameFieldNumber = 1;
    private bool hasServerName;
    private string serverName_ = "";
    public bool HasServerName {
      get { return hasServerName; }
    }
    public string ServerName {
      get { return serverName_; }
    }
    
    public const int MaxRoomNumFieldNumber = 2;
    private bool hasMaxRoomNum;
    private int maxRoomNum_;
    public bool HasMaxRoomNum {
      get { return hasMaxRoomNum; }
    }
    public int MaxRoomNum {
      get { return maxRoomNum_; }
    }
    
    public const int ServerIpFieldNumber = 3;
    private bool hasServerIp;
    private string serverIp_ = "";
    public bool HasServerIp {
      get { return hasServerIp; }
    }
    public string ServerIp {
      get { return serverIp_; }
    }
    
    public const int ServerPortFieldNumber = 4;
    private bool hasServerPort;
    private uint serverPort_;
    public bool HasServerPort {
      get { return hasServerPort; }
    }
    public uint ServerPort {
      get { return serverPort_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasServerName) return false;
        if (!hasMaxRoomNum) return false;
        if (!hasServerIp) return false;
        if (!hasServerPort) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLRegisterRoomServerFieldNames;
      if (hasServerName) {
        output.WriteString(1, field_names[2], ServerName);
      }
      if (hasMaxRoomNum) {
        output.WriteInt32(2, field_names[0], MaxRoomNum);
      }
      if (hasServerIp) {
        output.WriteString(3, field_names[1], ServerIp);
      }
      if (hasServerPort) {
        output.WriteUInt32(4, field_names[3], ServerPort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasServerName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ServerName);
        }
        if (hasMaxRoomNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, MaxRoomNum);
        }
        if (hasServerIp) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ServerIp);
        }
        if (hasServerPort) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, ServerPort);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_RegisterRoomServer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_RegisterRoomServer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_RegisterRoomServer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_RegisterRoomServer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_RegisterRoomServer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_RegisterRoomServer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_RegisterRoomServer result;
      
      private Msg_RL_RegisterRoomServer PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_RegisterRoomServer original = result;
          result = new Msg_RL_RegisterRoomServer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_RegisterRoomServer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_RegisterRoomServer.Descriptor; }
      }
      
      public override Msg_RL_RegisterRoomServer DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_RegisterRoomServer.DefaultInstance; }
      }
      
      public override Msg_RL_RegisterRoomServer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_RegisterRoomServer) {
          return MergeFrom((Msg_RL_RegisterRoomServer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_RegisterRoomServer other) {
        if (other == global::Lobby_RoomServer.Msg_RL_RegisterRoomServer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasServerName) {
          ServerName = other.ServerName;
        }
        if (other.HasMaxRoomNum) {
          MaxRoomNum = other.MaxRoomNum;
        }
        if (other.HasServerIp) {
          ServerIp = other.ServerIp;
        }
        if (other.HasServerPort) {
          ServerPort = other.ServerPort;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLRegisterRoomServerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLRegisterRoomServerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasServerName = input.ReadString(ref result.serverName_);
              break;
            }
            case 16: {
              result.hasMaxRoomNum = input.ReadInt32(ref result.maxRoomNum_);
              break;
            }
            case 26: {
              result.hasServerIp = input.ReadString(ref result.serverIp_);
              break;
            }
            case 32: {
              result.hasServerPort = input.ReadUInt32(ref result.serverPort_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasServerName {
        get { return result.hasServerName; }
      }
      public string ServerName {
        get { return result.ServerName; }
        set { SetServerName(value); }
      }
      public Builder SetServerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerName = true;
        result.serverName_ = value;
        return this;
      }
      public Builder ClearServerName() {
        PrepareBuilder();
        result.hasServerName = false;
        result.serverName_ = "";
        return this;
      }
      
      public bool HasMaxRoomNum {
        get { return result.hasMaxRoomNum; }
      }
      public int MaxRoomNum {
        get { return result.MaxRoomNum; }
        set { SetMaxRoomNum(value); }
      }
      public Builder SetMaxRoomNum(int value) {
        PrepareBuilder();
        result.hasMaxRoomNum = true;
        result.maxRoomNum_ = value;
        return this;
      }
      public Builder ClearMaxRoomNum() {
        PrepareBuilder();
        result.hasMaxRoomNum = false;
        result.maxRoomNum_ = 0;
        return this;
      }
      
      public bool HasServerIp {
        get { return result.hasServerIp; }
      }
      public string ServerIp {
        get { return result.ServerIp; }
        set { SetServerIp(value); }
      }
      public Builder SetServerIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerIp = true;
        result.serverIp_ = value;
        return this;
      }
      public Builder ClearServerIp() {
        PrepareBuilder();
        result.hasServerIp = false;
        result.serverIp_ = "";
        return this;
      }
      
      public bool HasServerPort {
        get { return result.hasServerPort; }
      }
      public uint ServerPort {
        get { return result.ServerPort; }
        set { SetServerPort(value); }
      }
      public Builder SetServerPort(uint value) {
        PrepareBuilder();
        result.hasServerPort = true;
        result.serverPort_ = value;
        return this;
      }
      public Builder ClearServerPort() {
        PrepareBuilder();
        result.hasServerPort = false;
        result.serverPort_ = 0;
        return this;
      }
    }
    static Msg_RL_RegisterRoomServer() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LR_ReplyRegisterRoomServer : pb::GeneratedMessage<Msg_LR_ReplyRegisterRoomServer, Msg_LR_ReplyRegisterRoomServer.Builder> {
    private Msg_LR_ReplyRegisterRoomServer() { }
    private static readonly Msg_LR_ReplyRegisterRoomServer defaultInstance = new Msg_LR_ReplyRegisterRoomServer().MakeReadOnly();
    private static readonly string[] _msgLRReplyRegisterRoomServerFieldNames = new string[] { "IsOk" };
    private static readonly uint[] _msgLRReplyRegisterRoomServerFieldTags = new uint[] { 8 };
    public static Msg_LR_ReplyRegisterRoomServer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LR_ReplyRegisterRoomServer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LR_ReplyRegisterRoomServer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_ReplyRegisterRoomServer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LR_ReplyRegisterRoomServer, Msg_LR_ReplyRegisterRoomServer.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_ReplyRegisterRoomServer__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLRReplyRegisterRoomServerFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[0], IsOk);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsOk) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_ReplyRegisterRoomServer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LR_ReplyRegisterRoomServer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LR_ReplyRegisterRoomServer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LR_ReplyRegisterRoomServer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LR_ReplyRegisterRoomServer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LR_ReplyRegisterRoomServer result;
      
      private Msg_LR_ReplyRegisterRoomServer PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LR_ReplyRegisterRoomServer original = result;
          result = new Msg_LR_ReplyRegisterRoomServer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LR_ReplyRegisterRoomServer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer.Descriptor; }
      }
      
      public override Msg_LR_ReplyRegisterRoomServer DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer.DefaultInstance; }
      }
      
      public override Msg_LR_ReplyRegisterRoomServer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LR_ReplyRegisterRoomServer) {
          return MergeFrom((Msg_LR_ReplyRegisterRoomServer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LR_ReplyRegisterRoomServer other) {
        if (other == global::Lobby_RoomServer.Msg_LR_ReplyRegisterRoomServer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLRReplyRegisterRoomServerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLRReplyRegisterRoomServerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = false;
        return this;
      }
    }
    static Msg_LR_ReplyRegisterRoomServer() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LR_RoomUserInfo : pb::GeneratedMessage<Msg_LR_RoomUserInfo, Msg_LR_RoomUserInfo.Builder> {
    private Msg_LR_RoomUserInfo() { }
    private static readonly Msg_LR_RoomUserInfo defaultInstance = new Msg_LR_RoomUserInfo().MakeReadOnly();
    private static readonly string[] _msgLRRoomUserInfoFieldNames = new string[] { "ArgScore", "Camp", "Equips", "Guid", "Hero", "IsMachine", "Key", "Legacys", "Level", "Nick", "Partner", "PresetIndex", "ShopEquipmentsId", "Skills", "XSouls" };
    private static readonly uint[] _msgLRRoomUserInfoFieldTags = new uint[] { 40, 48, 90, 8, 32, 56, 24, 106, 96, 18, 122, 80, 64, 74, 114 };
    public static Msg_LR_RoomUserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LR_RoomUserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LR_RoomUserInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LR_RoomUserInfo, Msg_LR_RoomUserInfo.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class SkillInfo : pb::GeneratedMessage<SkillInfo, SkillInfo.Builder> {
        private SkillInfo() { }
        private static readonly SkillInfo defaultInstance = new SkillInfo().MakeReadOnly();
        private static readonly string[] _skillInfoFieldNames = new string[] { "skill_id", "skill_level" };
        private static readonly uint[] _skillInfoFieldTags = new uint[] { 8, 16 };
        public static SkillInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override SkillInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override SkillInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_SkillInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<SkillInfo, SkillInfo.Builder> InternalFieldAccessors {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_SkillInfo__FieldAccessorTable; }
        }
        
        public const int SkillIdFieldNumber = 1;
        private bool hasSkillId;
        private int skillId_;
        public bool HasSkillId {
          get { return hasSkillId; }
        }
        public int SkillId {
          get { return skillId_; }
        }
        
        public const int SkillLevelFieldNumber = 2;
        private bool hasSkillLevel;
        private int skillLevel_;
        public bool HasSkillLevel {
          get { return hasSkillLevel; }
        }
        public int SkillLevel {
          get { return skillLevel_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasSkillId) return false;
            if (!hasSkillLevel) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _skillInfoFieldNames;
          if (hasSkillId) {
            output.WriteInt32(1, field_names[0], SkillId);
          }
          if (hasSkillLevel) {
            output.WriteInt32(2, field_names[1], SkillLevel);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasSkillId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, SkillId);
            }
            if (hasSkillLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, SkillLevel);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static SkillInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SkillInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SkillInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SkillInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SkillInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SkillInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SkillInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SkillInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SkillInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SkillInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SkillInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SkillInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<SkillInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(SkillInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private SkillInfo result;
          
          private SkillInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              SkillInfo original = result;
              result = new SkillInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override SkillInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.Descriptor; }
          }
          
          public override SkillInfo DefaultInstanceForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.DefaultInstance; }
          }
          
          public override SkillInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is SkillInfo) {
              return MergeFrom((SkillInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(SkillInfo other) {
            if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasSkillId) {
              SkillId = other.SkillId;
            }
            if (other.HasSkillLevel) {
              SkillLevel = other.SkillLevel;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_skillInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _skillInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasSkillId = input.ReadInt32(ref result.skillId_);
                  break;
                }
                case 16: {
                  result.hasSkillLevel = input.ReadInt32(ref result.skillLevel_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasSkillId {
            get { return result.hasSkillId; }
          }
          public int SkillId {
            get { return result.SkillId; }
            set { SetSkillId(value); }
          }
          public Builder SetSkillId(int value) {
            PrepareBuilder();
            result.hasSkillId = true;
            result.skillId_ = value;
            return this;
          }
          public Builder ClearSkillId() {
            PrepareBuilder();
            result.hasSkillId = false;
            result.skillId_ = 0;
            return this;
          }
          
          public bool HasSkillLevel {
            get { return result.hasSkillLevel; }
          }
          public int SkillLevel {
            get { return result.SkillLevel; }
            set { SetSkillLevel(value); }
          }
          public Builder SetSkillLevel(int value) {
            PrepareBuilder();
            result.hasSkillLevel = true;
            result.skillLevel_ = value;
            return this;
          }
          public Builder ClearSkillLevel() {
            PrepareBuilder();
            result.hasSkillLevel = false;
            result.skillLevel_ = 0;
            return this;
          }
        }
        static SkillInfo() {
          object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class EquipInfo : pb::GeneratedMessage<EquipInfo, EquipInfo.Builder> {
        private EquipInfo() { }
        private static readonly EquipInfo defaultInstance = new EquipInfo().MakeReadOnly();
        private static readonly string[] _equipInfoFieldNames = new string[] { "equip_id", "equip_level", "equip_random_property" };
        private static readonly uint[] _equipInfoFieldTags = new uint[] { 8, 16, 24 };
        public static EquipInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override EquipInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override EquipInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_EquipInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<EquipInfo, EquipInfo.Builder> InternalFieldAccessors {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_EquipInfo__FieldAccessorTable; }
        }
        
        public const int EquipIdFieldNumber = 1;
        private bool hasEquipId;
        private int equipId_;
        public bool HasEquipId {
          get { return hasEquipId; }
        }
        public int EquipId {
          get { return equipId_; }
        }
        
        public const int EquipLevelFieldNumber = 2;
        private bool hasEquipLevel;
        private int equipLevel_;
        public bool HasEquipLevel {
          get { return hasEquipLevel; }
        }
        public int EquipLevel {
          get { return equipLevel_; }
        }
        
        public const int EquipRandomPropertyFieldNumber = 3;
        private bool hasEquipRandomProperty;
        private int equipRandomProperty_;
        public bool HasEquipRandomProperty {
          get { return hasEquipRandomProperty; }
        }
        public int EquipRandomProperty {
          get { return equipRandomProperty_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasEquipId) return false;
            if (!hasEquipLevel) return false;
            if (!hasEquipRandomProperty) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _equipInfoFieldNames;
          if (hasEquipId) {
            output.WriteInt32(1, field_names[0], EquipId);
          }
          if (hasEquipLevel) {
            output.WriteInt32(2, field_names[1], EquipLevel);
          }
          if (hasEquipRandomProperty) {
            output.WriteInt32(3, field_names[2], EquipRandomProperty);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasEquipId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, EquipId);
            }
            if (hasEquipLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, EquipLevel);
            }
            if (hasEquipRandomProperty) {
              size += pb::CodedOutputStream.ComputeInt32Size(3, EquipRandomProperty);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static EquipInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static EquipInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static EquipInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static EquipInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static EquipInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static EquipInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static EquipInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static EquipInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static EquipInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static EquipInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private EquipInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(EquipInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<EquipInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(EquipInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private EquipInfo result;
          
          private EquipInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              EquipInfo original = result;
              result = new EquipInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override EquipInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.Descriptor; }
          }
          
          public override EquipInfo DefaultInstanceForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.DefaultInstance; }
          }
          
          public override EquipInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is EquipInfo) {
              return MergeFrom((EquipInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(EquipInfo other) {
            if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasEquipId) {
              EquipId = other.EquipId;
            }
            if (other.HasEquipLevel) {
              EquipLevel = other.EquipLevel;
            }
            if (other.HasEquipRandomProperty) {
              EquipRandomProperty = other.EquipRandomProperty;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_equipInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _equipInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasEquipId = input.ReadInt32(ref result.equipId_);
                  break;
                }
                case 16: {
                  result.hasEquipLevel = input.ReadInt32(ref result.equipLevel_);
                  break;
                }
                case 24: {
                  result.hasEquipRandomProperty = input.ReadInt32(ref result.equipRandomProperty_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasEquipId {
            get { return result.hasEquipId; }
          }
          public int EquipId {
            get { return result.EquipId; }
            set { SetEquipId(value); }
          }
          public Builder SetEquipId(int value) {
            PrepareBuilder();
            result.hasEquipId = true;
            result.equipId_ = value;
            return this;
          }
          public Builder ClearEquipId() {
            PrepareBuilder();
            result.hasEquipId = false;
            result.equipId_ = 0;
            return this;
          }
          
          public bool HasEquipLevel {
            get { return result.hasEquipLevel; }
          }
          public int EquipLevel {
            get { return result.EquipLevel; }
            set { SetEquipLevel(value); }
          }
          public Builder SetEquipLevel(int value) {
            PrepareBuilder();
            result.hasEquipLevel = true;
            result.equipLevel_ = value;
            return this;
          }
          public Builder ClearEquipLevel() {
            PrepareBuilder();
            result.hasEquipLevel = false;
            result.equipLevel_ = 0;
            return this;
          }
          
          public bool HasEquipRandomProperty {
            get { return result.hasEquipRandomProperty; }
          }
          public int EquipRandomProperty {
            get { return result.EquipRandomProperty; }
            set { SetEquipRandomProperty(value); }
          }
          public Builder SetEquipRandomProperty(int value) {
            PrepareBuilder();
            result.hasEquipRandomProperty = true;
            result.equipRandomProperty_ = value;
            return this;
          }
          public Builder ClearEquipRandomProperty() {
            PrepareBuilder();
            result.hasEquipRandomProperty = false;
            result.equipRandomProperty_ = 0;
            return this;
          }
        }
        static EquipInfo() {
          object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class LegacyInfo : pb::GeneratedMessage<LegacyInfo, LegacyInfo.Builder> {
        private LegacyInfo() { }
        private static readonly LegacyInfo defaultInstance = new LegacyInfo().MakeReadOnly();
        private static readonly string[] _legacyInfoFieldNames = new string[] { "legacy_id", "legacy_is_unlock", "legacy_level", "legacy_random_property" };
        private static readonly uint[] _legacyInfoFieldTags = new uint[] { 8, 32, 16, 24 };
        public static LegacyInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override LegacyInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override LegacyInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_LegacyInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<LegacyInfo, LegacyInfo.Builder> InternalFieldAccessors {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_LegacyInfo__FieldAccessorTable; }
        }
        
        public const int LegacyIdFieldNumber = 1;
        private bool hasLegacyId;
        private int legacyId_;
        public bool HasLegacyId {
          get { return hasLegacyId; }
        }
        public int LegacyId {
          get { return legacyId_; }
        }
        
        public const int LegacyLevelFieldNumber = 2;
        private bool hasLegacyLevel;
        private int legacyLevel_;
        public bool HasLegacyLevel {
          get { return hasLegacyLevel; }
        }
        public int LegacyLevel {
          get { return legacyLevel_; }
        }
        
        public const int LegacyRandomPropertyFieldNumber = 3;
        private bool hasLegacyRandomProperty;
        private int legacyRandomProperty_;
        public bool HasLegacyRandomProperty {
          get { return hasLegacyRandomProperty; }
        }
        public int LegacyRandomProperty {
          get { return legacyRandomProperty_; }
        }
        
        public const int LegacyIsUnlockFieldNumber = 4;
        private bool hasLegacyIsUnlock;
        private bool legacyIsUnlock_;
        public bool HasLegacyIsUnlock {
          get { return hasLegacyIsUnlock; }
        }
        public bool LegacyIsUnlock {
          get { return legacyIsUnlock_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasLegacyId) return false;
            if (!hasLegacyLevel) return false;
            if (!hasLegacyRandomProperty) return false;
            if (!hasLegacyIsUnlock) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _legacyInfoFieldNames;
          if (hasLegacyId) {
            output.WriteInt32(1, field_names[0], LegacyId);
          }
          if (hasLegacyLevel) {
            output.WriteInt32(2, field_names[2], LegacyLevel);
          }
          if (hasLegacyRandomProperty) {
            output.WriteInt32(3, field_names[3], LegacyRandomProperty);
          }
          if (hasLegacyIsUnlock) {
            output.WriteBool(4, field_names[1], LegacyIsUnlock);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasLegacyId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, LegacyId);
            }
            if (hasLegacyLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, LegacyLevel);
            }
            if (hasLegacyRandomProperty) {
              size += pb::CodedOutputStream.ComputeInt32Size(3, LegacyRandomProperty);
            }
            if (hasLegacyIsUnlock) {
              size += pb::CodedOutputStream.ComputeBoolSize(4, LegacyIsUnlock);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static LegacyInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static LegacyInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static LegacyInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static LegacyInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static LegacyInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private LegacyInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(LegacyInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<LegacyInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(LegacyInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private LegacyInfo result;
          
          private LegacyInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              LegacyInfo original = result;
              result = new LegacyInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override LegacyInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.Descriptor; }
          }
          
          public override LegacyInfo DefaultInstanceForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.DefaultInstance; }
          }
          
          public override LegacyInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is LegacyInfo) {
              return MergeFrom((LegacyInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(LegacyInfo other) {
            if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasLegacyId) {
              LegacyId = other.LegacyId;
            }
            if (other.HasLegacyLevel) {
              LegacyLevel = other.LegacyLevel;
            }
            if (other.HasLegacyRandomProperty) {
              LegacyRandomProperty = other.LegacyRandomProperty;
            }
            if (other.HasLegacyIsUnlock) {
              LegacyIsUnlock = other.LegacyIsUnlock;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_legacyInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _legacyInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasLegacyId = input.ReadInt32(ref result.legacyId_);
                  break;
                }
                case 16: {
                  result.hasLegacyLevel = input.ReadInt32(ref result.legacyLevel_);
                  break;
                }
                case 24: {
                  result.hasLegacyRandomProperty = input.ReadInt32(ref result.legacyRandomProperty_);
                  break;
                }
                case 32: {
                  result.hasLegacyIsUnlock = input.ReadBool(ref result.legacyIsUnlock_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasLegacyId {
            get { return result.hasLegacyId; }
          }
          public int LegacyId {
            get { return result.LegacyId; }
            set { SetLegacyId(value); }
          }
          public Builder SetLegacyId(int value) {
            PrepareBuilder();
            result.hasLegacyId = true;
            result.legacyId_ = value;
            return this;
          }
          public Builder ClearLegacyId() {
            PrepareBuilder();
            result.hasLegacyId = false;
            result.legacyId_ = 0;
            return this;
          }
          
          public bool HasLegacyLevel {
            get { return result.hasLegacyLevel; }
          }
          public int LegacyLevel {
            get { return result.LegacyLevel; }
            set { SetLegacyLevel(value); }
          }
          public Builder SetLegacyLevel(int value) {
            PrepareBuilder();
            result.hasLegacyLevel = true;
            result.legacyLevel_ = value;
            return this;
          }
          public Builder ClearLegacyLevel() {
            PrepareBuilder();
            result.hasLegacyLevel = false;
            result.legacyLevel_ = 0;
            return this;
          }
          
          public bool HasLegacyRandomProperty {
            get { return result.hasLegacyRandomProperty; }
          }
          public int LegacyRandomProperty {
            get { return result.LegacyRandomProperty; }
            set { SetLegacyRandomProperty(value); }
          }
          public Builder SetLegacyRandomProperty(int value) {
            PrepareBuilder();
            result.hasLegacyRandomProperty = true;
            result.legacyRandomProperty_ = value;
            return this;
          }
          public Builder ClearLegacyRandomProperty() {
            PrepareBuilder();
            result.hasLegacyRandomProperty = false;
            result.legacyRandomProperty_ = 0;
            return this;
          }
          
          public bool HasLegacyIsUnlock {
            get { return result.hasLegacyIsUnlock; }
          }
          public bool LegacyIsUnlock {
            get { return result.LegacyIsUnlock; }
            set { SetLegacyIsUnlock(value); }
          }
          public Builder SetLegacyIsUnlock(bool value) {
            PrepareBuilder();
            result.hasLegacyIsUnlock = true;
            result.legacyIsUnlock_ = value;
            return this;
          }
          public Builder ClearLegacyIsUnlock() {
            PrepareBuilder();
            result.hasLegacyIsUnlock = false;
            result.legacyIsUnlock_ = false;
            return this;
          }
        }
        static LegacyInfo() {
          object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class XSoulDataInfo : pb::GeneratedMessage<XSoulDataInfo, XSoulDataInfo.Builder> {
        private XSoulDataInfo() { }
        private static readonly XSoulDataInfo defaultInstance = new XSoulDataInfo().MakeReadOnly();
        private static readonly string[] _xSoulDataInfoFieldNames = new string[] { "Experience", "ItemId", "Level", "ModelLevel" };
        private static readonly uint[] _xSoulDataInfoFieldTags = new uint[] { 32, 8, 16, 24 };
        public static XSoulDataInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override XSoulDataInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override XSoulDataInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<XSoulDataInfo, XSoulDataInfo.Builder> InternalFieldAccessors {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_XSoulDataInfo__FieldAccessorTable; }
        }
        
        public const int ItemIdFieldNumber = 1;
        private bool hasItemId;
        private int itemId_;
        public bool HasItemId {
          get { return hasItemId; }
        }
        public int ItemId {
          get { return itemId_; }
        }
        
        public const int LevelFieldNumber = 2;
        private bool hasLevel;
        private int level_;
        public bool HasLevel {
          get { return hasLevel; }
        }
        public int Level {
          get { return level_; }
        }
        
        public const int ModelLevelFieldNumber = 3;
        private bool hasModelLevel;
        private int modelLevel_;
        public bool HasModelLevel {
          get { return hasModelLevel; }
        }
        public int ModelLevel {
          get { return modelLevel_; }
        }
        
        public const int ExperienceFieldNumber = 4;
        private bool hasExperience;
        private int experience_;
        public bool HasExperience {
          get { return hasExperience; }
        }
        public int Experience {
          get { return experience_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasItemId) return false;
            if (!hasLevel) return false;
            if (!hasModelLevel) return false;
            if (!hasExperience) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _xSoulDataInfoFieldNames;
          if (hasItemId) {
            output.WriteInt32(1, field_names[1], ItemId);
          }
          if (hasLevel) {
            output.WriteInt32(2, field_names[2], Level);
          }
          if (hasModelLevel) {
            output.WriteInt32(3, field_names[3], ModelLevel);
          }
          if (hasExperience) {
            output.WriteInt32(4, field_names[0], Experience);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasItemId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, ItemId);
            }
            if (hasLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, Level);
            }
            if (hasModelLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(3, ModelLevel);
            }
            if (hasExperience) {
              size += pb::CodedOutputStream.ComputeInt32Size(4, Experience);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static XSoulDataInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static XSoulDataInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static XSoulDataInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static XSoulDataInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private XSoulDataInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(XSoulDataInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<XSoulDataInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(XSoulDataInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private XSoulDataInfo result;
          
          private XSoulDataInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              XSoulDataInfo original = result;
              result = new XSoulDataInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override XSoulDataInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.Descriptor; }
          }
          
          public override XSoulDataInfo DefaultInstanceForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.DefaultInstance; }
          }
          
          public override XSoulDataInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is XSoulDataInfo) {
              return MergeFrom((XSoulDataInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(XSoulDataInfo other) {
            if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasItemId) {
              ItemId = other.ItemId;
            }
            if (other.HasLevel) {
              Level = other.Level;
            }
            if (other.HasModelLevel) {
              ModelLevel = other.ModelLevel;
            }
            if (other.HasExperience) {
              Experience = other.Experience;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_xSoulDataInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _xSoulDataInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasItemId = input.ReadInt32(ref result.itemId_);
                  break;
                }
                case 16: {
                  result.hasLevel = input.ReadInt32(ref result.level_);
                  break;
                }
                case 24: {
                  result.hasModelLevel = input.ReadInt32(ref result.modelLevel_);
                  break;
                }
                case 32: {
                  result.hasExperience = input.ReadInt32(ref result.experience_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasItemId {
            get { return result.hasItemId; }
          }
          public int ItemId {
            get { return result.ItemId; }
            set { SetItemId(value); }
          }
          public Builder SetItemId(int value) {
            PrepareBuilder();
            result.hasItemId = true;
            result.itemId_ = value;
            return this;
          }
          public Builder ClearItemId() {
            PrepareBuilder();
            result.hasItemId = false;
            result.itemId_ = 0;
            return this;
          }
          
          public bool HasLevel {
            get { return result.hasLevel; }
          }
          public int Level {
            get { return result.Level; }
            set { SetLevel(value); }
          }
          public Builder SetLevel(int value) {
            PrepareBuilder();
            result.hasLevel = true;
            result.level_ = value;
            return this;
          }
          public Builder ClearLevel() {
            PrepareBuilder();
            result.hasLevel = false;
            result.level_ = 0;
            return this;
          }
          
          public bool HasModelLevel {
            get { return result.hasModelLevel; }
          }
          public int ModelLevel {
            get { return result.ModelLevel; }
            set { SetModelLevel(value); }
          }
          public Builder SetModelLevel(int value) {
            PrepareBuilder();
            result.hasModelLevel = true;
            result.modelLevel_ = value;
            return this;
          }
          public Builder ClearModelLevel() {
            PrepareBuilder();
            result.hasModelLevel = false;
            result.modelLevel_ = 0;
            return this;
          }
          
          public bool HasExperience {
            get { return result.hasExperience; }
          }
          public int Experience {
            get { return result.Experience; }
            set { SetExperience(value); }
          }
          public Builder SetExperience(int value) {
            PrepareBuilder();
            result.hasExperience = true;
            result.experience_ = value;
            return this;
          }
          public Builder ClearExperience() {
            PrepareBuilder();
            result.hasExperience = false;
            result.experience_ = 0;
            return this;
          }
        }
        static XSoulDataInfo() {
          object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class PartnerInfo : pb::GeneratedMessage<PartnerInfo, PartnerInfo.Builder> {
        private PartnerInfo() { }
        private static readonly PartnerInfo defaultInstance = new PartnerInfo().MakeReadOnly();
        private static readonly string[] _partnerInfoFieldNames = new string[] { "partner_id", "partner_level", "partner_stage" };
        private static readonly uint[] _partnerInfoFieldTags = new uint[] { 8, 16, 24 };
        public static PartnerInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override PartnerInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override PartnerInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_PartnerInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<PartnerInfo, PartnerInfo.Builder> InternalFieldAccessors {
          get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_RoomUserInfo_PartnerInfo__FieldAccessorTable; }
        }
        
        public const int PartnerIdFieldNumber = 1;
        private bool hasPartnerId;
        private int partnerId_;
        public bool HasPartnerId {
          get { return hasPartnerId; }
        }
        public int PartnerId {
          get { return partnerId_; }
        }
        
        public const int PartnerLevelFieldNumber = 2;
        private bool hasPartnerLevel;
        private int partnerLevel_;
        public bool HasPartnerLevel {
          get { return hasPartnerLevel; }
        }
        public int PartnerLevel {
          get { return partnerLevel_; }
        }
        
        public const int PartnerStageFieldNumber = 3;
        private bool hasPartnerStage;
        private int partnerStage_;
        public bool HasPartnerStage {
          get { return hasPartnerStage; }
        }
        public int PartnerStage {
          get { return partnerStage_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasPartnerId) return false;
            if (!hasPartnerLevel) return false;
            if (!hasPartnerStage) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _partnerInfoFieldNames;
          if (hasPartnerId) {
            output.WriteInt32(1, field_names[0], PartnerId);
          }
          if (hasPartnerLevel) {
            output.WriteInt32(2, field_names[1], PartnerLevel);
          }
          if (hasPartnerStage) {
            output.WriteInt32(3, field_names[2], PartnerStage);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasPartnerId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, PartnerId);
            }
            if (hasPartnerLevel) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, PartnerLevel);
            }
            if (hasPartnerStage) {
              size += pb::CodedOutputStream.ComputeInt32Size(3, PartnerStage);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static PartnerInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static PartnerInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static PartnerInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static PartnerInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static PartnerInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private PartnerInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(PartnerInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<PartnerInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(PartnerInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private PartnerInfo result;
          
          private PartnerInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              PartnerInfo original = result;
              result = new PartnerInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override PartnerInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.Descriptor; }
          }
          
          public override PartnerInfo DefaultInstanceForType {
            get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.DefaultInstance; }
          }
          
          public override PartnerInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is PartnerInfo) {
              return MergeFrom((PartnerInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(PartnerInfo other) {
            if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasPartnerId) {
              PartnerId = other.PartnerId;
            }
            if (other.HasPartnerLevel) {
              PartnerLevel = other.PartnerLevel;
            }
            if (other.HasPartnerStage) {
              PartnerStage = other.PartnerStage;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_partnerInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _partnerInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasPartnerId = input.ReadInt32(ref result.partnerId_);
                  break;
                }
                case 16: {
                  result.hasPartnerLevel = input.ReadInt32(ref result.partnerLevel_);
                  break;
                }
                case 24: {
                  result.hasPartnerStage = input.ReadInt32(ref result.partnerStage_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasPartnerId {
            get { return result.hasPartnerId; }
          }
          public int PartnerId {
            get { return result.PartnerId; }
            set { SetPartnerId(value); }
          }
          public Builder SetPartnerId(int value) {
            PrepareBuilder();
            result.hasPartnerId = true;
            result.partnerId_ = value;
            return this;
          }
          public Builder ClearPartnerId() {
            PrepareBuilder();
            result.hasPartnerId = false;
            result.partnerId_ = 0;
            return this;
          }
          
          public bool HasPartnerLevel {
            get { return result.hasPartnerLevel; }
          }
          public int PartnerLevel {
            get { return result.PartnerLevel; }
            set { SetPartnerLevel(value); }
          }
          public Builder SetPartnerLevel(int value) {
            PrepareBuilder();
            result.hasPartnerLevel = true;
            result.partnerLevel_ = value;
            return this;
          }
          public Builder ClearPartnerLevel() {
            PrepareBuilder();
            result.hasPartnerLevel = false;
            result.partnerLevel_ = 0;
            return this;
          }
          
          public bool HasPartnerStage {
            get { return result.hasPartnerStage; }
          }
          public int PartnerStage {
            get { return result.PartnerStage; }
            set { SetPartnerStage(value); }
          }
          public Builder SetPartnerStage(int value) {
            PrepareBuilder();
            result.hasPartnerStage = true;
            result.partnerStage_ = value;
            return this;
          }
          public Builder ClearPartnerStage() {
            PrepareBuilder();
            result.hasPartnerStage = false;
            result.partnerStage_ = 0;
            return this;
          }
        }
        static PartnerInfo() {
          object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private ulong guid_;
    public bool HasGuid {
      get { return hasGuid; }
    }
    public ulong Guid {
      get { return guid_; }
    }
    
    public const int NickFieldNumber = 2;
    private bool hasNick;
    private string nick_ = "";
    public bool HasNick {
      get { return hasNick; }
    }
    public string Nick {
      get { return nick_; }
    }
    
    public const int KeyFieldNumber = 3;
    private bool hasKey;
    private uint key_;
    public bool HasKey {
      get { return hasKey; }
    }
    public uint Key {
      get { return key_; }
    }
    
    public const int HeroFieldNumber = 4;
    private bool hasHero;
    private int hero_;
    public bool HasHero {
      get { return hasHero; }
    }
    public int Hero {
      get { return hero_; }
    }
    
    public const int ArgScoreFieldNumber = 5;
    private bool hasArgScore;
    private int argScore_;
    public bool HasArgScore {
      get { return hasArgScore; }
    }
    public int ArgScore {
      get { return argScore_; }
    }
    
    public const int CampFieldNumber = 6;
    private bool hasCamp;
    private int camp_;
    public bool HasCamp {
      get { return hasCamp; }
    }
    public int Camp {
      get { return camp_; }
    }
    
    public const int IsMachineFieldNumber = 7;
    private bool hasIsMachine;
    private bool isMachine_;
    public bool HasIsMachine {
      get { return hasIsMachine; }
    }
    public bool IsMachine {
      get { return isMachine_; }
    }
    
    public const int ShopEquipmentsIdFieldNumber = 8;
    private pbc::PopsicleList<int> shopEquipmentsId_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ShopEquipmentsIdList {
      get { return pbc::Lists.AsReadOnly(shopEquipmentsId_); }
    }
    public int ShopEquipmentsIdCount {
      get { return shopEquipmentsId_.Count; }
    }
    public int GetShopEquipmentsId(int index) {
      return shopEquipmentsId_[index];
    }
    
    public const int SkillsFieldNumber = 9;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo> skills_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo> SkillsList {
      get { return skills_; }
    }
    public int SkillsCount {
      get { return skills_.Count; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo GetSkills(int index) {
      return skills_[index];
    }
    
    public const int PresetIndexFieldNumber = 10;
    private bool hasPresetIndex;
    private int presetIndex_;
    public bool HasPresetIndex {
      get { return hasPresetIndex; }
    }
    public int PresetIndex {
      get { return presetIndex_; }
    }
    
    public const int EquipsFieldNumber = 11;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo> equips_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo> EquipsList {
      get { return equips_; }
    }
    public int EquipsCount {
      get { return equips_.Count; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo GetEquips(int index) {
      return equips_[index];
    }
    
    public const int LevelFieldNumber = 12;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int LegacysFieldNumber = 13;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo> legacys_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo> LegacysList {
      get { return legacys_; }
    }
    public int LegacysCount {
      get { return legacys_.Count; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo GetLegacys(int index) {
      return legacys_[index];
    }
    
    public const int XSoulsFieldNumber = 14;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo> xSouls_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo> XSoulsList {
      get { return xSouls_; }
    }
    public int XSoulsCount {
      get { return xSouls_.Count; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo GetXSouls(int index) {
      return xSouls_[index];
    }
    
    public const int PartnerFieldNumber = 15;
    private bool hasPartner;
    private global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo partner_;
    public bool HasPartner {
      get { return hasPartner; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo Partner {
      get { return partner_ ?? global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasNick) return false;
        if (!hasKey) return false;
        if (!hasHero) return false;
        if (!hasArgScore) return false;
        if (!hasCamp) return false;
        if (!hasIsMachine) return false;
        if (!hasLevel) return false;
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo element in SkillsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo element in EquipsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo element in LegacysList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo element in XSoulsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasPartner) {
          if (!Partner.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLRRoomUserInfoFieldNames;
      if (hasGuid) {
        output.WriteUInt64(1, field_names[3], Guid);
      }
      if (hasNick) {
        output.WriteString(2, field_names[9], Nick);
      }
      if (hasKey) {
        output.WriteUInt32(3, field_names[6], Key);
      }
      if (hasHero) {
        output.WriteInt32(4, field_names[4], Hero);
      }
      if (hasArgScore) {
        output.WriteInt32(5, field_names[0], ArgScore);
      }
      if (hasCamp) {
        output.WriteInt32(6, field_names[1], Camp);
      }
      if (hasIsMachine) {
        output.WriteBool(7, field_names[5], IsMachine);
      }
      if (shopEquipmentsId_.Count > 0) {
        output.WriteInt32Array(8, field_names[12], shopEquipmentsId_);
      }
      if (skills_.Count > 0) {
        output.WriteMessageArray(9, field_names[13], skills_);
      }
      if (hasPresetIndex) {
        output.WriteInt32(10, field_names[11], PresetIndex);
      }
      if (equips_.Count > 0) {
        output.WriteMessageArray(11, field_names[2], equips_);
      }
      if (hasLevel) {
        output.WriteInt32(12, field_names[8], Level);
      }
      if (legacys_.Count > 0) {
        output.WriteMessageArray(13, field_names[7], legacys_);
      }
      if (xSouls_.Count > 0) {
        output.WriteMessageArray(14, field_names[14], xSouls_);
      }
      if (hasPartner) {
        output.WriteMessage(15, field_names[10], Partner);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Guid);
        }
        if (hasNick) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Nick);
        }
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Key);
        }
        if (hasHero) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Hero);
        }
        if (hasArgScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ArgScore);
        }
        if (hasCamp) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Camp);
        }
        if (hasIsMachine) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsMachine);
        }
        {
          int dataSize = 0;
          foreach (int element in ShopEquipmentsIdList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * shopEquipmentsId_.Count;
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo element in SkillsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, element);
        }
        if (hasPresetIndex) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, PresetIndex);
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo element in EquipsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, element);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, Level);
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo element in LegacysList) {
          size += pb::CodedOutputStream.ComputeMessageSize(13, element);
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo element in XSoulsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(14, element);
        }
        if (hasPartner) {
          size += pb::CodedOutputStream.ComputeMessageSize(15, Partner);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LR_RoomUserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_RoomUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LR_RoomUserInfo MakeReadOnly() {
      shopEquipmentsId_.MakeReadOnly();
      skills_.MakeReadOnly();
      equips_.MakeReadOnly();
      legacys_.MakeReadOnly();
      xSouls_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LR_RoomUserInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LR_RoomUserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LR_RoomUserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LR_RoomUserInfo result;
      
      private Msg_LR_RoomUserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LR_RoomUserInfo original = result;
          result = new Msg_LR_RoomUserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LR_RoomUserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Descriptor; }
      }
      
      public override Msg_LR_RoomUserInfo DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_LR_RoomUserInfo.DefaultInstance; }
      }
      
      public override Msg_LR_RoomUserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LR_RoomUserInfo) {
          return MergeFrom((Msg_LR_RoomUserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LR_RoomUserInfo other) {
        if (other == global::Lobby_RoomServer.Msg_LR_RoomUserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasNick) {
          Nick = other.Nick;
        }
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasHero) {
          Hero = other.Hero;
        }
        if (other.HasArgScore) {
          ArgScore = other.ArgScore;
        }
        if (other.HasCamp) {
          Camp = other.Camp;
        }
        if (other.HasIsMachine) {
          IsMachine = other.IsMachine;
        }
        if (other.shopEquipmentsId_.Count != 0) {
          result.shopEquipmentsId_.Add(other.shopEquipmentsId_);
        }
        if (other.skills_.Count != 0) {
          result.skills_.Add(other.skills_);
        }
        if (other.HasPresetIndex) {
          PresetIndex = other.PresetIndex;
        }
        if (other.equips_.Count != 0) {
          result.equips_.Add(other.equips_);
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.legacys_.Count != 0) {
          result.legacys_.Add(other.legacys_);
        }
        if (other.xSouls_.Count != 0) {
          result.xSouls_.Add(other.xSouls_);
        }
        if (other.HasPartner) {
          MergePartner(other.Partner);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLRRoomUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLRRoomUserInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGuid = input.ReadUInt64(ref result.guid_);
              break;
            }
            case 18: {
              result.hasNick = input.ReadString(ref result.nick_);
              break;
            }
            case 24: {
              result.hasKey = input.ReadUInt32(ref result.key_);
              break;
            }
            case 32: {
              result.hasHero = input.ReadInt32(ref result.hero_);
              break;
            }
            case 40: {
              result.hasArgScore = input.ReadInt32(ref result.argScore_);
              break;
            }
            case 48: {
              result.hasCamp = input.ReadInt32(ref result.camp_);
              break;
            }
            case 56: {
              result.hasIsMachine = input.ReadBool(ref result.isMachine_);
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.shopEquipmentsId_);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.skills_, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 80: {
              result.hasPresetIndex = input.ReadInt32(ref result.presetIndex_);
              break;
            }
            case 90: {
              input.ReadMessageArray(tag, field_name, result.equips_, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 96: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 106: {
              input.ReadMessageArray(tag, field_name, result.legacys_, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.xSouls_, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 122: {
              global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.Builder subBuilder = global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.CreateBuilder();
              if (result.hasPartner) {
                subBuilder.MergeFrom(Partner);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Partner = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public ulong Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(ulong value) {
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = 0UL;
        return this;
      }
      
      public bool HasNick {
        get { return result.hasNick; }
      }
      public string Nick {
        get { return result.Nick; }
        set { SetNick(value); }
      }
      public Builder SetNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNick = true;
        result.nick_ = value;
        return this;
      }
      public Builder ClearNick() {
        PrepareBuilder();
        result.hasNick = false;
        result.nick_ = "";
        return this;
      }
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public uint Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(uint value) {
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = 0;
        return this;
      }
      
      public bool HasHero {
        get { return result.hasHero; }
      }
      public int Hero {
        get { return result.Hero; }
        set { SetHero(value); }
      }
      public Builder SetHero(int value) {
        PrepareBuilder();
        result.hasHero = true;
        result.hero_ = value;
        return this;
      }
      public Builder ClearHero() {
        PrepareBuilder();
        result.hasHero = false;
        result.hero_ = 0;
        return this;
      }
      
      public bool HasArgScore {
        get { return result.hasArgScore; }
      }
      public int ArgScore {
        get { return result.ArgScore; }
        set { SetArgScore(value); }
      }
      public Builder SetArgScore(int value) {
        PrepareBuilder();
        result.hasArgScore = true;
        result.argScore_ = value;
        return this;
      }
      public Builder ClearArgScore() {
        PrepareBuilder();
        result.hasArgScore = false;
        result.argScore_ = 0;
        return this;
      }
      
      public bool HasCamp {
        get { return result.hasCamp; }
      }
      public int Camp {
        get { return result.Camp; }
        set { SetCamp(value); }
      }
      public Builder SetCamp(int value) {
        PrepareBuilder();
        result.hasCamp = true;
        result.camp_ = value;
        return this;
      }
      public Builder ClearCamp() {
        PrepareBuilder();
        result.hasCamp = false;
        result.camp_ = 0;
        return this;
      }
      
      public bool HasIsMachine {
        get { return result.hasIsMachine; }
      }
      public bool IsMachine {
        get { return result.IsMachine; }
        set { SetIsMachine(value); }
      }
      public Builder SetIsMachine(bool value) {
        PrepareBuilder();
        result.hasIsMachine = true;
        result.isMachine_ = value;
        return this;
      }
      public Builder ClearIsMachine() {
        PrepareBuilder();
        result.hasIsMachine = false;
        result.isMachine_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<int> ShopEquipmentsIdList {
        get { return PrepareBuilder().shopEquipmentsId_; }
      }
      public int ShopEquipmentsIdCount {
        get { return result.ShopEquipmentsIdCount; }
      }
      public int GetShopEquipmentsId(int index) {
        return result.GetShopEquipmentsId(index);
      }
      public Builder SetShopEquipmentsId(int index, int value) {
        PrepareBuilder();
        result.shopEquipmentsId_[index] = value;
        return this;
      }
      public Builder AddShopEquipmentsId(int value) {
        PrepareBuilder();
        result.shopEquipmentsId_.Add(value);
        return this;
      }
      public Builder AddRangeShopEquipmentsId(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.shopEquipmentsId_.Add(values);
        return this;
      }
      public Builder ClearShopEquipmentsId() {
        PrepareBuilder();
        result.shopEquipmentsId_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo> SkillsList {
        get { return PrepareBuilder().skills_; }
      }
      public int SkillsCount {
        get { return result.SkillsCount; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo GetSkills(int index) {
        return result.GetSkills(index);
      }
      public Builder SetSkills(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.skills_[index] = value;
        return this;
      }
      public Builder SetSkills(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.skills_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSkills(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.skills_.Add(value);
        return this;
      }
      public Builder AddSkills(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.skills_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSkills(scg::IEnumerable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.SkillInfo> values) {
        PrepareBuilder();
        result.skills_.Add(values);
        return this;
      }
      public Builder ClearSkills() {
        PrepareBuilder();
        result.skills_.Clear();
        return this;
      }
      
      public bool HasPresetIndex {
        get { return result.hasPresetIndex; }
      }
      public int PresetIndex {
        get { return result.PresetIndex; }
        set { SetPresetIndex(value); }
      }
      public Builder SetPresetIndex(int value) {
        PrepareBuilder();
        result.hasPresetIndex = true;
        result.presetIndex_ = value;
        return this;
      }
      public Builder ClearPresetIndex() {
        PrepareBuilder();
        result.hasPresetIndex = false;
        result.presetIndex_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo> EquipsList {
        get { return PrepareBuilder().equips_; }
      }
      public int EquipsCount {
        get { return result.EquipsCount; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo GetEquips(int index) {
        return result.GetEquips(index);
      }
      public Builder SetEquips(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equips_[index] = value;
        return this;
      }
      public Builder SetEquips(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equips_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquips(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equips_.Add(value);
        return this;
      }
      public Builder AddEquips(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equips_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquips(scg::IEnumerable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.EquipInfo> values) {
        PrepareBuilder();
        result.equips_.Add(values);
        return this;
      }
      public Builder ClearEquips() {
        PrepareBuilder();
        result.equips_.Clear();
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo> LegacysList {
        get { return PrepareBuilder().legacys_; }
      }
      public int LegacysCount {
        get { return result.LegacysCount; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo GetLegacys(int index) {
        return result.GetLegacys(index);
      }
      public Builder SetLegacys(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legacys_[index] = value;
        return this;
      }
      public Builder SetLegacys(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legacys_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegacys(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legacys_.Add(value);
        return this;
      }
      public Builder AddLegacys(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legacys_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegacys(scg::IEnumerable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.LegacyInfo> values) {
        PrepareBuilder();
        result.legacys_.Add(values);
        return this;
      }
      public Builder ClearLegacys() {
        PrepareBuilder();
        result.legacys_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo> XSoulsList {
        get { return PrepareBuilder().xSouls_; }
      }
      public int XSoulsCount {
        get { return result.XSoulsCount; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo GetXSouls(int index) {
        return result.GetXSouls(index);
      }
      public Builder SetXSouls(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.xSouls_[index] = value;
        return this;
      }
      public Builder SetXSouls(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.xSouls_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddXSouls(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.xSouls_.Add(value);
        return this;
      }
      public Builder AddXSouls(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.xSouls_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeXSouls(scg::IEnumerable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.XSoulDataInfo> values) {
        PrepareBuilder();
        result.xSouls_.Add(values);
        return this;
      }
      public Builder ClearXSouls() {
        PrepareBuilder();
        result.xSouls_.Clear();
        return this;
      }
      
      public bool HasPartner {
       get { return result.hasPartner; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo Partner {
        get { return result.Partner; }
        set { SetPartner(value); }
      }
      public Builder SetPartner(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartner = true;
        result.partner_ = value;
        return this;
      }
      public Builder SetPartner(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartner = true;
        result.partner_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartner(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartner &&
            result.partner_ != global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.DefaultInstance) {
            result.partner_ = global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Types.PartnerInfo.CreateBuilder(result.partner_).MergeFrom(value).BuildPartial();
        } else {
          result.partner_ = value;
        }
        result.hasPartner = true;
        return this;
      }
      public Builder ClearPartner() {
        PrepareBuilder();
        result.hasPartner = false;
        result.partner_ = null;
        return this;
      }
    }
    static Msg_LR_RoomUserInfo() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LR_ReconnectUser : pb::GeneratedMessage<Msg_LR_ReconnectUser, Msg_LR_ReconnectUser.Builder> {
    private Msg_LR_ReconnectUser() { }
    private static readonly Msg_LR_ReconnectUser defaultInstance = new Msg_LR_ReconnectUser().MakeReadOnly();
    private static readonly string[] _msgLRReconnectUserFieldNames = new string[] { "RoomID", "UserGuid" };
    private static readonly uint[] _msgLRReconnectUserFieldTags = new uint[] { 16, 8 };
    public static Msg_LR_ReconnectUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LR_ReconnectUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LR_ReconnectUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_ReconnectUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LR_ReconnectUser, Msg_LR_ReconnectUser.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_ReconnectUser__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private ulong userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public ulong UserGuid {
      get { return userGuid_; }
    }
    
    public const int RoomIDFieldNumber = 2;
    private bool hasRoomID;
    private int roomID_;
    public bool HasRoomID {
      get { return hasRoomID; }
    }
    public int RoomID {
      get { return roomID_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasRoomID) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLRReconnectUserFieldNames;
      if (hasUserGuid) {
        output.WriteUInt64(1, field_names[1], UserGuid);
      }
      if (hasRoomID) {
        output.WriteInt32(2, field_names[0], RoomID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserGuid);
        }
        if (hasRoomID) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoomID);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LR_ReconnectUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_ReconnectUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LR_ReconnectUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LR_ReconnectUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LR_ReconnectUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LR_ReconnectUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LR_ReconnectUser result;
      
      private Msg_LR_ReconnectUser PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LR_ReconnectUser original = result;
          result = new Msg_LR_ReconnectUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LR_ReconnectUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_LR_ReconnectUser.Descriptor; }
      }
      
      public override Msg_LR_ReconnectUser DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_LR_ReconnectUser.DefaultInstance; }
      }
      
      public override Msg_LR_ReconnectUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LR_ReconnectUser) {
          return MergeFrom((Msg_LR_ReconnectUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LR_ReconnectUser other) {
        if (other == global::Lobby_RoomServer.Msg_LR_ReconnectUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasRoomID) {
          RoomID = other.RoomID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLRReconnectUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLRReconnectUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadUInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              result.hasRoomID = input.ReadInt32(ref result.roomID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public ulong UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(ulong value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0UL;
        return this;
      }
      
      public bool HasRoomID {
        get { return result.hasRoomID; }
      }
      public int RoomID {
        get { return result.RoomID; }
        set { SetRoomID(value); }
      }
      public Builder SetRoomID(int value) {
        PrepareBuilder();
        result.hasRoomID = true;
        result.roomID_ = value;
        return this;
      }
      public Builder ClearRoomID() {
        PrepareBuilder();
        result.hasRoomID = false;
        result.roomID_ = 0;
        return this;
      }
    }
    static Msg_LR_ReconnectUser() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_ReplyReconnectUser : pb::GeneratedMessage<Msg_RL_ReplyReconnectUser, Msg_RL_ReplyReconnectUser.Builder> {
    private Msg_RL_ReplyReconnectUser() { }
    private static readonly Msg_RL_ReplyReconnectUser defaultInstance = new Msg_RL_ReplyReconnectUser().MakeReadOnly();
    private static readonly string[] _msgRLReplyReconnectUserFieldNames = new string[] { "IsSuccess", "RoomID", "UserGuid" };
    private static readonly uint[] _msgRLReplyReconnectUserFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_RL_ReplyReconnectUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_ReplyReconnectUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_ReplyReconnectUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_ReplyReconnectUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_ReplyReconnectUser, Msg_RL_ReplyReconnectUser.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_ReplyReconnectUser__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private ulong userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public ulong UserGuid {
      get { return userGuid_; }
    }
    
    public const int RoomIDFieldNumber = 2;
    private bool hasRoomID;
    private int roomID_;
    public bool HasRoomID {
      get { return hasRoomID; }
    }
    public int RoomID {
      get { return roomID_; }
    }
    
    public const int IsSuccessFieldNumber = 3;
    private bool hasIsSuccess;
    private bool isSuccess_;
    public bool HasIsSuccess {
      get { return hasIsSuccess; }
    }
    public bool IsSuccess {
      get { return isSuccess_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasRoomID) return false;
        if (!hasIsSuccess) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLReplyReconnectUserFieldNames;
      if (hasUserGuid) {
        output.WriteUInt64(1, field_names[2], UserGuid);
      }
      if (hasRoomID) {
        output.WriteInt32(2, field_names[1], RoomID);
      }
      if (hasIsSuccess) {
        output.WriteBool(3, field_names[0], IsSuccess);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserGuid);
        }
        if (hasRoomID) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoomID);
        }
        if (hasIsSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsSuccess);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_ReplyReconnectUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_ReplyReconnectUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_ReplyReconnectUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_ReplyReconnectUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_ReplyReconnectUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_ReplyReconnectUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_ReplyReconnectUser result;
      
      private Msg_RL_ReplyReconnectUser PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_ReplyReconnectUser original = result;
          result = new Msg_RL_ReplyReconnectUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_ReplyReconnectUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser.Descriptor; }
      }
      
      public override Msg_RL_ReplyReconnectUser DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser.DefaultInstance; }
      }
      
      public override Msg_RL_ReplyReconnectUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_ReplyReconnectUser) {
          return MergeFrom((Msg_RL_ReplyReconnectUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_ReplyReconnectUser other) {
        if (other == global::Lobby_RoomServer.Msg_RL_ReplyReconnectUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasRoomID) {
          RoomID = other.RoomID;
        }
        if (other.HasIsSuccess) {
          IsSuccess = other.IsSuccess;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLReplyReconnectUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLReplyReconnectUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadUInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              result.hasRoomID = input.ReadInt32(ref result.roomID_);
              break;
            }
            case 24: {
              result.hasIsSuccess = input.ReadBool(ref result.isSuccess_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public ulong UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(ulong value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0UL;
        return this;
      }
      
      public bool HasRoomID {
        get { return result.hasRoomID; }
      }
      public int RoomID {
        get { return result.RoomID; }
        set { SetRoomID(value); }
      }
      public Builder SetRoomID(int value) {
        PrepareBuilder();
        result.hasRoomID = true;
        result.roomID_ = value;
        return this;
      }
      public Builder ClearRoomID() {
        PrepareBuilder();
        result.hasRoomID = false;
        result.roomID_ = 0;
        return this;
      }
      
      public bool HasIsSuccess {
        get { return result.hasIsSuccess; }
      }
      public bool IsSuccess {
        get { return result.IsSuccess; }
        set { SetIsSuccess(value); }
      }
      public Builder SetIsSuccess(bool value) {
        PrepareBuilder();
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder ClearIsSuccess() {
        PrepareBuilder();
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
    }
    static Msg_RL_ReplyReconnectUser() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LR_CreateBattleRoom : pb::GeneratedMessage<Msg_LR_CreateBattleRoom, Msg_LR_CreateBattleRoom.Builder> {
    private Msg_LR_CreateBattleRoom() { }
    private static readonly Msg_LR_CreateBattleRoom defaultInstance = new Msg_LR_CreateBattleRoom().MakeReadOnly();
    private static readonly string[] _msgLRCreateBattleRoomFieldNames = new string[] { "RoomId", "SceneType", "Users" };
    private static readonly uint[] _msgLRCreateBattleRoomFieldTags = new uint[] { 8, 16, 26 };
    public static Msg_LR_CreateBattleRoom DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LR_CreateBattleRoom DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LR_CreateBattleRoom ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_CreateBattleRoom__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LR_CreateBattleRoom, Msg_LR_CreateBattleRoom.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_CreateBattleRoom__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private int roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public int RoomId {
      get { return roomId_; }
    }
    
    public const int SceneTypeFieldNumber = 2;
    private bool hasSceneType;
    private int sceneType_;
    public bool HasSceneType {
      get { return hasSceneType; }
    }
    public int SceneType {
      get { return sceneType_; }
    }
    
    public const int UsersFieldNumber = 3;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo> users_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo> UsersList {
      get { return users_; }
    }
    public int UsersCount {
      get { return users_.Count; }
    }
    public global::Lobby_RoomServer.Msg_LR_RoomUserInfo GetUsers(int index) {
      return users_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomId) return false;
        if (!hasSceneType) return false;
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo element in UsersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLRCreateBattleRoomFieldNames;
      if (hasRoomId) {
        output.WriteInt32(1, field_names[0], RoomId);
      }
      if (hasSceneType) {
        output.WriteInt32(2, field_names[1], SceneType);
      }
      if (users_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], users_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoomId);
        }
        if (hasSceneType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, SceneType);
        }
        foreach (global::Lobby_RoomServer.Msg_LR_RoomUserInfo element in UsersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LR_CreateBattleRoom ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_CreateBattleRoom ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LR_CreateBattleRoom MakeReadOnly() {
      users_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LR_CreateBattleRoom prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LR_CreateBattleRoom, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LR_CreateBattleRoom cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LR_CreateBattleRoom result;
      
      private Msg_LR_CreateBattleRoom PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LR_CreateBattleRoom original = result;
          result = new Msg_LR_CreateBattleRoom();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LR_CreateBattleRoom MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_LR_CreateBattleRoom.Descriptor; }
      }
      
      public override Msg_LR_CreateBattleRoom DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_LR_CreateBattleRoom.DefaultInstance; }
      }
      
      public override Msg_LR_CreateBattleRoom BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LR_CreateBattleRoom) {
          return MergeFrom((Msg_LR_CreateBattleRoom) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LR_CreateBattleRoom other) {
        if (other == global::Lobby_RoomServer.Msg_LR_CreateBattleRoom.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasSceneType) {
          SceneType = other.SceneType;
        }
        if (other.users_.Count != 0) {
          result.users_.Add(other.users_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLRCreateBattleRoomFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLRCreateBattleRoomFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadInt32(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasSceneType = input.ReadInt32(ref result.sceneType_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.users_, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public int RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(int value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0;
        return this;
      }
      
      public bool HasSceneType {
        get { return result.hasSceneType; }
      }
      public int SceneType {
        get { return result.SceneType; }
        set { SetSceneType(value); }
      }
      public Builder SetSceneType(int value) {
        PrepareBuilder();
        result.hasSceneType = true;
        result.sceneType_ = value;
        return this;
      }
      public Builder ClearSceneType() {
        PrepareBuilder();
        result.hasSceneType = false;
        result.sceneType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_LR_RoomUserInfo> UsersList {
        get { return PrepareBuilder().users_; }
      }
      public int UsersCount {
        get { return result.UsersCount; }
      }
      public global::Lobby_RoomServer.Msg_LR_RoomUserInfo GetUsers(int index) {
        return result.GetUsers(index);
      }
      public Builder SetUsers(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_[index] = value;
        return this;
      }
      public Builder SetUsers(int index, global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.users_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUsers(global::Lobby_RoomServer.Msg_LR_RoomUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_.Add(value);
        return this;
      }
      public Builder AddUsers(global::Lobby_RoomServer.Msg_LR_RoomUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.users_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUsers(scg::IEnumerable<global::Lobby_RoomServer.Msg_LR_RoomUserInfo> values) {
        PrepareBuilder();
        result.users_.Add(values);
        return this;
      }
      public Builder ClearUsers() {
        PrepareBuilder();
        result.users_.Clear();
        return this;
      }
    }
    static Msg_LR_CreateBattleRoom() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_ReplyCreateBattleRoom : pb::GeneratedMessage<Msg_RL_ReplyCreateBattleRoom, Msg_RL_ReplyCreateBattleRoom.Builder> {
    private Msg_RL_ReplyCreateBattleRoom() { }
    private static readonly Msg_RL_ReplyCreateBattleRoom defaultInstance = new Msg_RL_ReplyCreateBattleRoom().MakeReadOnly();
    private static readonly string[] _msgRLReplyCreateBattleRoomFieldNames = new string[] { "IsSuccess", "RoomId" };
    private static readonly uint[] _msgRLReplyCreateBattleRoomFieldTags = new uint[] { 16, 8 };
    public static Msg_RL_ReplyCreateBattleRoom DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_ReplyCreateBattleRoom DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_ReplyCreateBattleRoom ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_ReplyCreateBattleRoom__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_ReplyCreateBattleRoom, Msg_RL_ReplyCreateBattleRoom.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_ReplyCreateBattleRoom__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private int roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public int RoomId {
      get { return roomId_; }
    }
    
    public const int IsSuccessFieldNumber = 2;
    private bool hasIsSuccess;
    private bool isSuccess_;
    public bool HasIsSuccess {
      get { return hasIsSuccess; }
    }
    public bool IsSuccess {
      get { return isSuccess_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomId) return false;
        if (!hasIsSuccess) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLReplyCreateBattleRoomFieldNames;
      if (hasRoomId) {
        output.WriteInt32(1, field_names[1], RoomId);
      }
      if (hasIsSuccess) {
        output.WriteBool(2, field_names[0], IsSuccess);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoomId);
        }
        if (hasIsSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsSuccess);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_ReplyCreateBattleRoom ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_ReplyCreateBattleRoom MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_ReplyCreateBattleRoom prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_ReplyCreateBattleRoom, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_ReplyCreateBattleRoom cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_ReplyCreateBattleRoom result;
      
      private Msg_RL_ReplyCreateBattleRoom PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_ReplyCreateBattleRoom original = result;
          result = new Msg_RL_ReplyCreateBattleRoom();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_ReplyCreateBattleRoom MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom.Descriptor; }
      }
      
      public override Msg_RL_ReplyCreateBattleRoom DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom.DefaultInstance; }
      }
      
      public override Msg_RL_ReplyCreateBattleRoom BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_ReplyCreateBattleRoom) {
          return MergeFrom((Msg_RL_ReplyCreateBattleRoom) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_ReplyCreateBattleRoom other) {
        if (other == global::Lobby_RoomServer.Msg_RL_ReplyCreateBattleRoom.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasIsSuccess) {
          IsSuccess = other.IsSuccess;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLReplyCreateBattleRoomFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLReplyCreateBattleRoomFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadInt32(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasIsSuccess = input.ReadBool(ref result.isSuccess_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public int RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(int value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0;
        return this;
      }
      
      public bool HasIsSuccess {
        get { return result.hasIsSuccess; }
      }
      public bool IsSuccess {
        get { return result.IsSuccess; }
        set { SetIsSuccess(value); }
      }
      public Builder SetIsSuccess(bool value) {
        PrepareBuilder();
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder ClearIsSuccess() {
        PrepareBuilder();
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
    }
    static Msg_RL_ReplyCreateBattleRoom() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_RoomServerUpdateInfo : pb::GeneratedMessage<Msg_RL_RoomServerUpdateInfo, Msg_RL_RoomServerUpdateInfo.Builder> {
    private Msg_RL_RoomServerUpdateInfo() { }
    private static readonly Msg_RL_RoomServerUpdateInfo defaultInstance = new Msg_RL_RoomServerUpdateInfo().MakeReadOnly();
    private static readonly string[] _msgRLRoomServerUpdateInfoFieldNames = new string[] { "IdleRoomNum", "ServerName", "UserNum" };
    private static readonly uint[] _msgRLRoomServerUpdateInfoFieldTags = new uint[] { 16, 10, 24 };
    public static Msg_RL_RoomServerUpdateInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_RoomServerUpdateInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_RoomServerUpdateInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_RoomServerUpdateInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_RoomServerUpdateInfo, Msg_RL_RoomServerUpdateInfo.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_RoomServerUpdateInfo__FieldAccessorTable; }
    }
    
    public const int ServerNameFieldNumber = 1;
    private bool hasServerName;
    private string serverName_ = "";
    public bool HasServerName {
      get { return hasServerName; }
    }
    public string ServerName {
      get { return serverName_; }
    }
    
    public const int IdleRoomNumFieldNumber = 2;
    private bool hasIdleRoomNum;
    private int idleRoomNum_;
    public bool HasIdleRoomNum {
      get { return hasIdleRoomNum; }
    }
    public int IdleRoomNum {
      get { return idleRoomNum_; }
    }
    
    public const int UserNumFieldNumber = 3;
    private bool hasUserNum;
    private int userNum_;
    public bool HasUserNum {
      get { return hasUserNum; }
    }
    public int UserNum {
      get { return userNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasServerName) return false;
        if (!hasIdleRoomNum) return false;
        if (!hasUserNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLRoomServerUpdateInfoFieldNames;
      if (hasServerName) {
        output.WriteString(1, field_names[1], ServerName);
      }
      if (hasIdleRoomNum) {
        output.WriteInt32(2, field_names[0], IdleRoomNum);
      }
      if (hasUserNum) {
        output.WriteInt32(3, field_names[2], UserNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasServerName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ServerName);
        }
        if (hasIdleRoomNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, IdleRoomNum);
        }
        if (hasUserNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, UserNum);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_RoomServerUpdateInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_RoomServerUpdateInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_RoomServerUpdateInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_RoomServerUpdateInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_RoomServerUpdateInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_RoomServerUpdateInfo result;
      
      private Msg_RL_RoomServerUpdateInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_RoomServerUpdateInfo original = result;
          result = new Msg_RL_RoomServerUpdateInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_RoomServerUpdateInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo.Descriptor; }
      }
      
      public override Msg_RL_RoomServerUpdateInfo DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo.DefaultInstance; }
      }
      
      public override Msg_RL_RoomServerUpdateInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_RoomServerUpdateInfo) {
          return MergeFrom((Msg_RL_RoomServerUpdateInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_RoomServerUpdateInfo other) {
        if (other == global::Lobby_RoomServer.Msg_RL_RoomServerUpdateInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasServerName) {
          ServerName = other.ServerName;
        }
        if (other.HasIdleRoomNum) {
          IdleRoomNum = other.IdleRoomNum;
        }
        if (other.HasUserNum) {
          UserNum = other.UserNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLRoomServerUpdateInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLRoomServerUpdateInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasServerName = input.ReadString(ref result.serverName_);
              break;
            }
            case 16: {
              result.hasIdleRoomNum = input.ReadInt32(ref result.idleRoomNum_);
              break;
            }
            case 24: {
              result.hasUserNum = input.ReadInt32(ref result.userNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasServerName {
        get { return result.hasServerName; }
      }
      public string ServerName {
        get { return result.ServerName; }
        set { SetServerName(value); }
      }
      public Builder SetServerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerName = true;
        result.serverName_ = value;
        return this;
      }
      public Builder ClearServerName() {
        PrepareBuilder();
        result.hasServerName = false;
        result.serverName_ = "";
        return this;
      }
      
      public bool HasIdleRoomNum {
        get { return result.hasIdleRoomNum; }
      }
      public int IdleRoomNum {
        get { return result.IdleRoomNum; }
        set { SetIdleRoomNum(value); }
      }
      public Builder SetIdleRoomNum(int value) {
        PrepareBuilder();
        result.hasIdleRoomNum = true;
        result.idleRoomNum_ = value;
        return this;
      }
      public Builder ClearIdleRoomNum() {
        PrepareBuilder();
        result.hasIdleRoomNum = false;
        result.idleRoomNum_ = 0;
        return this;
      }
      
      public bool HasUserNum {
        get { return result.hasUserNum; }
      }
      public int UserNum {
        get { return result.UserNum; }
        set { SetUserNum(value); }
      }
      public Builder SetUserNum(int value) {
        PrepareBuilder();
        result.hasUserNum = true;
        result.userNum_ = value;
        return this;
      }
      public Builder ClearUserNum() {
        PrepareBuilder();
        result.hasUserNum = false;
        result.userNum_ = 0;
        return this;
      }
    }
    static Msg_RL_RoomServerUpdateInfo() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_UserLobbyItemInfo : pb::GeneratedMessage<Msg_RL_UserLobbyItemInfo, Msg_RL_UserLobbyItemInfo.Builder> {
    private Msg_RL_UserLobbyItemInfo() { }
    private static readonly Msg_RL_UserLobbyItemInfo defaultInstance = new Msg_RL_UserLobbyItemInfo().MakeReadOnly();
    private static readonly string[] _msgRLUserLobbyItemInfoFieldNames = new string[] { "ItemId", "ItemNum" };
    private static readonly uint[] _msgRLUserLobbyItemInfoFieldTags = new uint[] { 8, 16 };
    public static Msg_RL_UserLobbyItemInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_UserLobbyItemInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_UserLobbyItemInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserLobbyItemInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_UserLobbyItemInfo, Msg_RL_UserLobbyItemInfo.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserLobbyItemInfo__FieldAccessorTable; }
    }
    
    public const int ItemIdFieldNumber = 1;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public const int ItemNumFieldNumber = 2;
    private bool hasItemNum;
    private int itemNum_;
    public bool HasItemNum {
      get { return hasItemNum; }
    }
    public int ItemNum {
      get { return itemNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemId) return false;
        if (!hasItemNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLUserLobbyItemInfoFieldNames;
      if (hasItemId) {
        output.WriteInt32(1, field_names[0], ItemId);
      }
      if (hasItemNum) {
        output.WriteInt32(2, field_names[1], ItemNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ItemId);
        }
        if (hasItemNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ItemNum);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_UserLobbyItemInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserLobbyItemInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_UserLobbyItemInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_UserLobbyItemInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_UserLobbyItemInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_UserLobbyItemInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_UserLobbyItemInfo result;
      
      private Msg_RL_UserLobbyItemInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_UserLobbyItemInfo original = result;
          result = new Msg_RL_UserLobbyItemInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_UserLobbyItemInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo.Descriptor; }
      }
      
      public override Msg_RL_UserLobbyItemInfo DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo.DefaultInstance; }
      }
      
      public override Msg_RL_UserLobbyItemInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_UserLobbyItemInfo) {
          return MergeFrom((Msg_RL_UserLobbyItemInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_UserLobbyItemInfo other) {
        if (other == global::Lobby_RoomServer.Msg_RL_UserLobbyItemInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasItemNum) {
          ItemNum = other.ItemNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLUserLobbyItemInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLUserLobbyItemInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
            case 16: {
              result.hasItemNum = input.ReadInt32(ref result.itemNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
      
      public bool HasItemNum {
        get { return result.hasItemNum; }
      }
      public int ItemNum {
        get { return result.ItemNum; }
        set { SetItemNum(value); }
      }
      public Builder SetItemNum(int value) {
        PrepareBuilder();
        result.hasItemNum = true;
        result.itemNum_ = value;
        return this;
      }
      public Builder ClearItemNum() {
        PrepareBuilder();
        result.hasItemNum = false;
        result.itemNum_ = 0;
        return this;
      }
    }
    static Msg_RL_UserLobbyItemInfo() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_UserBattleInfo : pb::GeneratedMessage<Msg_RL_UserBattleInfo, Msg_RL_UserBattleInfo.Builder> {
    private Msg_RL_UserBattleInfo() { }
    private static readonly Msg_RL_UserBattleInfo defaultInstance = new Msg_RL_UserBattleInfo().MakeReadOnly();
    private static readonly string[] _msgRLUserBattleInfoFieldNames = new string[] { "BattleResult", "HitCount", "KillNpcCount", "MaxMultiHitCount", "Money", "TotalDamageFromMyself", "TotalDamageToMyself", "UserGuid" };
    private static readonly uint[] _msgRLUserBattleInfoFieldTags = new uint[] { 16, 32, 40, 48, 24, 64, 56, 8 };
    public static Msg_RL_UserBattleInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_UserBattleInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_UserBattleInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserBattleInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_UserBattleInfo, Msg_RL_UserBattleInfo.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserBattleInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum BattleResultEnum {
        Win = 0,
        Lost = 1,
        Unfinish = 2,
      }
      
    }
    #endregion
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private ulong userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public ulong UserGuid {
      get { return userGuid_; }
    }
    
    public const int BattleResultFieldNumber = 2;
    private bool hasBattleResult;
    private global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum battleResult_ = global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum.Win;
    public bool HasBattleResult {
      get { return hasBattleResult; }
    }
    public global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum BattleResult {
      get { return battleResult_; }
    }
    
    public const int MoneyFieldNumber = 3;
    private bool hasMoney;
    private int money_;
    public bool HasMoney {
      get { return hasMoney; }
    }
    public int Money {
      get { return money_; }
    }
    
    public const int HitCountFieldNumber = 4;
    private bool hasHitCount;
    private int hitCount_;
    public bool HasHitCount {
      get { return hasHitCount; }
    }
    public int HitCount {
      get { return hitCount_; }
    }
    
    public const int KillNpcCountFieldNumber = 5;
    private bool hasKillNpcCount;
    private int killNpcCount_;
    public bool HasKillNpcCount {
      get { return hasKillNpcCount; }
    }
    public int KillNpcCount {
      get { return killNpcCount_; }
    }
    
    public const int MaxMultiHitCountFieldNumber = 6;
    private bool hasMaxMultiHitCount;
    private int maxMultiHitCount_;
    public bool HasMaxMultiHitCount {
      get { return hasMaxMultiHitCount; }
    }
    public int MaxMultiHitCount {
      get { return maxMultiHitCount_; }
    }
    
    public const int TotalDamageToMyselfFieldNumber = 7;
    private bool hasTotalDamageToMyself;
    private int totalDamageToMyself_;
    public bool HasTotalDamageToMyself {
      get { return hasTotalDamageToMyself; }
    }
    public int TotalDamageToMyself {
      get { return totalDamageToMyself_; }
    }
    
    public const int TotalDamageFromMyselfFieldNumber = 8;
    private bool hasTotalDamageFromMyself;
    private int totalDamageFromMyself_;
    public bool HasTotalDamageFromMyself {
      get { return hasTotalDamageFromMyself; }
    }
    public int TotalDamageFromMyself {
      get { return totalDamageFromMyself_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasBattleResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLUserBattleInfoFieldNames;
      if (hasUserGuid) {
        output.WriteUInt64(1, field_names[7], UserGuid);
      }
      if (hasBattleResult) {
        output.WriteEnum(2, field_names[0], (int) BattleResult, BattleResult);
      }
      if (hasMoney) {
        output.WriteInt32(3, field_names[4], Money);
      }
      if (hasHitCount) {
        output.WriteInt32(4, field_names[1], HitCount);
      }
      if (hasKillNpcCount) {
        output.WriteInt32(5, field_names[2], KillNpcCount);
      }
      if (hasMaxMultiHitCount) {
        output.WriteInt32(6, field_names[3], MaxMultiHitCount);
      }
      if (hasTotalDamageToMyself) {
        output.WriteInt32(7, field_names[6], TotalDamageToMyself);
      }
      if (hasTotalDamageFromMyself) {
        output.WriteInt32(8, field_names[5], TotalDamageFromMyself);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserGuid);
        }
        if (hasBattleResult) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) BattleResult);
        }
        if (hasMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Money);
        }
        if (hasHitCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, HitCount);
        }
        if (hasKillNpcCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, KillNpcCount);
        }
        if (hasMaxMultiHitCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, MaxMultiHitCount);
        }
        if (hasTotalDamageToMyself) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, TotalDamageToMyself);
        }
        if (hasTotalDamageFromMyself) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, TotalDamageFromMyself);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_UserBattleInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserBattleInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_UserBattleInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_UserBattleInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_UserBattleInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_UserBattleInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_UserBattleInfo result;
      
      private Msg_RL_UserBattleInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_UserBattleInfo original = result;
          result = new Msg_RL_UserBattleInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_UserBattleInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Descriptor; }
      }
      
      public override Msg_RL_UserBattleInfo DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserBattleInfo.DefaultInstance; }
      }
      
      public override Msg_RL_UserBattleInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_UserBattleInfo) {
          return MergeFrom((Msg_RL_UserBattleInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_UserBattleInfo other) {
        if (other == global::Lobby_RoomServer.Msg_RL_UserBattleInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasBattleResult) {
          BattleResult = other.BattleResult;
        }
        if (other.HasMoney) {
          Money = other.Money;
        }
        if (other.HasHitCount) {
          HitCount = other.HitCount;
        }
        if (other.HasKillNpcCount) {
          KillNpcCount = other.KillNpcCount;
        }
        if (other.HasMaxMultiHitCount) {
          MaxMultiHitCount = other.MaxMultiHitCount;
        }
        if (other.HasTotalDamageToMyself) {
          TotalDamageToMyself = other.TotalDamageToMyself;
        }
        if (other.HasTotalDamageFromMyself) {
          TotalDamageFromMyself = other.TotalDamageFromMyself;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLUserBattleInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLUserBattleInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadUInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.battleResult_, out unknown)) {
                result.hasBattleResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasMoney = input.ReadInt32(ref result.money_);
              break;
            }
            case 32: {
              result.hasHitCount = input.ReadInt32(ref result.hitCount_);
              break;
            }
            case 40: {
              result.hasKillNpcCount = input.ReadInt32(ref result.killNpcCount_);
              break;
            }
            case 48: {
              result.hasMaxMultiHitCount = input.ReadInt32(ref result.maxMultiHitCount_);
              break;
            }
            case 56: {
              result.hasTotalDamageToMyself = input.ReadInt32(ref result.totalDamageToMyself_);
              break;
            }
            case 64: {
              result.hasTotalDamageFromMyself = input.ReadInt32(ref result.totalDamageFromMyself_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public ulong UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(ulong value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0UL;
        return this;
      }
      
      public bool HasBattleResult {
       get { return result.hasBattleResult; }
      }
      public global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum BattleResult {
        get { return result.BattleResult; }
        set { SetBattleResult(value); }
      }
      public Builder SetBattleResult(global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum value) {
        PrepareBuilder();
        result.hasBattleResult = true;
        result.battleResult_ = value;
        return this;
      }
      public Builder ClearBattleResult() {
        PrepareBuilder();
        result.hasBattleResult = false;
        result.battleResult_ = global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Types.BattleResultEnum.Win;
        return this;
      }
      
      public bool HasMoney {
        get { return result.hasMoney; }
      }
      public int Money {
        get { return result.Money; }
        set { SetMoney(value); }
      }
      public Builder SetMoney(int value) {
        PrepareBuilder();
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder ClearMoney() {
        PrepareBuilder();
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      public bool HasHitCount {
        get { return result.hasHitCount; }
      }
      public int HitCount {
        get { return result.HitCount; }
        set { SetHitCount(value); }
      }
      public Builder SetHitCount(int value) {
        PrepareBuilder();
        result.hasHitCount = true;
        result.hitCount_ = value;
        return this;
      }
      public Builder ClearHitCount() {
        PrepareBuilder();
        result.hasHitCount = false;
        result.hitCount_ = 0;
        return this;
      }
      
      public bool HasKillNpcCount {
        get { return result.hasKillNpcCount; }
      }
      public int KillNpcCount {
        get { return result.KillNpcCount; }
        set { SetKillNpcCount(value); }
      }
      public Builder SetKillNpcCount(int value) {
        PrepareBuilder();
        result.hasKillNpcCount = true;
        result.killNpcCount_ = value;
        return this;
      }
      public Builder ClearKillNpcCount() {
        PrepareBuilder();
        result.hasKillNpcCount = false;
        result.killNpcCount_ = 0;
        return this;
      }
      
      public bool HasMaxMultiHitCount {
        get { return result.hasMaxMultiHitCount; }
      }
      public int MaxMultiHitCount {
        get { return result.MaxMultiHitCount; }
        set { SetMaxMultiHitCount(value); }
      }
      public Builder SetMaxMultiHitCount(int value) {
        PrepareBuilder();
        result.hasMaxMultiHitCount = true;
        result.maxMultiHitCount_ = value;
        return this;
      }
      public Builder ClearMaxMultiHitCount() {
        PrepareBuilder();
        result.hasMaxMultiHitCount = false;
        result.maxMultiHitCount_ = 0;
        return this;
      }
      
      public bool HasTotalDamageToMyself {
        get { return result.hasTotalDamageToMyself; }
      }
      public int TotalDamageToMyself {
        get { return result.TotalDamageToMyself; }
        set { SetTotalDamageToMyself(value); }
      }
      public Builder SetTotalDamageToMyself(int value) {
        PrepareBuilder();
        result.hasTotalDamageToMyself = true;
        result.totalDamageToMyself_ = value;
        return this;
      }
      public Builder ClearTotalDamageToMyself() {
        PrepareBuilder();
        result.hasTotalDamageToMyself = false;
        result.totalDamageToMyself_ = 0;
        return this;
      }
      
      public bool HasTotalDamageFromMyself {
        get { return result.hasTotalDamageFromMyself; }
      }
      public int TotalDamageFromMyself {
        get { return result.TotalDamageFromMyself; }
        set { SetTotalDamageFromMyself(value); }
      }
      public Builder SetTotalDamageFromMyself(int value) {
        PrepareBuilder();
        result.hasTotalDamageFromMyself = true;
        result.totalDamageFromMyself_ = value;
        return this;
      }
      public Builder ClearTotalDamageFromMyself() {
        PrepareBuilder();
        result.hasTotalDamageFromMyself = false;
        result.totalDamageFromMyself_ = 0;
        return this;
      }
    }
    static Msg_RL_UserBattleInfo() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_BattleEnd : pb::GeneratedMessage<Msg_RL_BattleEnd, Msg_RL_BattleEnd.Builder> {
    private Msg_RL_BattleEnd() { }
    private static readonly Msg_RL_BattleEnd defaultInstance = new Msg_RL_BattleEnd().MakeReadOnly();
    private static readonly string[] _msgRLBattleEndFieldNames = new string[] { "RoomID", "UserBattleInfos", "WinnerCamp" };
    private static readonly uint[] _msgRLBattleEndFieldTags = new uint[] { 8, 26, 16 };
    public static Msg_RL_BattleEnd DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_BattleEnd DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_BattleEnd ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_BattleEnd__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_BattleEnd, Msg_RL_BattleEnd.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_BattleEnd__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum WinnerCampEnum {
        None = 0,
        Red = 1,
        Blue = 2,
      }
      
    }
    #endregion
    
    public const int RoomIDFieldNumber = 1;
    private bool hasRoomID;
    private int roomID_;
    public bool HasRoomID {
      get { return hasRoomID; }
    }
    public int RoomID {
      get { return roomID_; }
    }
    
    public const int WinnerCampFieldNumber = 2;
    private bool hasWinnerCamp;
    private global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum winnerCamp_ = global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum.None;
    public bool HasWinnerCamp {
      get { return hasWinnerCamp; }
    }
    public global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum WinnerCamp {
      get { return winnerCamp_; }
    }
    
    public const int UserBattleInfosFieldNumber = 3;
    private pbc::PopsicleList<global::Lobby_RoomServer.Msg_RL_UserBattleInfo> userBattleInfos_ = new pbc::PopsicleList<global::Lobby_RoomServer.Msg_RL_UserBattleInfo>();
    public scg::IList<global::Lobby_RoomServer.Msg_RL_UserBattleInfo> UserBattleInfosList {
      get { return userBattleInfos_; }
    }
    public int UserBattleInfosCount {
      get { return userBattleInfos_.Count; }
    }
    public global::Lobby_RoomServer.Msg_RL_UserBattleInfo GetUserBattleInfos(int index) {
      return userBattleInfos_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomID) return false;
        if (!hasWinnerCamp) return false;
        foreach (global::Lobby_RoomServer.Msg_RL_UserBattleInfo element in UserBattleInfosList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLBattleEndFieldNames;
      if (hasRoomID) {
        output.WriteInt32(1, field_names[0], RoomID);
      }
      if (hasWinnerCamp) {
        output.WriteEnum(2, field_names[2], (int) WinnerCamp, WinnerCamp);
      }
      if (userBattleInfos_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], userBattleInfos_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomID) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoomID);
        }
        if (hasWinnerCamp) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) WinnerCamp);
        }
        foreach (global::Lobby_RoomServer.Msg_RL_UserBattleInfo element in UserBattleInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_BattleEnd ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_BattleEnd ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_BattleEnd MakeReadOnly() {
      userBattleInfos_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_BattleEnd prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_BattleEnd, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_BattleEnd cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_BattleEnd result;
      
      private Msg_RL_BattleEnd PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_BattleEnd original = result;
          result = new Msg_RL_BattleEnd();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_BattleEnd MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_BattleEnd.Descriptor; }
      }
      
      public override Msg_RL_BattleEnd DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_BattleEnd.DefaultInstance; }
      }
      
      public override Msg_RL_BattleEnd BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_BattleEnd) {
          return MergeFrom((Msg_RL_BattleEnd) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_BattleEnd other) {
        if (other == global::Lobby_RoomServer.Msg_RL_BattleEnd.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomID) {
          RoomID = other.RoomID;
        }
        if (other.HasWinnerCamp) {
          WinnerCamp = other.WinnerCamp;
        }
        if (other.userBattleInfos_.Count != 0) {
          result.userBattleInfos_.Add(other.userBattleInfos_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLBattleEndFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLBattleEndFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomID = input.ReadInt32(ref result.roomID_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.winnerCamp_, out unknown)) {
                result.hasWinnerCamp = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.userBattleInfos_, global::Lobby_RoomServer.Msg_RL_UserBattleInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomID {
        get { return result.hasRoomID; }
      }
      public int RoomID {
        get { return result.RoomID; }
        set { SetRoomID(value); }
      }
      public Builder SetRoomID(int value) {
        PrepareBuilder();
        result.hasRoomID = true;
        result.roomID_ = value;
        return this;
      }
      public Builder ClearRoomID() {
        PrepareBuilder();
        result.hasRoomID = false;
        result.roomID_ = 0;
        return this;
      }
      
      public bool HasWinnerCamp {
       get { return result.hasWinnerCamp; }
      }
      public global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum WinnerCamp {
        get { return result.WinnerCamp; }
        set { SetWinnerCamp(value); }
      }
      public Builder SetWinnerCamp(global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum value) {
        PrepareBuilder();
        result.hasWinnerCamp = true;
        result.winnerCamp_ = value;
        return this;
      }
      public Builder ClearWinnerCamp() {
        PrepareBuilder();
        result.hasWinnerCamp = false;
        result.winnerCamp_ = global::Lobby_RoomServer.Msg_RL_BattleEnd.Types.WinnerCampEnum.None;
        return this;
      }
      
      public pbc::IPopsicleList<global::Lobby_RoomServer.Msg_RL_UserBattleInfo> UserBattleInfosList {
        get { return PrepareBuilder().userBattleInfos_; }
      }
      public int UserBattleInfosCount {
        get { return result.UserBattleInfosCount; }
      }
      public global::Lobby_RoomServer.Msg_RL_UserBattleInfo GetUserBattleInfos(int index) {
        return result.GetUserBattleInfos(index);
      }
      public Builder SetUserBattleInfos(int index, global::Lobby_RoomServer.Msg_RL_UserBattleInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userBattleInfos_[index] = value;
        return this;
      }
      public Builder SetUserBattleInfos(int index, global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userBattleInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserBattleInfos(global::Lobby_RoomServer.Msg_RL_UserBattleInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userBattleInfos_.Add(value);
        return this;
      }
      public Builder AddUserBattleInfos(global::Lobby_RoomServer.Msg_RL_UserBattleInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userBattleInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserBattleInfos(scg::IEnumerable<global::Lobby_RoomServer.Msg_RL_UserBattleInfo> values) {
        PrepareBuilder();
        result.userBattleInfos_.Add(values);
        return this;
      }
      public Builder ClearUserBattleInfos() {
        PrepareBuilder();
        result.userBattleInfos_.Clear();
        return this;
      }
    }
    static Msg_RL_BattleEnd() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RL_UserQuit : pb::GeneratedMessage<Msg_RL_UserQuit, Msg_RL_UserQuit.Builder> {
    private Msg_RL_UserQuit() { }
    private static readonly Msg_RL_UserQuit defaultInstance = new Msg_RL_UserQuit().MakeReadOnly();
    private static readonly string[] _msgRLUserQuitFieldNames = new string[] { "IsBattleEnd", "RoomID", "UserGuid" };
    private static readonly uint[] _msgRLUserQuitFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_RL_UserQuit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RL_UserQuit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RL_UserQuit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserQuit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RL_UserQuit, Msg_RL_UserQuit.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_RL_UserQuit__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private ulong userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public ulong UserGuid {
      get { return userGuid_; }
    }
    
    public const int RoomIDFieldNumber = 2;
    private bool hasRoomID;
    private int roomID_;
    public bool HasRoomID {
      get { return hasRoomID; }
    }
    public int RoomID {
      get { return roomID_; }
    }
    
    public const int IsBattleEndFieldNumber = 3;
    private bool hasIsBattleEnd;
    private bool isBattleEnd_;
    public bool HasIsBattleEnd {
      get { return hasIsBattleEnd; }
    }
    public bool IsBattleEnd {
      get { return isBattleEnd_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasRoomID) return false;
        if (!hasIsBattleEnd) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRLUserQuitFieldNames;
      if (hasUserGuid) {
        output.WriteUInt64(1, field_names[2], UserGuid);
      }
      if (hasRoomID) {
        output.WriteInt32(2, field_names[1], RoomID);
      }
      if (hasIsBattleEnd) {
        output.WriteBool(3, field_names[0], IsBattleEnd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserGuid);
        }
        if (hasRoomID) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoomID);
        }
        if (hasIsBattleEnd) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsBattleEnd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RL_UserQuit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RL_UserQuit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RL_UserQuit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RL_UserQuit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RL_UserQuit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RL_UserQuit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RL_UserQuit result;
      
      private Msg_RL_UserQuit PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RL_UserQuit original = result;
          result = new Msg_RL_UserQuit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RL_UserQuit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserQuit.Descriptor; }
      }
      
      public override Msg_RL_UserQuit DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_RL_UserQuit.DefaultInstance; }
      }
      
      public override Msg_RL_UserQuit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RL_UserQuit) {
          return MergeFrom((Msg_RL_UserQuit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RL_UserQuit other) {
        if (other == global::Lobby_RoomServer.Msg_RL_UserQuit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasRoomID) {
          RoomID = other.RoomID;
        }
        if (other.HasIsBattleEnd) {
          IsBattleEnd = other.IsBattleEnd;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRLUserQuitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRLUserQuitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadUInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              result.hasRoomID = input.ReadInt32(ref result.roomID_);
              break;
            }
            case 24: {
              result.hasIsBattleEnd = input.ReadBool(ref result.isBattleEnd_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public ulong UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(ulong value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0UL;
        return this;
      }
      
      public bool HasRoomID {
        get { return result.hasRoomID; }
      }
      public int RoomID {
        get { return result.RoomID; }
        set { SetRoomID(value); }
      }
      public Builder SetRoomID(int value) {
        PrepareBuilder();
        result.hasRoomID = true;
        result.roomID_ = value;
        return this;
      }
      public Builder ClearRoomID() {
        PrepareBuilder();
        result.hasRoomID = false;
        result.roomID_ = 0;
        return this;
      }
      
      public bool HasIsBattleEnd {
        get { return result.hasIsBattleEnd; }
      }
      public bool IsBattleEnd {
        get { return result.IsBattleEnd; }
        set { SetIsBattleEnd(value); }
      }
      public Builder SetIsBattleEnd(bool value) {
        PrepareBuilder();
        result.hasIsBattleEnd = true;
        result.isBattleEnd_ = value;
        return this;
      }
      public Builder ClearIsBattleEnd() {
        PrepareBuilder();
        result.hasIsBattleEnd = false;
        result.isBattleEnd_ = false;
        return this;
      }
    }
    static Msg_RL_UserQuit() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LR_UserReLive : pb::GeneratedMessage<Msg_LR_UserReLive, Msg_LR_UserReLive.Builder> {
    private Msg_LR_UserReLive() { }
    private static readonly Msg_LR_UserReLive defaultInstance = new Msg_LR_UserReLive().MakeReadOnly();
    private static readonly string[] _msgLRUserReLiveFieldNames = new string[] { "RoomID", "UserGuid" };
    private static readonly uint[] _msgLRUserReLiveFieldTags = new uint[] { 16, 8 };
    public static Msg_LR_UserReLive DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LR_UserReLive DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LR_UserReLive ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_UserReLive__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LR_UserReLive, Msg_LR_UserReLive.Builder> InternalFieldAccessors {
      get { return global::Lobby_RoomServer.MessageDefine.internal__static_Msg_LR_UserReLive__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private ulong userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public ulong UserGuid {
      get { return userGuid_; }
    }
    
    public const int RoomIDFieldNumber = 2;
    private bool hasRoomID;
    private int roomID_;
    public bool HasRoomID {
      get { return hasRoomID; }
    }
    public int RoomID {
      get { return roomID_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasRoomID) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLRUserReLiveFieldNames;
      if (hasUserGuid) {
        output.WriteUInt64(1, field_names[1], UserGuid);
      }
      if (hasRoomID) {
        output.WriteInt32(2, field_names[0], RoomID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserGuid);
        }
        if (hasRoomID) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoomID);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LR_UserReLive ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LR_UserReLive ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LR_UserReLive MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LR_UserReLive prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LR_UserReLive, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LR_UserReLive cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LR_UserReLive result;
      
      private Msg_LR_UserReLive PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LR_UserReLive original = result;
          result = new Msg_LR_UserReLive();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LR_UserReLive MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_RoomServer.Msg_LR_UserReLive.Descriptor; }
      }
      
      public override Msg_LR_UserReLive DefaultInstanceForType {
        get { return global::Lobby_RoomServer.Msg_LR_UserReLive.DefaultInstance; }
      }
      
      public override Msg_LR_UserReLive BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LR_UserReLive) {
          return MergeFrom((Msg_LR_UserReLive) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LR_UserReLive other) {
        if (other == global::Lobby_RoomServer.Msg_LR_UserReLive.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasRoomID) {
          RoomID = other.RoomID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLRUserReLiveFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLRUserReLiveFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadUInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              result.hasRoomID = input.ReadInt32(ref result.roomID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public ulong UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(ulong value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0UL;
        return this;
      }
      
      public bool HasRoomID {
        get { return result.hasRoomID; }
      }
      public int RoomID {
        get { return result.RoomID; }
        set { SetRoomID(value); }
      }
      public Builder SetRoomID(int value) {
        PrepareBuilder();
        result.hasRoomID = true;
        result.roomID_ = value;
        return this;
      }
      public Builder ClearRoomID() {
        PrepareBuilder();
        result.hasRoomID = false;
        result.roomID_ = 0;
        return this;
      }
    }
    static Msg_LR_UserReLive() {
      object.ReferenceEquals(global::Lobby_RoomServer.MessageDefine.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
