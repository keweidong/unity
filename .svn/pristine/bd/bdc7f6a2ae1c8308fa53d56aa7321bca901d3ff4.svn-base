// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Lobby_GmServer {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GmServerMessageDefine {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Msg_LM_Query__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_GmServer.Msg_LM_Query, global::Lobby_GmServer.Msg_LM_Query.Builder> internal__static_Msg_LM_Query__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Msg_ML_QueryResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Lobby_GmServer.Msg_ML_QueryResult, global::Lobby_GmServer.Msg_ML_QueryResult.Builder> internal__static_Msg_ML_QueryResult__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GmServerMessageDefine() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChtHbVNlcnZlck1lc3NhZ2VEZWZpbmUucHJvdG8iIQoMTXNnX0xNX1F1ZXJ5" + 
          "EhEKCVNlbGVjdFNxbBgBIAIoCSIyChJNc2dfTUxfUXVlcnlSZXN1bHQSDAoE" + 
          "SXNPaxgBIAIoCBIOCgZSZXN1bHQYAiACKAk=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Msg_LM_Query__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Msg_LM_Query__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_GmServer.Msg_LM_Query, global::Lobby_GmServer.Msg_LM_Query.Builder>(internal__static_Msg_LM_Query__Descriptor,
                new string[] { "SelectSql", });
        internal__static_Msg_ML_QueryResult__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Msg_ML_QueryResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Lobby_GmServer.Msg_ML_QueryResult, global::Lobby_GmServer.Msg_ML_QueryResult.Builder>(internal__static_Msg_ML_QueryResult__Descriptor,
                new string[] { "IsOk", "Result", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_LM_Query : pb::GeneratedMessage<Msg_LM_Query, Msg_LM_Query.Builder> {
    private Msg_LM_Query() { }
    private static readonly Msg_LM_Query defaultInstance = new Msg_LM_Query().MakeReadOnly();
    private static readonly string[] _msgLMQueryFieldNames = new string[] { "SelectSql" };
    private static readonly uint[] _msgLMQueryFieldTags = new uint[] { 10 };
    public static Msg_LM_Query DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_LM_Query DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_LM_Query ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_GmServer.GmServerMessageDefine.internal__static_Msg_LM_Query__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_LM_Query, Msg_LM_Query.Builder> InternalFieldAccessors {
      get { return global::Lobby_GmServer.GmServerMessageDefine.internal__static_Msg_LM_Query__FieldAccessorTable; }
    }
    
    public const int SelectSqlFieldNumber = 1;
    private bool hasSelectSql;
    private string selectSql_ = "";
    public bool HasSelectSql {
      get { return hasSelectSql; }
    }
    public string SelectSql {
      get { return selectSql_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSelectSql) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLMQueryFieldNames;
      if (hasSelectSql) {
        output.WriteString(1, field_names[0], SelectSql);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSelectSql) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SelectSql);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_LM_Query ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_LM_Query ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_LM_Query ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_LM_Query ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_LM_Query MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_LM_Query prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_LM_Query, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_LM_Query cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_LM_Query result;
      
      private Msg_LM_Query PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_LM_Query original = result;
          result = new Msg_LM_Query();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_LM_Query MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_GmServer.Msg_LM_Query.Descriptor; }
      }
      
      public override Msg_LM_Query DefaultInstanceForType {
        get { return global::Lobby_GmServer.Msg_LM_Query.DefaultInstance; }
      }
      
      public override Msg_LM_Query BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_LM_Query) {
          return MergeFrom((Msg_LM_Query) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_LM_Query other) {
        if (other == global::Lobby_GmServer.Msg_LM_Query.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSelectSql) {
          SelectSql = other.SelectSql;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLMQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLMQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSelectSql = input.ReadString(ref result.selectSql_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSelectSql {
        get { return result.hasSelectSql; }
      }
      public string SelectSql {
        get { return result.SelectSql; }
        set { SetSelectSql(value); }
      }
      public Builder SetSelectSql(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelectSql = true;
        result.selectSql_ = value;
        return this;
      }
      public Builder ClearSelectSql() {
        PrepareBuilder();
        result.hasSelectSql = false;
        result.selectSql_ = "";
        return this;
      }
    }
    static Msg_LM_Query() {
      object.ReferenceEquals(global::Lobby_GmServer.GmServerMessageDefine.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_ML_QueryResult : pb::GeneratedMessage<Msg_ML_QueryResult, Msg_ML_QueryResult.Builder> {
    private Msg_ML_QueryResult() { }
    private static readonly Msg_ML_QueryResult defaultInstance = new Msg_ML_QueryResult().MakeReadOnly();
    private static readonly string[] _msgMLQueryResultFieldNames = new string[] { "IsOk", "Result" };
    private static readonly uint[] _msgMLQueryResultFieldTags = new uint[] { 8, 18 };
    public static Msg_ML_QueryResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_ML_QueryResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_ML_QueryResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Lobby_GmServer.GmServerMessageDefine.internal__static_Msg_ML_QueryResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_ML_QueryResult, Msg_ML_QueryResult.Builder> InternalFieldAccessors {
      get { return global::Lobby_GmServer.GmServerMessageDefine.internal__static_Msg_ML_QueryResult__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public const int ResultFieldNumber = 2;
    private bool hasResult;
    private string result_ = "";
    public bool HasResult {
      get { return hasResult; }
    }
    public string Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        if (!hasResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgMLQueryResultFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[0], IsOk);
      }
      if (hasResult) {
        output.WriteString(2, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsOk) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_ML_QueryResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_ML_QueryResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_ML_QueryResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_ML_QueryResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_ML_QueryResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_ML_QueryResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_ML_QueryResult result;
      
      private Msg_ML_QueryResult PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_ML_QueryResult original = result;
          result = new Msg_ML_QueryResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_ML_QueryResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Lobby_GmServer.Msg_ML_QueryResult.Descriptor; }
      }
      
      public override Msg_ML_QueryResult DefaultInstanceForType {
        get { return global::Lobby_GmServer.Msg_ML_QueryResult.DefaultInstance; }
      }
      
      public override Msg_ML_QueryResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_ML_QueryResult) {
          return MergeFrom((Msg_ML_QueryResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_ML_QueryResult other) {
        if (other == global::Lobby_GmServer.Msg_ML_QueryResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgMLQueryResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgMLQueryResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
            case 18: {
              result.hasResult = input.ReadString(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = false;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public string Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = "";
        return this;
      }
    }
    static Msg_ML_QueryResult() {
      object.ReferenceEquals(global::Lobby_GmServer.GmServerMessageDefine.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
