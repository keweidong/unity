// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DashFire.DataStore {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Data {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::DashFire.DataStore.Data.Version);
      registry.Add(global::DashFire.DataStore.Data.DsPrimaryKey);
      registry.Add(global::DashFire.DataStore.Data.DsForeignKey);
      registry.Add(global::DashFire.DataStore.Data.MaxSize);
    }
    #endregion
    #region Extensions
    public const int VersionFieldNumber = 50000;
    public static pb::GeneratedExtensionBase<string> Version;
    public const int DsPrimaryKeyFieldNumber = 50000;
    public static pb::GeneratedExtensionBase<string> DsPrimaryKey;
    public const int DsForeignKeyFieldNumber = 50001;
    public static pb::GeneratedExtensionBase<string> DsForeignKey;
    public const int MaxSizeFieldNumber = 50000;
    public static pb::GeneratedExtensionBase<int> MaxSize;
    #endregion
    
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DS_Guid__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Guid, global::DashFire.DataStore.DS_Guid.Builder> internal__static_DS_Guid__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_Nickname__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Nickname, global::DashFire.DataStore.DS_Nickname.Builder> internal__static_DS_Nickname__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_GowStar__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_GowStar, global::DashFire.DataStore.DS_GowStar.Builder> internal__static_DS_GowStar__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_MailInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MailInfo, global::DashFire.DataStore.DS_MailInfo.Builder> internal__static_DS_MailInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_ActivationCode__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ActivationCode, global::DashFire.DataStore.DS_ActivationCode.Builder> internal__static_DS_ActivationCode__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_GiftCode__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_GiftCode, global::DashFire.DataStore.DS_GiftCode.Builder> internal__static_DS_GiftCode__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_ArenaInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ArenaInfo, global::DashFire.DataStore.DS_ArenaInfo.Builder> internal__static_DS_ArenaInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_ArenaRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ArenaRecord, global::DashFire.DataStore.DS_ArenaRecord.Builder> internal__static_DS_ArenaRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_Account__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Account, global::DashFire.DataStore.DS_Account.Builder> internal__static_DS_Account__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_UserInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_UserInfo, global::DashFire.DataStore.DS_UserInfo.Builder> internal__static_DS_UserInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_UserInfoExtra__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_UserInfoExtra, global::DashFire.DataStore.DS_UserInfoExtra.Builder> internal__static_DS_UserInfoExtra__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_EquipInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_EquipInfo, global::DashFire.DataStore.DS_EquipInfo.Builder> internal__static_DS_EquipInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_ItemInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ItemInfo, global::DashFire.DataStore.DS_ItemInfo.Builder> internal__static_DS_ItemInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_LegacyInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_LegacyInfo, global::DashFire.DataStore.DS_LegacyInfo.Builder> internal__static_DS_LegacyInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_XSoulInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_XSoulInfo, global::DashFire.DataStore.DS_XSoulInfo.Builder> internal__static_DS_XSoulInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_SkillInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_SkillInfo, global::DashFire.DataStore.DS_SkillInfo.Builder> internal__static_DS_SkillInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_MissionInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MissionInfo, global::DashFire.DataStore.DS_MissionInfo.Builder> internal__static_DS_MissionInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_LevelInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_LevelInfo, global::DashFire.DataStore.DS_LevelInfo.Builder> internal__static_DS_LevelInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_ExpeditionInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ExpeditionInfo, global::DashFire.DataStore.DS_ExpeditionInfo.Builder> internal__static_DS_ExpeditionInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_MailStateInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MailStateInfo, global::DashFire.DataStore.DS_MailStateInfo.Builder> internal__static_DS_MailStateInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_PartnerInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_PartnerInfo, global::DashFire.DataStore.DS_PartnerInfo.Builder> internal__static_DS_PartnerInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DS_FriendInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_FriendInfo, global::DashFire.DataStore.DS_FriendInfo.Builder> internal__static_DS_FriendInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSP_Account__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_Account, global::DashFire.DataStore.DSP_Account.Builder> internal__static_DSP_Account__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSP_User__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_User, global::DashFire.DataStore.DSP_User.Builder> internal__static_DSP_User__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSP_CreateAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_CreateAccount, global::DashFire.DataStore.DSP_CreateAccount.Builder> internal__static_DSP_CreateAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSP_CreateUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_CreateUser, global::DashFire.DataStore.DSP_CreateUser.Builder> internal__static_DSP_CreateUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSP_UserArena__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_UserArena, global::DashFire.DataStore.DSP_UserArena.Builder> internal__static_DSP_UserArena__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_Guid__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Guid, global::DashFire.DataStore.DSG_Guid.Builder> internal__static_DSG_Guid__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_ActivationCode__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ActivationCode, global::DashFire.DataStore.DSG_ActivationCode.Builder> internal__static_DSG_ActivationCode__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_Nickname__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Nickname, global::DashFire.DataStore.DSG_Nickname.Builder> internal__static_DSG_Nickname__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_GowStar__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_GowStar, global::DashFire.DataStore.DSG_GowStar.Builder> internal__static_DSG_GowStar__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_Mail__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Mail, global::DashFire.DataStore.DSG_Mail.Builder> internal__static_DSG_Mail__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_GiftCode__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_GiftCode, global::DashFire.DataStore.DSG_GiftCode.Builder> internal__static_DSG_GiftCode__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_ArenaRank__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ArenaRank, global::DashFire.DataStore.DSG_ArenaRank.Builder> internal__static_DSG_ArenaRank__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSG_ArenaRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ArenaRecord, global::DashFire.DataStore.DSG_ArenaRecord.Builder> internal__static_DSG_ArenaRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DSD_BanAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSD_BanAccount, global::DashFire.DataStore.DSD_BanAccount.Builder> internal__static_DSD_BanAccount__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Data() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChREYXRhU3RvcmUvRGF0YS5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2Rlc2Ny" + 
          "aXB0b3IucHJvdG8iUwoHRFNfR3VpZBIWCghHdWlkVHlwZRgBIAIoCUIEgLUY" + 
          "GBIPCgdJc1ZhbGlkGAIgAigIEhEKCUd1aWRWYWx1ZRgDIAIoAzoMgrUYCEd1" + 
          "aWRUeXBlIlYKC0RTX05pY2tuYW1lEhYKCE5pY2tuYW1lGAEgAigJQgSAtRgg" + 
          "Eg8KB0lzVmFsaWQYAiACKAgSEAoIVXNlckd1aWQYAyACKAM6DIK1GAhOaWNr" + 
          "bmFtZSKlAQoKRFNfR293U3RhchIMCgRSYW5rGAEgAigFEg8KB0lzVmFsaWQY" + 
          "AiACKAgSEAoIVXNlckd1aWQYAyACKAMSFgoITmlja25hbWUYBCACKAlCBIC1" + 
          "GCASDgoGSGVyb0lkGAUgAigFEg0KBUxldmVsGAYgAigFEhUKDUZpZ2h0aW5n" + 
          "U2NvcmUYByACKAUSDgoGR293RWxvGAggAigFOgiCtRgEUmFuayLWAgoLRFNf" + 
          "TWFpbEluZm8SDAoER3VpZBgBIAIoAxIPCgdJc1ZhbGlkGAIgAigIEhQKDE1v" + 
          "ZHVsZVR5cGVJZBgDIAIoBRIUCgZTZW5kZXIYBCACKAlCBIC1GCASEAoIUmVj" + 
          "ZWl2ZXIYBSACKAMSFgoIU2VuZERhdGUYBiACKAlCBIC1GBgSGAoKRXhwaXJ5" + 
          "RGF0ZRgHIAIoCUIEgLUYGBITCgVUaXRsZRgIIAIoCUIEgLUYQBITCgRUZXh0" + 
          "GAkgAigJQgWAtRiACBINCgVNb25leRgKIAIoBRIMCgRHb2xkGAsgAigFEg8K" + 
          "B1N0YW1pbmEYDCACKAUSFgoHSXRlbUlkcxgNIAIoCUIFgLUYgAESGQoLSXRl" + 
          "bU51bWJlcnMYDiACKAlCBIC1GEASEwoLTGV2ZWxEZW1hbmQYDyACKAUSDgoG" + 
          "SXNSZWFkGBAgAigIOgiCtRgER3VpZCKCAQoRRFNfQWN0aXZhdGlvbkNvZGUS" + 
          "HAoOQWN0aXZhdGlvbkNvZGUYASACKAlCBIC1GCASDwoHSXNWYWxpZBgCIAIo" + 
          "CBITCgtJc0FjdGl2YXRlZBgDIAIoCBIVCgdBY2NvdW50GAQgAigJQgSAtRhA" + 
          "OhKCtRgOQWN0aXZhdGlvbkNvZGUidgoLRFNfR2lmdENvZGUSFgoIR2lmdENv" + 
          "ZGUYASACKAlCBIC1GCASDwoHSXNWYWxpZBgCIAIoCBIOCgZHaWZ0SWQYAyAC" + 
          "KAUSDgoGSXNVc2VkGAQgAigIEhAKCFVzZXJHdWlkGAUgAigDOgyCtRgIR2lm" + 
          "dENvZGUitwIKDERTX0FyZW5hSW5mbxIQCghVc2VyR3VpZBgBIAIoAxIPCgdJ" + 
          "c1ZhbGlkGAIgAigIEgwKBFJhbmsYAyACKAUSDwoHSXNSb2JvdBgEIAIoCBIZ" + 
          "CgpBcmVuYUJ5dGVzGAUgAigMQgWAtRiAQBIcCg5MYXN0QmF0dGxlVGltZRgG" + 
          "IAIoCUIEgLUYGBIWCg5MZWZ0RmlnaHRDb3VudBgHIAIoBRIVCg1CdXlGaWdo" + 
          "dENvdW50GAggAigFEiUKF0xhc3RSZXNldEZpZ2h0Q291bnRUaW1lGAkgAigJ" + 
          "QgSAtRgYEiMKFEFyZW5hSGlzdHJveVRpbWVMaXN0GAogAigJQgWAtRj/ARIj" + 
          "ChRBcmVuYUhpc3Ryb3lSYW5rTGlzdBgLIAIoCUIFgLUY/wE6DIK1GAhVc2Vy" + 
          "R3VpZCLQBQoORFNfQXJlbmFSZWNvcmQSEgoER3VpZBgBIAIoCUIEgLUYEBIP" + 
          "CgdJc1ZhbGlkGAIgAigIEhAKCFVzZXJHdWlkGAMgAigDEgwKBFJhbmsYBCAC" + 
          "KAUSGwoTSXNDaGFsbGVuZ2VyU3VjY2VzcxgFIAIoCBIXCglCZWdpblRpbWUY" + 
          "BiACKAlCBIC1GBgSFQoHRW5kVGltZRgHIAIoCUIEgLUYGBINCgVDR3VpZBgI" + 
          "IAIoAxIPCgdDSGVyb0lkGAkgAigFEg4KBkNMZXZlbBgKIAIoBRITCgtDRmln" + 
          "aHRTY29yZRgLIAIoBRIXCglDTmlja25hbWUYDCACKAlCBIC1GCASDQoFQ1Jh" + 
          "bmsYDSACKAUSEwoLQ1VzZXJEYW1hZ2UYDiACKAUSEwoLQ1BhcnRuZXJJZDEY" + 
          "DyACKAUSFwoPQ1BhcnRuZXJEYW1hZ2UxGBAgAigFEhMKC0NQYXJ0bmVySWQy" + 
          "GBEgAigFEhcKD0NQYXJ0bmVyRGFtYWdlMhgSIAIoBRITCgtDUGFydG5lcklk" + 
          "MxgTIAIoBRIXCg9DUGFydG5lckRhbWFnZTMYFCACKAUSDQoFVEd1aWQYFSAC" + 
          "KAMSDwoHVEhlcm9JZBgWIAIoBRIOCgZUTGV2ZWwYFyACKAUSEwoLVEZpZ2h0" + 
          "U2NvcmUYGCACKAUSFwoJVE5pY2tuYW1lGBkgAigJQgSAtRggEg0KBVRSYW5r" + 
          "GBogAigFEhMKC1RVc2VyRGFtYWdlGBsgAigFEhMKC1RQYXJ0bmVySWQxGBwg" + 
          "AigFEhcKD1RQYXJ0bmVyRGFtYWdlMRgdIAIoBRITCgtUUGFydG5lcklkMhge" + 
          "IAIoBRIXCg9UUGFydG5lckRhbWFnZTIYHyACKAUSEwoLVFBhcnRuZXJJZDMY" + 
          "ICACKAUSFwoPVFBhcnRuZXJEYW1hZ2UzGCEgAigFOhSCtRgER3VpZIq1GAhV" + 
          "c2VyR3VpZCKMAQoKRFNfQWNjb3VudBIVCgdBY2NvdW50GAEgAigJQgSAtRhA" + 
          "Eg8KB0lzVmFsaWQYAiACKAgSEAoISXNCYW5uZWQYAyACKAgSEQoJVXNlckd1" + 
          "aWQxGAQgAigDEhEKCVVzZXJHdWlkMhgFIAIoAxIRCglVc2VyR3VpZDMYBiAC" + 
          "KAM6C4K1GAdBY2NvdW50IssCCgtEU19Vc2VySW5mbxIMCgRHdWlkGAEgAigD" + 
          "EhcKCUFjY291bnRJZBgCIAIoCUIEgLUYQBIPCgdJc1ZhbGlkGAMgAigIEhYK" + 
          "CE5pY2tuYW1lGAQgAigJQgSAtRggEg4KBkhlcm9JZBgFIAIoBRINCgVMZXZl" + 
          "bBgGIAIoBRINCgVNb25leRgHIAIoBRIMCgRHb2xkGAggAigFEhEKCUV4cFBv" + 
          "aW50cxgJIAIoBRITCgtDaXR5U2NlbmVJZBgKIAIoBRILCgNWaXAYCyACKAUS" + 
          "HAoOTGFzdExvZ291dFRpbWUYDCACKAlCBIC1GBgSGAoKQ3JlYXRlVGltZRgN" + 
          "IAIoCUIEgLUYGBISCgpOZXdiaWVTdGVwGA4gAigDEhgKEE5ld2JpZUFjdGlv" + 
          "bkZsYWcYDyACKAM6FYK1GARHdWlkirUYCUFjY291bnRJZCLECgoQRFNfVXNl" + 
          "ckluZm9FeHRyYRIMCgRHdWlkGAEgAigDEg8KB0lzVmFsaWQYAiACKAgSDgoG" + 
          "R293RWxvGAMgAigFEhIKCkdvd01hdGNoZXMYBCACKAUSFQoNR293V2luTWF0" + 
          "Y2hlcxgFIAIoBRIPCgdTdGFtaW5hGAYgAigFEhcKD0J1eVN0YW1pbmFDb3Vu" + 
          "dBgHIAIoBRIfChdMYXN0QWRkU3RhbWluYVRpbWVzdGFtcBgIIAIoARIVCg1C" + 
          "dXlNb25leUNvdW50GAkgAigFEh0KFUxhc3RCdXlNb25leVRpbWVzdGFtcBgK" + 
          "IAIoARISCgpTZWxsSW5jb21lGAsgAigFEhkKEUxhc3RTZWxsVGltZXN0YW1w" + 
          "GAwgAigBEiIKFExhc3RSZXNldFN0YW1pbmFUaW1lGA0gAigJQgSAtRgYEiUK" + 
          "F0xhc3RSZXNldE1pZGFzVG91Y2hUaW1lGA4gAigJQgSAtRgYEh8KEUxhc3RS" + 
          "ZXNldFNlbGxUaW1lGA8gAigJQgSAtRgYEicKGUxhc3RSZXNldERhaWx5TWlz" + 
          "c2lvblRpbWUYECACKAlCBIC1GBgSFwoPQWN0aXZlUGFydG5lcklkGBEgAigF" + 
          "EhQKDEF0dGVtcHRBd2FyZBgSIAIoBRIfChdBdHRlbXB0Q3VyQWNjZXB0ZWRD" + 
          "b3VudBgTIAIoBRIcChRBdHRlbXB0QWNjZXB0ZWRBd2FyZBgUIAIoBRIsCh5M" + 
          "YXN0UmVzZXRBdHRlbXB0QXdhcmRDb3VudFRpbWUYFSACKAlCBIC1GBgSGQoR" + 
          "R29sZFRvbGxnYXRlQ291bnQYFiACKAUSLAoeTGFzdFJlc2V0R29sZFRvbGxn" + 
          "YXRlQ291bnRUaW1lGBcgAigJQgSAtRgYEh8KEEV4Y2hhbmdlR29vZExpc3QY" + 
          "GCACKAlCBYC1GP8BEiAKEkV4Y2hhbmdlR29vZE51bWJlchgZIAIoCUIEgLUY" + 
          "QBInChlMYXN0UmVzZXRFeGNoYW5nZUdvb2RUaW1lGBogAigJQgSAtRgYEicK" + 
          "GEV4Y2hhbmdlR29vZFJlZnJlc2hDb3VudBgbIAIoCUIFgLUY/wESIAoRQ29t" + 
          "cGxldGVTY2VuZUxpc3QYHCACKAlCBYC1GP8BEiEKE0NvbXBsZXRlU2NlbmVO" + 
          "dW1iZXIYHSACKAlCBIC1GEASJQoXTGFzdFJlc2V0U2NlbmVDb3VudFRpbWUY" + 
          "HiACKAlCBIC1GBgSDQoFVmlnb3IYHyACKAUSHQoVTGFzdEFkZFZpZ29yVGlt" + 
          "ZXN0YW1wGCAgAigBEhMKC1VzZWRTdGFtaW5hGCEgAigFEhgKEERheVJlc3RT" + 
          "aWduQ291bnQYIiACKAUSJwoZTGFzdFJlc2V0RGF5U2lnbkNvdW50VGltZRgj" + 
          "IAIoCUIEgLUYGBIWCg5Nb250aFNpZ25Db3VudBgkIAIoBRIpChtMYXN0UmVz" + 
          "ZXRNb250aFNpZ25Db3VudFRpbWUYJSACKAlCBIC1GBgSIQoTTW9udGhDYXJk" + 
          "RXhwaXJlVGltZRgmIAIoCUIEgLUYGBIhChJHb3dIaXN0cm95VGltZUxpc3QY" + 
          "JyACKAlCBYC1GP8BEiAKEUdvd0hpc3Ryb3lFbG9MaXN0GCggAigJQgWAtRj/" + 
          "ARIdChVJc1dlZWtseUxvZ2luUmV3YXJkZWQYKSACKAgSIwoVV2Vla2x5TG9n" + 
          "aW5SZXdhcmRMaXN0GCogAigJQgSAtRhAEiwKHkxhc3RSZXNldFdlZWtseUxv" + 
          "Z2luUmV3YXJkVGltZRgrIAIoCUIEgLUYGDoIgrUYBEd1aWQitQEKDERTX0Vx" + 
          "dWlwSW5mbxISCgRHdWlkGAEgAigJQgSAtRgQEhAKCFVzZXJHdWlkGAIgAigD" + 
          "Eg8KB0lzVmFsaWQYAyACKAgSEAoIUG9zaXRpb24YBCACKAUSDgoGSXRlbUlk" + 
          "GAUgAigFEg8KB0l0ZW1OdW0YBiACKAUSDQoFTGV2ZWwYByACKAUSFgoOQXBw" + 
          "ZW5kUHJvcGVydHkYCCACKAU6FIK1GARHdWlkirUYCFVzZXJHdWlkIrQBCgtE" + 
          "U19JdGVtSW5mbxISCgRHdWlkGAEgAigJQgSAtRgQEhAKCFVzZXJHdWlkGAIg" + 
          "AigDEg8KB0lzVmFsaWQYAyACKAgSEAoIUG9zaXRpb24YBCACKAUSDgoGSXRl" + 
          "bUlkGAUgAigFEg8KB0l0ZW1OdW0YBiACKAUSDQoFTGV2ZWwYByACKAUSFgoO" + 
          "QXBwZW5kUHJvcGVydHkYCCACKAU6FIK1GARHdWlkirUYCFVzZXJHdWlkIr8B" + 
          "Cg1EU19MZWdhY3lJbmZvEhIKBEd1aWQYASACKAlCBIC1GBASEAoIVXNlckd1" + 
          "aWQYAiACKAMSDwoHSXNWYWxpZBgDIAIoCBIQCghQb3NpdGlvbhgEIAIoBRIQ" + 
          "CghMZWdhY3lJZBgFIAIoBRITCgtMZWdhY3lMZXZlbBgGIAIoBRIWCg5BcHBl" + 
          "bmRQcm9wZXJ0eRgHIAIoBRIQCghJc1VubG9jaxgIIAIoCDoUgrUYBEd1aWSK" + 
          "tRgIVXNlckd1aWQi0AEKDERTX1hTb3VsSW5mbxISCgRHdWlkGAEgAigJQgSA" + 
          "tRgQEhAKCFVzZXJHdWlkGAIgAigDEg8KB0lzVmFsaWQYAyACKAgSEAoIUG9z" + 
          "aXRpb24YBCACKAUSEQoJWFNvdWxUeXBlGAUgAigFEg8KB1hTb3VsSWQYBiAC" + 
          "KAUSEgoKWFNvdWxMZXZlbBgHIAIoBRIQCghYU291bEV4cBgIIAIoBRIXCg9Y" + 
          "U291bE1vZGVsTGV2ZWwYCSACKAU6FIK1GARHdWlkirUYCFVzZXJHdWlkIosB" + 
          "CgxEU19Ta2lsbEluZm8SEgoER3VpZBgBIAIoCUIEgLUYEBIQCghVc2VyR3Vp" + 
          "ZBgCIAIoAxIPCgdJc1ZhbGlkGAMgAigIEg8KB1NraWxsSWQYBCACKAUSDQoF" + 
          "TGV2ZWwYBSACKAUSDgoGUHJlc2V0GAYgAigFOhSCtRgER3VpZIq1GAhVc2Vy" + 
          "R3VpZCKcAQoORFNfTWlzc2lvbkluZm8SEgoER3VpZBgBIAIoCUIEgLUYEBIQ" + 
          "CghVc2VyR3VpZBgCIAIoAxIPCgdJc1ZhbGlkGAMgAigIEhEKCU1pc3Npb25J" + 
          "ZBgEIAIoBRIUCgxNaXNzaW9uVmFsdWUYBSACKAUSFAoMTWlzc2lvblN0YXRl" + 
          "GAYgAigFOhSCtRgER3VpZIq1GAhVc2VyR3VpZCKBAQoMRFNfTGV2ZWxJbmZv" + 
          "EhIKBEd1aWQYASACKAlCBIC1GBASEAoIVXNlckd1aWQYAiACKAMSDwoHSXNW" + 
          "YWxpZBgDIAIoCBIPCgdMZXZlbElkGAQgAigFEhMKC0xldmVsUmVjb3JkGAUg" + 
          "AigFOhSCtRgER3VpZIq1GAhVc2VyR3VpZCKZAwoRRFNfRXhwZWRpdGlvbklu" + 
          "Zm8SEgoER3VpZBgBIAIoCUIEgLUYEBIQCghVc2VyR3VpZBgCIAIoAxIPCgdJ" + 
          "c1ZhbGlkGAMgAigIEhEKCVN0YXJ0VGltZRgEIAIoARIVCg1GaWdodGluZ1Nj" + 
          "b3JlGAUgAigFEgoKAkhQGAYgAigFEgoKAk1QGAcgAigFEgwKBFJhZ2UYCCAC" + 
          "KAUSEAoIU2NoZWR1bGUYCSACKAUSFAoMTW9uc3RlckNvdW50GAogAigFEhEK" + 
          "CUJvc3NDb3VudBgLIAIoBRIWCg5PbmVQbGF5ZXJDb3VudBgMIAIoBRIYCgpV" + 
          "bnJld2FyZGVkGA0gAigJQgSAtRhAEhQKDFRvbGxnYXRlVHlwZRgOIAIoBRIY" + 
          "CglFbmVteUxpc3QYDyACKAlCBYC1GP8BEhwKDUVuZW15QXR0ckxpc3QYECAC" + 
          "KAlCBYC1GP8BEhUKBkltYWdlQRgRIAIoDEIFgLUYgEASFQoGSW1hZ2VCGBIg" + 
          "AigMQgWAtRiAQDoUgrUYBEd1aWSKtRgIVXNlckd1aWQirwEKEERTX01haWxT" + 
          "dGF0ZUluZm8SEgoER3VpZBgBIAIoCUIEgLUYEBIQCghVc2VyR3VpZBgCIAIo" + 
          "AxIPCgdJc1ZhbGlkGAMgAigIEhAKCE1haWxHdWlkGAQgAigDEg4KBklzUmVh" + 
          "ZBgFIAIoCBISCgpJc1JlY2VpdmVkGAYgAigIEhgKCkV4cGlyeURhdGUYByAC" + 
          "KAlCBIC1GBg6FIK1GARHdWlkirUYCFVzZXJHdWlkIpsBCg5EU19QYXJ0bmVy" + 
          "SW5mbxISCgRHdWlkGAEgAigJQgSAtRgQEhAKCFVzZXJHdWlkGAIgAigDEg8K" + 
          "B0lzVmFsaWQYAyACKAgSEQoJUGFydG5lcklkGAQgAigFEhUKDUFkZGl0aW9u" + 
          "TGV2ZWwYBSACKAUSEgoKU2tpbGxMZXZlbBgGIAIoBToUgrUYBEd1aWSKtRgI" + 
          "VXNlckd1aWQixAEKDURTX0ZyaWVuZEluZm8SEgoER3VpZBgBIAIoCUIEgLUY" + 
          "EBIQCghVc2VyR3VpZBgCIAIoAxIPCgdJc1ZhbGlkGAMgAigIEhIKCkZyaWVu" + 
          "ZEd1aWQYBCACKAMSHAoORnJpZW5kTmlja25hbWUYBSACKAlCBIC1GCASDgoG" + 
          "SGVyb0lkGAYgAigFEg0KBUxldmVsGAcgAigFEhUKDUZpZ2h0aW5nU2NvcmUY" + 
          "CCACKAU6FIK1GARHdWlkirUYCFVzZXJHdWlkInQKC0RTUF9BY2NvdW50EhUK" + 
          "B0FjY291bnQYASACKAlCBIC1GEASIQoMQWNjb3VudEJhc2ljGAIgAigLMgsu" + 
          "RFNfQWNjb3VudBIeCghVc2VyTGlzdBgDIAMoCzIMLkRTX1VzZXJJbmZvOguC" + 
          "tRgHQWNjb3VudCKDBAoIRFNQX1VzZXISEAoIVXNlckd1aWQYASACKAMSHwoJ" + 
          "VXNlckJhc2ljGAIgAigLMgwuRFNfVXNlckluZm8SJAoJVXNlckV4dHJhGAMg" + 
          "AigLMhEuRFNfVXNlckluZm9FeHRyYRIgCglFcXVpcExpc3QYBCADKAsyDS5E" + 
          "U19FcXVpcEluZm8SHgoISXRlbUxpc3QYBSADKAsyDC5EU19JdGVtSW5mbxIi" + 
          "CgpMZWdhY3lMaXN0GAYgAygLMg4uRFNfTGVnYWN5SW5mbxIgCglYU291bExp" + 
          "c3QYByADKAsyDS5EU19YU291bEluZm8SIAoJU2tpbGxMaXN0GAggAygLMg0u" + 
          "RFNfU2tpbGxJbmZvEiQKC01pc3Npb25MaXN0GAkgAygLMg8uRFNfTWlzc2lv" + 
          "bkluZm8SIAoJTGV2ZWxMaXN0GAogAygLMg0uRFNfTGV2ZWxJbmZvEioKDlVz" + 
          "ZXJFeHBlZGl0aW9uGAsgAigLMhIuRFNfRXhwZWRpdGlvbkluZm8SKAoNTWFp" + 
          "bFN0YXRlTGlzdBgMIAMoCzIRLkRTX01haWxTdGF0ZUluZm8SJAoLUGFydG5l" + 
          "ckxpc3QYDSADKAsyDy5EU19QYXJ0bmVySW5mbxIiCgpGcmllbmRMaXN0GA4g" + 
          "AygLMg4uRFNfRnJpZW5kSW5mbzoMgrUYCFVzZXJHdWlkIooBChFEU1BfQ3Jl" + 
          "YXRlQWNjb3VudBIVCgdBY2NvdW50GAEgAigJQgSAtRhAEiEKDEFjY291bnRC" + 
          "YXNpYxgCIAIoCzILLkRTX0FjY291bnQSLgoSVXNlZEFjdGl2YXRpb25Db2Rl" + 
          "GAMgAigLMhIuRFNfQWN0aXZhdGlvbkNvZGU6C4K1GAdBY2NvdW50InsKDkRT" + 
          "UF9DcmVhdGVVc2VyEhUKB0FjY291bnQYASACKAlCBIC1GEASIQoMQWNjb3Vu" + 
          "dEJhc2ljGAIgAigLMgsuRFNfQWNjb3VudBIiCgxVc2VkTmlja25hbWUYAyAC" + 
          "KAsyDC5EU19OaWNrbmFtZToLgrUYB0FjY291bnQifAoNRFNQX1VzZXJBcmVu" + 
          "YRIQCghVc2VyR3VpZBgBIAIoAxIhCgpBcmVuYUJhc2ljGAIgAigLMg0uRFNf" + 
          "QXJlbmFJbmZvEigKD0FyZW5hUmVjb3JkTGlzdBgDIAMoCzIPLkRTX0FyZW5h" + 
          "UmVjb3JkOgyCtRgIVXNlckd1aWQiSAoIRFNHX0d1aWQSEQoJRGF0YU1zZ0lk" + 
          "GAEgAigFEhoKCEd1aWRMaXN0GAIgAygLMgguRFNfR3VpZDoNgrUYCURhdGFN" + 
          "c2dJZCJmChJEU0dfQWN0aXZhdGlvbkNvZGUSEQoJRGF0YU1zZ0lkGAEgAigF" + 
          "Ei4KEkFjdGl2YXRpb25Db2RlTGlzdBgCIAMoCzISLkRTX0FjdGl2YXRpb25D" + 
          "b2RlOg2CtRgJRGF0YU1zZ0lkIlQKDERTR19OaWNrbmFtZRIRCglEYXRhTXNn" + 
          "SWQYASACKAUSIgoMTmlja25hbWVMaXN0GAIgAygLMgwuRFNfTmlja25hbWU6" + 
          "DYK1GAlEYXRhTXNnSWQiUQoLRFNHX0dvd1N0YXISEQoJRGF0YU1zZ0lkGAEg" + 
          "AigFEiAKC0dvd1N0YXJMaXN0GAIgAygLMgsuRFNfR293U3RhcjoNgrUYCURh" + 
          "dGFNc2dJZCJMCghEU0dfTWFpbBIRCglEYXRhTXNnSWQYASACKAUSHgoITWFp" + 
          "bExpc3QYAiADKAsyDC5EU19NYWlsSW5mbzoNgrUYCURhdGFNc2dJZCJUCgxE" + 
          "U0dfR2lmdENvZGUSEQoJRGF0YU1zZ0lkGAEgAigFEiIKDEdpZnRDb2RlTGlz" + 
          "dBgCIAMoCzIMLkRTX0dpZnRDb2RlOg2CtRgJRGF0YU1zZ0lkIlMKDURTR19B" + 
          "cmVuYVJhbmsSEQoJRGF0YU1zZ0lkGAEgAigFEiAKCUFyZW5hTGlzdBgCIAMo" + 
          "CzINLkRTX0FyZW5hSW5mbzoNgrUYCURhdGFNc2dJZCJYCg9EU0dfQXJlbmFS" + 
          "ZWNvcmQSEQoJRGF0YU1zZ0lkGAEgAigFEiMKClJlY29yZExpc3QYAiADKAsy" + 
          "Dy5EU19BcmVuYVJlY29yZDoNgrUYCURhdGFNc2dJZCJGCg5EU0RfQmFuQWNj" + 
          "b3VudBIVCgdBY2NvdW50GAEgAigJQgSAtRhAEhAKCElzQmFubmVkGAIgAigI" + 
          "OguCtRgHQWNjb3VudDovCgd2ZXJzaW9uEhwuZ29vZ2xlLnByb3RvYnVmLkZp" + 
          "bGVPcHRpb25zGNCGAyABKAk6OQoOZHNfcHJpbWFyeV9rZXkSHy5nb29nbGUu" + 
          "cHJvdG9idWYuTWVzc2FnZU9wdGlvbnMY0IYDIAEoCTo5Cg5kc19mb3JlaWdu" + 
          "X2tleRIfLmdvb2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxjRhgMgASgJ" + 
          "OjEKCG1heF9zaXplEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjQ" + 
          "hgMgASgFQgqCtRgGMC4xLjE1");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DS_Guid__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DS_Guid__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Guid, global::DashFire.DataStore.DS_Guid.Builder>(internal__static_DS_Guid__Descriptor,
                new string[] { "GuidType", "IsValid", "GuidValue", });
        internal__static_DS_Nickname__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DS_Nickname__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Nickname, global::DashFire.DataStore.DS_Nickname.Builder>(internal__static_DS_Nickname__Descriptor,
                new string[] { "Nickname", "IsValid", "UserGuid", });
        internal__static_DS_GowStar__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DS_GowStar__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_GowStar, global::DashFire.DataStore.DS_GowStar.Builder>(internal__static_DS_GowStar__Descriptor,
                new string[] { "Rank", "IsValid", "UserGuid", "Nickname", "HeroId", "Level", "FightingScore", "GowElo", });
        internal__static_DS_MailInfo__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DS_MailInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MailInfo, global::DashFire.DataStore.DS_MailInfo.Builder>(internal__static_DS_MailInfo__Descriptor,
                new string[] { "Guid", "IsValid", "ModuleTypeId", "Sender", "Receiver", "SendDate", "ExpiryDate", "Title", "Text", "Money", "Gold", "Stamina", "ItemIds", "ItemNumbers", "LevelDemand", "IsRead", });
        internal__static_DS_ActivationCode__Descriptor = Descriptor.MessageTypes[4];
        internal__static_DS_ActivationCode__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ActivationCode, global::DashFire.DataStore.DS_ActivationCode.Builder>(internal__static_DS_ActivationCode__Descriptor,
                new string[] { "ActivationCode", "IsValid", "IsActivated", "Account", });
        internal__static_DS_GiftCode__Descriptor = Descriptor.MessageTypes[5];
        internal__static_DS_GiftCode__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_GiftCode, global::DashFire.DataStore.DS_GiftCode.Builder>(internal__static_DS_GiftCode__Descriptor,
                new string[] { "GiftCode", "IsValid", "GiftId", "IsUsed", "UserGuid", });
        internal__static_DS_ArenaInfo__Descriptor = Descriptor.MessageTypes[6];
        internal__static_DS_ArenaInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ArenaInfo, global::DashFire.DataStore.DS_ArenaInfo.Builder>(internal__static_DS_ArenaInfo__Descriptor,
                new string[] { "UserGuid", "IsValid", "Rank", "IsRobot", "ArenaBytes", "LastBattleTime", "LeftFightCount", "BuyFightCount", "LastResetFightCountTime", "ArenaHistroyTimeList", "ArenaHistroyRankList", });
        internal__static_DS_ArenaRecord__Descriptor = Descriptor.MessageTypes[7];
        internal__static_DS_ArenaRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ArenaRecord, global::DashFire.DataStore.DS_ArenaRecord.Builder>(internal__static_DS_ArenaRecord__Descriptor,
                new string[] { "Guid", "IsValid", "UserGuid", "Rank", "IsChallengerSuccess", "BeginTime", "EndTime", "CGuid", "CHeroId", "CLevel", "CFightScore", "CNickname", "CRank", "CUserDamage", "CPartnerId1", "CPartnerDamage1", "CPartnerId2", "CPartnerDamage2", "CPartnerId3", "CPartnerDamage3", "TGuid", "THeroId", "TLevel", "TFightScore", "TNickname", "TRank", "TUserDamage", "TPartnerId1", "TPartnerDamage1", "TPartnerId2", "TPartnerDamage2", "TPartnerId3", "TPartnerDamage3", });
        internal__static_DS_Account__Descriptor = Descriptor.MessageTypes[8];
        internal__static_DS_Account__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_Account, global::DashFire.DataStore.DS_Account.Builder>(internal__static_DS_Account__Descriptor,
                new string[] { "Account", "IsValid", "IsBanned", "UserGuid1", "UserGuid2", "UserGuid3", });
        internal__static_DS_UserInfo__Descriptor = Descriptor.MessageTypes[9];
        internal__static_DS_UserInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_UserInfo, global::DashFire.DataStore.DS_UserInfo.Builder>(internal__static_DS_UserInfo__Descriptor,
                new string[] { "Guid", "AccountId", "IsValid", "Nickname", "HeroId", "Level", "Money", "Gold", "ExpPoints", "CitySceneId", "Vip", "LastLogoutTime", "CreateTime", "NewbieStep", "NewbieActionFlag", });
        internal__static_DS_UserInfoExtra__Descriptor = Descriptor.MessageTypes[10];
        internal__static_DS_UserInfoExtra__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_UserInfoExtra, global::DashFire.DataStore.DS_UserInfoExtra.Builder>(internal__static_DS_UserInfoExtra__Descriptor,
                new string[] { "Guid", "IsValid", "GowElo", "GowMatches", "GowWinMatches", "Stamina", "BuyStaminaCount", "LastAddStaminaTimestamp", "BuyMoneyCount", "LastBuyMoneyTimestamp", "SellIncome", "LastSellTimestamp", "LastResetStaminaTime", "LastResetMidasTouchTime", "LastResetSellTime", "LastResetDailyMissionTime", "ActivePartnerId", "AttemptAward", "AttemptCurAcceptedCount", "AttemptAcceptedAward", "LastResetAttemptAwardCountTime", "GoldTollgateCount", "LastResetGoldTollgateCountTime", "ExchangeGoodList", "ExchangeGoodNumber", "LastResetExchangeGoodTime", "ExchangeGoodRefreshCount", "CompleteSceneList", "CompleteSceneNumber", "LastResetSceneCountTime", "Vigor", "LastAddVigorTimestamp", "UsedStamina", "DayRestSignCount", "LastResetDaySignCountTime", "MonthSignCount", "LastResetMonthSignCountTime", "MonthCardExpireTime", "GowHistroyTimeList", "GowHistroyEloList", "IsWeeklyLoginRewarded", "WeeklyLoginRewardList", "LastResetWeeklyLoginRewardTime", });
        internal__static_DS_EquipInfo__Descriptor = Descriptor.MessageTypes[11];
        internal__static_DS_EquipInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_EquipInfo, global::DashFire.DataStore.DS_EquipInfo.Builder>(internal__static_DS_EquipInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "Position", "ItemId", "ItemNum", "Level", "AppendProperty", });
        internal__static_DS_ItemInfo__Descriptor = Descriptor.MessageTypes[12];
        internal__static_DS_ItemInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ItemInfo, global::DashFire.DataStore.DS_ItemInfo.Builder>(internal__static_DS_ItemInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "Position", "ItemId", "ItemNum", "Level", "AppendProperty", });
        internal__static_DS_LegacyInfo__Descriptor = Descriptor.MessageTypes[13];
        internal__static_DS_LegacyInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_LegacyInfo, global::DashFire.DataStore.DS_LegacyInfo.Builder>(internal__static_DS_LegacyInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "Position", "LegacyId", "LegacyLevel", "AppendProperty", "IsUnlock", });
        internal__static_DS_XSoulInfo__Descriptor = Descriptor.MessageTypes[14];
        internal__static_DS_XSoulInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_XSoulInfo, global::DashFire.DataStore.DS_XSoulInfo.Builder>(internal__static_DS_XSoulInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "Position", "XSoulType", "XSoulId", "XSoulLevel", "XSoulExp", "XSoulModelLevel", });
        internal__static_DS_SkillInfo__Descriptor = Descriptor.MessageTypes[15];
        internal__static_DS_SkillInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_SkillInfo, global::DashFire.DataStore.DS_SkillInfo.Builder>(internal__static_DS_SkillInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "SkillId", "Level", "Preset", });
        internal__static_DS_MissionInfo__Descriptor = Descriptor.MessageTypes[16];
        internal__static_DS_MissionInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MissionInfo, global::DashFire.DataStore.DS_MissionInfo.Builder>(internal__static_DS_MissionInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "MissionId", "MissionValue", "MissionState", });
        internal__static_DS_LevelInfo__Descriptor = Descriptor.MessageTypes[17];
        internal__static_DS_LevelInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_LevelInfo, global::DashFire.DataStore.DS_LevelInfo.Builder>(internal__static_DS_LevelInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "LevelId", "LevelRecord", });
        internal__static_DS_ExpeditionInfo__Descriptor = Descriptor.MessageTypes[18];
        internal__static_DS_ExpeditionInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_ExpeditionInfo, global::DashFire.DataStore.DS_ExpeditionInfo.Builder>(internal__static_DS_ExpeditionInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "StartTime", "FightingScore", "HP", "MP", "Rage", "Schedule", "MonsterCount", "BossCount", "OnePlayerCount", "Unrewarded", "TollgateType", "EnemyList", "EnemyAttrList", "ImageA", "ImageB", });
        internal__static_DS_MailStateInfo__Descriptor = Descriptor.MessageTypes[19];
        internal__static_DS_MailStateInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_MailStateInfo, global::DashFire.DataStore.DS_MailStateInfo.Builder>(internal__static_DS_MailStateInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "MailGuid", "IsRead", "IsReceived", "ExpiryDate", });
        internal__static_DS_PartnerInfo__Descriptor = Descriptor.MessageTypes[20];
        internal__static_DS_PartnerInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_PartnerInfo, global::DashFire.DataStore.DS_PartnerInfo.Builder>(internal__static_DS_PartnerInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "PartnerId", "AdditionLevel", "SkillLevel", });
        internal__static_DS_FriendInfo__Descriptor = Descriptor.MessageTypes[21];
        internal__static_DS_FriendInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DS_FriendInfo, global::DashFire.DataStore.DS_FriendInfo.Builder>(internal__static_DS_FriendInfo__Descriptor,
                new string[] { "Guid", "UserGuid", "IsValid", "FriendGuid", "FriendNickname", "HeroId", "Level", "FightingScore", });
        internal__static_DSP_Account__Descriptor = Descriptor.MessageTypes[22];
        internal__static_DSP_Account__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_Account, global::DashFire.DataStore.DSP_Account.Builder>(internal__static_DSP_Account__Descriptor,
                new string[] { "Account", "AccountBasic", "UserList", });
        internal__static_DSP_User__Descriptor = Descriptor.MessageTypes[23];
        internal__static_DSP_User__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_User, global::DashFire.DataStore.DSP_User.Builder>(internal__static_DSP_User__Descriptor,
                new string[] { "UserGuid", "UserBasic", "UserExtra", "EquipList", "ItemList", "LegacyList", "XSoulList", "SkillList", "MissionList", "LevelList", "UserExpedition", "MailStateList", "PartnerList", "FriendList", });
        internal__static_DSP_CreateAccount__Descriptor = Descriptor.MessageTypes[24];
        internal__static_DSP_CreateAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_CreateAccount, global::DashFire.DataStore.DSP_CreateAccount.Builder>(internal__static_DSP_CreateAccount__Descriptor,
                new string[] { "Account", "AccountBasic", "UsedActivationCode", });
        internal__static_DSP_CreateUser__Descriptor = Descriptor.MessageTypes[25];
        internal__static_DSP_CreateUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_CreateUser, global::DashFire.DataStore.DSP_CreateUser.Builder>(internal__static_DSP_CreateUser__Descriptor,
                new string[] { "Account", "AccountBasic", "UsedNickname", });
        internal__static_DSP_UserArena__Descriptor = Descriptor.MessageTypes[26];
        internal__static_DSP_UserArena__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSP_UserArena, global::DashFire.DataStore.DSP_UserArena.Builder>(internal__static_DSP_UserArena__Descriptor,
                new string[] { "UserGuid", "ArenaBasic", "ArenaRecordList", });
        internal__static_DSG_Guid__Descriptor = Descriptor.MessageTypes[27];
        internal__static_DSG_Guid__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Guid, global::DashFire.DataStore.DSG_Guid.Builder>(internal__static_DSG_Guid__Descriptor,
                new string[] { "DataMsgId", "GuidList", });
        internal__static_DSG_ActivationCode__Descriptor = Descriptor.MessageTypes[28];
        internal__static_DSG_ActivationCode__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ActivationCode, global::DashFire.DataStore.DSG_ActivationCode.Builder>(internal__static_DSG_ActivationCode__Descriptor,
                new string[] { "DataMsgId", "ActivationCodeList", });
        internal__static_DSG_Nickname__Descriptor = Descriptor.MessageTypes[29];
        internal__static_DSG_Nickname__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Nickname, global::DashFire.DataStore.DSG_Nickname.Builder>(internal__static_DSG_Nickname__Descriptor,
                new string[] { "DataMsgId", "NicknameList", });
        internal__static_DSG_GowStar__Descriptor = Descriptor.MessageTypes[30];
        internal__static_DSG_GowStar__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_GowStar, global::DashFire.DataStore.DSG_GowStar.Builder>(internal__static_DSG_GowStar__Descriptor,
                new string[] { "DataMsgId", "GowStarList", });
        internal__static_DSG_Mail__Descriptor = Descriptor.MessageTypes[31];
        internal__static_DSG_Mail__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_Mail, global::DashFire.DataStore.DSG_Mail.Builder>(internal__static_DSG_Mail__Descriptor,
                new string[] { "DataMsgId", "MailList", });
        internal__static_DSG_GiftCode__Descriptor = Descriptor.MessageTypes[32];
        internal__static_DSG_GiftCode__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_GiftCode, global::DashFire.DataStore.DSG_GiftCode.Builder>(internal__static_DSG_GiftCode__Descriptor,
                new string[] { "DataMsgId", "GiftCodeList", });
        internal__static_DSG_ArenaRank__Descriptor = Descriptor.MessageTypes[33];
        internal__static_DSG_ArenaRank__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ArenaRank, global::DashFire.DataStore.DSG_ArenaRank.Builder>(internal__static_DSG_ArenaRank__Descriptor,
                new string[] { "DataMsgId", "ArenaList", });
        internal__static_DSG_ArenaRecord__Descriptor = Descriptor.MessageTypes[34];
        internal__static_DSG_ArenaRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSG_ArenaRecord, global::DashFire.DataStore.DSG_ArenaRecord.Builder>(internal__static_DSG_ArenaRecord__Descriptor,
                new string[] { "DataMsgId", "RecordList", });
        internal__static_DSD_BanAccount__Descriptor = Descriptor.MessageTypes[35];
        internal__static_DSD_BanAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.DataStore.DSD_BanAccount, global::DashFire.DataStore.DSD_BanAccount.Builder>(internal__static_DSD_BanAccount__Descriptor,
                new string[] { "Account", "IsBanned", });
        global::DashFire.DataStore.Data.Version = pb::GeneratedSingleExtension<string>.CreateInstance(global::DashFire.DataStore.Data.Descriptor.Extensions[0]);
        global::DashFire.DataStore.Data.DsPrimaryKey = pb::GeneratedSingleExtension<string>.CreateInstance(global::DashFire.DataStore.Data.Descriptor.Extensions[1]);
        global::DashFire.DataStore.Data.DsForeignKey = pb::GeneratedSingleExtension<string>.CreateInstance(global::DashFire.DataStore.Data.Descriptor.Extensions[2]);
        global::DashFire.DataStore.Data.MaxSize = pb::GeneratedSingleExtension<int>.CreateInstance(global::DashFire.DataStore.Data.Descriptor.Extensions[3]);
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_Guid : pb::GeneratedMessage<DS_Guid, DS_Guid.Builder> {
    private DS_Guid() { }
    private static readonly DS_Guid defaultInstance = new DS_Guid().MakeReadOnly();
    private static readonly string[] _dSGuidFieldNames = new string[] { "GuidType", "GuidValue", "IsValid" };
    private static readonly uint[] _dSGuidFieldTags = new uint[] { 10, 24, 16 };
    public static DS_Guid DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_Guid DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_Guid ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Guid__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_Guid, DS_Guid.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Guid__FieldAccessorTable; }
    }
    
    public const int GuidTypeFieldNumber = 1;
    private bool hasGuidType;
    private string guidType_ = "";
    public bool HasGuidType {
      get { return hasGuidType; }
    }
    public string GuidType {
      get { return guidType_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int GuidValueFieldNumber = 3;
    private bool hasGuidValue;
    private long guidValue_;
    public bool HasGuidValue {
      get { return hasGuidValue; }
    }
    public long GuidValue {
      get { return guidValue_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuidType) return false;
        if (!hasIsValid) return false;
        if (!hasGuidValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGuidFieldNames;
      if (hasGuidType) {
        output.WriteString(1, field_names[0], GuidType);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[2], IsValid);
      }
      if (hasGuidValue) {
        output.WriteInt64(3, field_names[1], GuidValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuidType) {
          size += pb::CodedOutputStream.ComputeStringSize(1, GuidType);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasGuidValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, GuidValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_Guid ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Guid ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Guid ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Guid ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Guid ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Guid ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_Guid ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_Guid ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_Guid ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Guid ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_Guid MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_Guid prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_Guid, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_Guid cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_Guid result;
      
      private DS_Guid PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_Guid original = result;
          result = new DS_Guid();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_Guid MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_Guid.Descriptor; }
      }
      
      public override DS_Guid DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_Guid.DefaultInstance; }
      }
      
      public override DS_Guid BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_Guid) {
          return MergeFrom((DS_Guid) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_Guid other) {
        if (other == global::DashFire.DataStore.DS_Guid.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuidType) {
          GuidType = other.GuidType;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasGuidValue) {
          GuidValue = other.GuidValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGuidFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGuidFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuidType = input.ReadString(ref result.guidType_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasGuidValue = input.ReadInt64(ref result.guidValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuidType {
        get { return result.hasGuidType; }
      }
      public string GuidType {
        get { return result.GuidType; }
        set { SetGuidType(value); }
      }
      public Builder SetGuidType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuidType = true;
        result.guidType_ = value;
        return this;
      }
      public Builder ClearGuidType() {
        PrepareBuilder();
        result.hasGuidType = false;
        result.guidType_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasGuidValue {
        get { return result.hasGuidValue; }
      }
      public long GuidValue {
        get { return result.GuidValue; }
        set { SetGuidValue(value); }
      }
      public Builder SetGuidValue(long value) {
        PrepareBuilder();
        result.hasGuidValue = true;
        result.guidValue_ = value;
        return this;
      }
      public Builder ClearGuidValue() {
        PrepareBuilder();
        result.hasGuidValue = false;
        result.guidValue_ = 0L;
        return this;
      }
    }
    static DS_Guid() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_Nickname : pb::GeneratedMessage<DS_Nickname, DS_Nickname.Builder> {
    private DS_Nickname() { }
    private static readonly DS_Nickname defaultInstance = new DS_Nickname().MakeReadOnly();
    private static readonly string[] _dSNicknameFieldNames = new string[] { "IsValid", "Nickname", "UserGuid" };
    private static readonly uint[] _dSNicknameFieldTags = new uint[] { 16, 10, 24 };
    public static DS_Nickname DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_Nickname DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_Nickname ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Nickname__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_Nickname, DS_Nickname.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Nickname__FieldAccessorTable; }
    }
    
    public const int NicknameFieldNumber = 1;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int UserGuidFieldNumber = 3;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNickname) return false;
        if (!hasIsValid) return false;
        if (!hasUserGuid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSNicknameFieldNames;
      if (hasNickname) {
        output.WriteString(1, field_names[1], Nickname);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[0], IsValid);
      }
      if (hasUserGuid) {
        output.WriteInt64(3, field_names[2], UserGuid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Nickname);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, UserGuid);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_Nickname ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_Nickname ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_Nickname ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_Nickname ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Nickname ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_Nickname MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_Nickname prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_Nickname, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_Nickname cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_Nickname result;
      
      private DS_Nickname PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_Nickname original = result;
          result = new DS_Nickname();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_Nickname MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_Nickname.Descriptor; }
      }
      
      public override DS_Nickname DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_Nickname.DefaultInstance; }
      }
      
      public override DS_Nickname BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_Nickname) {
          return MergeFrom((DS_Nickname) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_Nickname other) {
        if (other == global::DashFire.DataStore.DS_Nickname.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSNicknameFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSNicknameFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
    }
    static DS_Nickname() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_GowStar : pb::GeneratedMessage<DS_GowStar, DS_GowStar.Builder> {
    private DS_GowStar() { }
    private static readonly DS_GowStar defaultInstance = new DS_GowStar().MakeReadOnly();
    private static readonly string[] _dSGowStarFieldNames = new string[] { "FightingScore", "GowElo", "HeroId", "IsValid", "Level", "Nickname", "Rank", "UserGuid" };
    private static readonly uint[] _dSGowStarFieldTags = new uint[] { 56, 64, 40, 16, 48, 34, 8, 24 };
    public static DS_GowStar DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_GowStar DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_GowStar ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_GowStar__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_GowStar, DS_GowStar.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_GowStar__FieldAccessorTable; }
    }
    
    public const int RankFieldNumber = 1;
    private bool hasRank;
    private int rank_;
    public bool HasRank {
      get { return hasRank; }
    }
    public int Rank {
      get { return rank_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int UserGuidFieldNumber = 3;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int NicknameFieldNumber = 4;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int HeroIdFieldNumber = 5;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int LevelFieldNumber = 6;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int FightingScoreFieldNumber = 7;
    private bool hasFightingScore;
    private int fightingScore_;
    public bool HasFightingScore {
      get { return hasFightingScore; }
    }
    public int FightingScore {
      get { return fightingScore_; }
    }
    
    public const int GowEloFieldNumber = 8;
    private bool hasGowElo;
    private int gowElo_;
    public bool HasGowElo {
      get { return hasGowElo; }
    }
    public int GowElo {
      get { return gowElo_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRank) return false;
        if (!hasIsValid) return false;
        if (!hasUserGuid) return false;
        if (!hasNickname) return false;
        if (!hasHeroId) return false;
        if (!hasLevel) return false;
        if (!hasFightingScore) return false;
        if (!hasGowElo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGowStarFieldNames;
      if (hasRank) {
        output.WriteInt32(1, field_names[6], Rank);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[3], IsValid);
      }
      if (hasUserGuid) {
        output.WriteInt64(3, field_names[7], UserGuid);
      }
      if (hasNickname) {
        output.WriteString(4, field_names[5], Nickname);
      }
      if (hasHeroId) {
        output.WriteInt32(5, field_names[2], HeroId);
      }
      if (hasLevel) {
        output.WriteInt32(6, field_names[4], Level);
      }
      if (hasFightingScore) {
        output.WriteInt32(7, field_names[0], FightingScore);
      }
      if (hasGowElo) {
        output.WriteInt32(8, field_names[1], GowElo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRank) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Rank);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, UserGuid);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Nickname);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, HeroId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Level);
        }
        if (hasFightingScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, FightingScore);
        }
        if (hasGowElo) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, GowElo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_GowStar ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_GowStar ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_GowStar ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_GowStar ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_GowStar ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_GowStar MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_GowStar prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_GowStar, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_GowStar cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_GowStar result;
      
      private DS_GowStar PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_GowStar original = result;
          result = new DS_GowStar();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_GowStar MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_GowStar.Descriptor; }
      }
      
      public override DS_GowStar DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_GowStar.DefaultInstance; }
      }
      
      public override DS_GowStar BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_GowStar) {
          return MergeFrom((DS_GowStar) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_GowStar other) {
        if (other == global::DashFire.DataStore.DS_GowStar.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasFightingScore) {
          FightingScore = other.FightingScore;
        }
        if (other.HasGowElo) {
          GowElo = other.GowElo;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGowStarFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGowStarFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRank = input.ReadInt32(ref result.rank_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 34: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 40: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 48: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 56: {
              result.hasFightingScore = input.ReadInt32(ref result.fightingScore_);
              break;
            }
            case 64: {
              result.hasGowElo = input.ReadInt32(ref result.gowElo_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRank {
        get { return result.hasRank; }
      }
      public int Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(int value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = 0;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasFightingScore {
        get { return result.hasFightingScore; }
      }
      public int FightingScore {
        get { return result.FightingScore; }
        set { SetFightingScore(value); }
      }
      public Builder SetFightingScore(int value) {
        PrepareBuilder();
        result.hasFightingScore = true;
        result.fightingScore_ = value;
        return this;
      }
      public Builder ClearFightingScore() {
        PrepareBuilder();
        result.hasFightingScore = false;
        result.fightingScore_ = 0;
        return this;
      }
      
      public bool HasGowElo {
        get { return result.hasGowElo; }
      }
      public int GowElo {
        get { return result.GowElo; }
        set { SetGowElo(value); }
      }
      public Builder SetGowElo(int value) {
        PrepareBuilder();
        result.hasGowElo = true;
        result.gowElo_ = value;
        return this;
      }
      public Builder ClearGowElo() {
        PrepareBuilder();
        result.hasGowElo = false;
        result.gowElo_ = 0;
        return this;
      }
    }
    static DS_GowStar() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_MailInfo : pb::GeneratedMessage<DS_MailInfo, DS_MailInfo.Builder> {
    private DS_MailInfo() { }
    private static readonly DS_MailInfo defaultInstance = new DS_MailInfo().MakeReadOnly();
    private static readonly string[] _dSMailInfoFieldNames = new string[] { "ExpiryDate", "Gold", "Guid", "IsRead", "IsValid", "ItemIds", "ItemNumbers", "LevelDemand", "ModuleTypeId", "Money", "Receiver", "SendDate", "Sender", "Stamina", "Text", "Title" };
    private static readonly uint[] _dSMailInfoFieldTags = new uint[] { 58, 88, 8, 128, 16, 106, 114, 120, 24, 80, 40, 50, 34, 96, 74, 66 };
    public static DS_MailInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_MailInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_MailInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MailInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_MailInfo, DS_MailInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MailInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private long guid_;
    public bool HasGuid {
      get { return hasGuid; }
    }
    public long Guid {
      get { return guid_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int ModuleTypeIdFieldNumber = 3;
    private bool hasModuleTypeId;
    private int moduleTypeId_;
    public bool HasModuleTypeId {
      get { return hasModuleTypeId; }
    }
    public int ModuleTypeId {
      get { return moduleTypeId_; }
    }
    
    public const int SenderFieldNumber = 4;
    private bool hasSender;
    private string sender_ = "";
    public bool HasSender {
      get { return hasSender; }
    }
    public string Sender {
      get { return sender_; }
    }
    
    public const int ReceiverFieldNumber = 5;
    private bool hasReceiver;
    private long receiver_;
    public bool HasReceiver {
      get { return hasReceiver; }
    }
    public long Receiver {
      get { return receiver_; }
    }
    
    public const int SendDateFieldNumber = 6;
    private bool hasSendDate;
    private string sendDate_ = "";
    public bool HasSendDate {
      get { return hasSendDate; }
    }
    public string SendDate {
      get { return sendDate_; }
    }
    
    public const int ExpiryDateFieldNumber = 7;
    private bool hasExpiryDate;
    private string expiryDate_ = "";
    public bool HasExpiryDate {
      get { return hasExpiryDate; }
    }
    public string ExpiryDate {
      get { return expiryDate_; }
    }
    
    public const int TitleFieldNumber = 8;
    private bool hasTitle;
    private string title_ = "";
    public bool HasTitle {
      get { return hasTitle; }
    }
    public string Title {
      get { return title_; }
    }
    
    public const int TextFieldNumber = 9;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int MoneyFieldNumber = 10;
    private bool hasMoney;
    private int money_;
    public bool HasMoney {
      get { return hasMoney; }
    }
    public int Money {
      get { return money_; }
    }
    
    public const int GoldFieldNumber = 11;
    private bool hasGold;
    private int gold_;
    public bool HasGold {
      get { return hasGold; }
    }
    public int Gold {
      get { return gold_; }
    }
    
    public const int StaminaFieldNumber = 12;
    private bool hasStamina;
    private int stamina_;
    public bool HasStamina {
      get { return hasStamina; }
    }
    public int Stamina {
      get { return stamina_; }
    }
    
    public const int ItemIdsFieldNumber = 13;
    private bool hasItemIds;
    private string itemIds_ = "";
    public bool HasItemIds {
      get { return hasItemIds; }
    }
    public string ItemIds {
      get { return itemIds_; }
    }
    
    public const int ItemNumbersFieldNumber = 14;
    private bool hasItemNumbers;
    private string itemNumbers_ = "";
    public bool HasItemNumbers {
      get { return hasItemNumbers; }
    }
    public string ItemNumbers {
      get { return itemNumbers_; }
    }
    
    public const int LevelDemandFieldNumber = 15;
    private bool hasLevelDemand;
    private int levelDemand_;
    public bool HasLevelDemand {
      get { return hasLevelDemand; }
    }
    public int LevelDemand {
      get { return levelDemand_; }
    }
    
    public const int IsReadFieldNumber = 16;
    private bool hasIsRead;
    private bool isRead_;
    public bool HasIsRead {
      get { return hasIsRead; }
    }
    public bool IsRead {
      get { return isRead_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasIsValid) return false;
        if (!hasModuleTypeId) return false;
        if (!hasSender) return false;
        if (!hasReceiver) return false;
        if (!hasSendDate) return false;
        if (!hasExpiryDate) return false;
        if (!hasTitle) return false;
        if (!hasText) return false;
        if (!hasMoney) return false;
        if (!hasGold) return false;
        if (!hasStamina) return false;
        if (!hasItemIds) return false;
        if (!hasItemNumbers) return false;
        if (!hasLevelDemand) return false;
        if (!hasIsRead) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSMailInfoFieldNames;
      if (hasGuid) {
        output.WriteInt64(1, field_names[2], Guid);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[4], IsValid);
      }
      if (hasModuleTypeId) {
        output.WriteInt32(3, field_names[8], ModuleTypeId);
      }
      if (hasSender) {
        output.WriteString(4, field_names[12], Sender);
      }
      if (hasReceiver) {
        output.WriteInt64(5, field_names[10], Receiver);
      }
      if (hasSendDate) {
        output.WriteString(6, field_names[11], SendDate);
      }
      if (hasExpiryDate) {
        output.WriteString(7, field_names[0], ExpiryDate);
      }
      if (hasTitle) {
        output.WriteString(8, field_names[15], Title);
      }
      if (hasText) {
        output.WriteString(9, field_names[14], Text);
      }
      if (hasMoney) {
        output.WriteInt32(10, field_names[9], Money);
      }
      if (hasGold) {
        output.WriteInt32(11, field_names[1], Gold);
      }
      if (hasStamina) {
        output.WriteInt32(12, field_names[13], Stamina);
      }
      if (hasItemIds) {
        output.WriteString(13, field_names[5], ItemIds);
      }
      if (hasItemNumbers) {
        output.WriteString(14, field_names[6], ItemNumbers);
      }
      if (hasLevelDemand) {
        output.WriteInt32(15, field_names[7], LevelDemand);
      }
      if (hasIsRead) {
        output.WriteBool(16, field_names[3], IsRead);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, Guid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasModuleTypeId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ModuleTypeId);
        }
        if (hasSender) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Sender);
        }
        if (hasReceiver) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, Receiver);
        }
        if (hasSendDate) {
          size += pb::CodedOutputStream.ComputeStringSize(6, SendDate);
        }
        if (hasExpiryDate) {
          size += pb::CodedOutputStream.ComputeStringSize(7, ExpiryDate);
        }
        if (hasTitle) {
          size += pb::CodedOutputStream.ComputeStringSize(8, Title);
        }
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Text);
        }
        if (hasMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, Money);
        }
        if (hasGold) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, Gold);
        }
        if (hasStamina) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, Stamina);
        }
        if (hasItemIds) {
          size += pb::CodedOutputStream.ComputeStringSize(13, ItemIds);
        }
        if (hasItemNumbers) {
          size += pb::CodedOutputStream.ComputeStringSize(14, ItemNumbers);
        }
        if (hasLevelDemand) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, LevelDemand);
        }
        if (hasIsRead) {
          size += pb::CodedOutputStream.ComputeBoolSize(16, IsRead);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_MailInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_MailInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_MailInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MailInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_MailInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_MailInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_MailInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_MailInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_MailInfo result;
      
      private DS_MailInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_MailInfo original = result;
          result = new DS_MailInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_MailInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_MailInfo.Descriptor; }
      }
      
      public override DS_MailInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_MailInfo.DefaultInstance; }
      }
      
      public override DS_MailInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_MailInfo) {
          return MergeFrom((DS_MailInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_MailInfo other) {
        if (other == global::DashFire.DataStore.DS_MailInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasModuleTypeId) {
          ModuleTypeId = other.ModuleTypeId;
        }
        if (other.HasSender) {
          Sender = other.Sender;
        }
        if (other.HasReceiver) {
          Receiver = other.Receiver;
        }
        if (other.HasSendDate) {
          SendDate = other.SendDate;
        }
        if (other.HasExpiryDate) {
          ExpiryDate = other.ExpiryDate;
        }
        if (other.HasTitle) {
          Title = other.Title;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasMoney) {
          Money = other.Money;
        }
        if (other.HasGold) {
          Gold = other.Gold;
        }
        if (other.HasStamina) {
          Stamina = other.Stamina;
        }
        if (other.HasItemIds) {
          ItemIds = other.ItemIds;
        }
        if (other.HasItemNumbers) {
          ItemNumbers = other.ItemNumbers;
        }
        if (other.HasLevelDemand) {
          LevelDemand = other.LevelDemand;
        }
        if (other.HasIsRead) {
          IsRead = other.IsRead;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSMailInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSMailInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGuid = input.ReadInt64(ref result.guid_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasModuleTypeId = input.ReadInt32(ref result.moduleTypeId_);
              break;
            }
            case 34: {
              result.hasSender = input.ReadString(ref result.sender_);
              break;
            }
            case 40: {
              result.hasReceiver = input.ReadInt64(ref result.receiver_);
              break;
            }
            case 50: {
              result.hasSendDate = input.ReadString(ref result.sendDate_);
              break;
            }
            case 58: {
              result.hasExpiryDate = input.ReadString(ref result.expiryDate_);
              break;
            }
            case 66: {
              result.hasTitle = input.ReadString(ref result.title_);
              break;
            }
            case 74: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 80: {
              result.hasMoney = input.ReadInt32(ref result.money_);
              break;
            }
            case 88: {
              result.hasGold = input.ReadInt32(ref result.gold_);
              break;
            }
            case 96: {
              result.hasStamina = input.ReadInt32(ref result.stamina_);
              break;
            }
            case 106: {
              result.hasItemIds = input.ReadString(ref result.itemIds_);
              break;
            }
            case 114: {
              result.hasItemNumbers = input.ReadString(ref result.itemNumbers_);
              break;
            }
            case 120: {
              result.hasLevelDemand = input.ReadInt32(ref result.levelDemand_);
              break;
            }
            case 128: {
              result.hasIsRead = input.ReadBool(ref result.isRead_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public long Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(long value) {
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasModuleTypeId {
        get { return result.hasModuleTypeId; }
      }
      public int ModuleTypeId {
        get { return result.ModuleTypeId; }
        set { SetModuleTypeId(value); }
      }
      public Builder SetModuleTypeId(int value) {
        PrepareBuilder();
        result.hasModuleTypeId = true;
        result.moduleTypeId_ = value;
        return this;
      }
      public Builder ClearModuleTypeId() {
        PrepareBuilder();
        result.hasModuleTypeId = false;
        result.moduleTypeId_ = 0;
        return this;
      }
      
      public bool HasSender {
        get { return result.hasSender; }
      }
      public string Sender {
        get { return result.Sender; }
        set { SetSender(value); }
      }
      public Builder SetSender(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSender = true;
        result.sender_ = value;
        return this;
      }
      public Builder ClearSender() {
        PrepareBuilder();
        result.hasSender = false;
        result.sender_ = "";
        return this;
      }
      
      public bool HasReceiver {
        get { return result.hasReceiver; }
      }
      public long Receiver {
        get { return result.Receiver; }
        set { SetReceiver(value); }
      }
      public Builder SetReceiver(long value) {
        PrepareBuilder();
        result.hasReceiver = true;
        result.receiver_ = value;
        return this;
      }
      public Builder ClearReceiver() {
        PrepareBuilder();
        result.hasReceiver = false;
        result.receiver_ = 0L;
        return this;
      }
      
      public bool HasSendDate {
        get { return result.hasSendDate; }
      }
      public string SendDate {
        get { return result.SendDate; }
        set { SetSendDate(value); }
      }
      public Builder SetSendDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSendDate = true;
        result.sendDate_ = value;
        return this;
      }
      public Builder ClearSendDate() {
        PrepareBuilder();
        result.hasSendDate = false;
        result.sendDate_ = "";
        return this;
      }
      
      public bool HasExpiryDate {
        get { return result.hasExpiryDate; }
      }
      public string ExpiryDate {
        get { return result.ExpiryDate; }
        set { SetExpiryDate(value); }
      }
      public Builder SetExpiryDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExpiryDate = true;
        result.expiryDate_ = value;
        return this;
      }
      public Builder ClearExpiryDate() {
        PrepareBuilder();
        result.hasExpiryDate = false;
        result.expiryDate_ = "";
        return this;
      }
      
      public bool HasTitle {
        get { return result.hasTitle; }
      }
      public string Title {
        get { return result.Title; }
        set { SetTitle(value); }
      }
      public Builder SetTitle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder ClearTitle() {
        PrepareBuilder();
        result.hasTitle = false;
        result.title_ = "";
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasMoney {
        get { return result.hasMoney; }
      }
      public int Money {
        get { return result.Money; }
        set { SetMoney(value); }
      }
      public Builder SetMoney(int value) {
        PrepareBuilder();
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder ClearMoney() {
        PrepareBuilder();
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      public bool HasGold {
        get { return result.hasGold; }
      }
      public int Gold {
        get { return result.Gold; }
        set { SetGold(value); }
      }
      public Builder SetGold(int value) {
        PrepareBuilder();
        result.hasGold = true;
        result.gold_ = value;
        return this;
      }
      public Builder ClearGold() {
        PrepareBuilder();
        result.hasGold = false;
        result.gold_ = 0;
        return this;
      }
      
      public bool HasStamina {
        get { return result.hasStamina; }
      }
      public int Stamina {
        get { return result.Stamina; }
        set { SetStamina(value); }
      }
      public Builder SetStamina(int value) {
        PrepareBuilder();
        result.hasStamina = true;
        result.stamina_ = value;
        return this;
      }
      public Builder ClearStamina() {
        PrepareBuilder();
        result.hasStamina = false;
        result.stamina_ = 0;
        return this;
      }
      
      public bool HasItemIds {
        get { return result.hasItemIds; }
      }
      public string ItemIds {
        get { return result.ItemIds; }
        set { SetItemIds(value); }
      }
      public Builder SetItemIds(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasItemIds = true;
        result.itemIds_ = value;
        return this;
      }
      public Builder ClearItemIds() {
        PrepareBuilder();
        result.hasItemIds = false;
        result.itemIds_ = "";
        return this;
      }
      
      public bool HasItemNumbers {
        get { return result.hasItemNumbers; }
      }
      public string ItemNumbers {
        get { return result.ItemNumbers; }
        set { SetItemNumbers(value); }
      }
      public Builder SetItemNumbers(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasItemNumbers = true;
        result.itemNumbers_ = value;
        return this;
      }
      public Builder ClearItemNumbers() {
        PrepareBuilder();
        result.hasItemNumbers = false;
        result.itemNumbers_ = "";
        return this;
      }
      
      public bool HasLevelDemand {
        get { return result.hasLevelDemand; }
      }
      public int LevelDemand {
        get { return result.LevelDemand; }
        set { SetLevelDemand(value); }
      }
      public Builder SetLevelDemand(int value) {
        PrepareBuilder();
        result.hasLevelDemand = true;
        result.levelDemand_ = value;
        return this;
      }
      public Builder ClearLevelDemand() {
        PrepareBuilder();
        result.hasLevelDemand = false;
        result.levelDemand_ = 0;
        return this;
      }
      
      public bool HasIsRead {
        get { return result.hasIsRead; }
      }
      public bool IsRead {
        get { return result.IsRead; }
        set { SetIsRead(value); }
      }
      public Builder SetIsRead(bool value) {
        PrepareBuilder();
        result.hasIsRead = true;
        result.isRead_ = value;
        return this;
      }
      public Builder ClearIsRead() {
        PrepareBuilder();
        result.hasIsRead = false;
        result.isRead_ = false;
        return this;
      }
    }
    static DS_MailInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_ActivationCode : pb::GeneratedMessage<DS_ActivationCode, DS_ActivationCode.Builder> {
    private DS_ActivationCode() { }
    private static readonly DS_ActivationCode defaultInstance = new DS_ActivationCode().MakeReadOnly();
    private static readonly string[] _dSActivationCodeFieldNames = new string[] { "Account", "ActivationCode", "IsActivated", "IsValid" };
    private static readonly uint[] _dSActivationCodeFieldTags = new uint[] { 34, 10, 24, 16 };
    public static DS_ActivationCode DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_ActivationCode DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_ActivationCode ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ActivationCode__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_ActivationCode, DS_ActivationCode.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ActivationCode__FieldAccessorTable; }
    }
    
    public const int ActivationCodeFieldNumber = 1;
    private bool hasActivationCode;
    private string activationCode_ = "";
    public bool HasActivationCode {
      get { return hasActivationCode; }
    }
    public string ActivationCode {
      get { return activationCode_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int IsActivatedFieldNumber = 3;
    private bool hasIsActivated;
    private bool isActivated_;
    public bool HasIsActivated {
      get { return hasIsActivated; }
    }
    public bool IsActivated {
      get { return isActivated_; }
    }
    
    public const int AccountFieldNumber = 4;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasActivationCode) return false;
        if (!hasIsValid) return false;
        if (!hasIsActivated) return false;
        if (!hasAccount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSActivationCodeFieldNames;
      if (hasActivationCode) {
        output.WriteString(1, field_names[1], ActivationCode);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[3], IsValid);
      }
      if (hasIsActivated) {
        output.WriteBool(3, field_names[2], IsActivated);
      }
      if (hasAccount) {
        output.WriteString(4, field_names[0], Account);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActivationCode) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ActivationCode);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasIsActivated) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsActivated);
        }
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Account);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_ActivationCode ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_ActivationCode ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_ActivationCode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ActivationCode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_ActivationCode MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_ActivationCode prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_ActivationCode, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_ActivationCode cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_ActivationCode result;
      
      private DS_ActivationCode PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_ActivationCode original = result;
          result = new DS_ActivationCode();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_ActivationCode MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_ActivationCode.Descriptor; }
      }
      
      public override DS_ActivationCode DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_ActivationCode.DefaultInstance; }
      }
      
      public override DS_ActivationCode BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_ActivationCode) {
          return MergeFrom((DS_ActivationCode) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_ActivationCode other) {
        if (other == global::DashFire.DataStore.DS_ActivationCode.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActivationCode) {
          ActivationCode = other.ActivationCode;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasIsActivated) {
          IsActivated = other.IsActivated;
        }
        if (other.HasAccount) {
          Account = other.Account;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSActivationCodeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSActivationCodeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasActivationCode = input.ReadString(ref result.activationCode_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasIsActivated = input.ReadBool(ref result.isActivated_);
              break;
            }
            case 34: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActivationCode {
        get { return result.hasActivationCode; }
      }
      public string ActivationCode {
        get { return result.ActivationCode; }
        set { SetActivationCode(value); }
      }
      public Builder SetActivationCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasActivationCode = true;
        result.activationCode_ = value;
        return this;
      }
      public Builder ClearActivationCode() {
        PrepareBuilder();
        result.hasActivationCode = false;
        result.activationCode_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasIsActivated {
        get { return result.hasIsActivated; }
      }
      public bool IsActivated {
        get { return result.IsActivated; }
        set { SetIsActivated(value); }
      }
      public Builder SetIsActivated(bool value) {
        PrepareBuilder();
        result.hasIsActivated = true;
        result.isActivated_ = value;
        return this;
      }
      public Builder ClearIsActivated() {
        PrepareBuilder();
        result.hasIsActivated = false;
        result.isActivated_ = false;
        return this;
      }
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
    }
    static DS_ActivationCode() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_GiftCode : pb::GeneratedMessage<DS_GiftCode, DS_GiftCode.Builder> {
    private DS_GiftCode() { }
    private static readonly DS_GiftCode defaultInstance = new DS_GiftCode().MakeReadOnly();
    private static readonly string[] _dSGiftCodeFieldNames = new string[] { "GiftCode", "GiftId", "IsUsed", "IsValid", "UserGuid" };
    private static readonly uint[] _dSGiftCodeFieldTags = new uint[] { 10, 24, 32, 16, 40 };
    public static DS_GiftCode DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_GiftCode DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_GiftCode ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_GiftCode__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_GiftCode, DS_GiftCode.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_GiftCode__FieldAccessorTable; }
    }
    
    public const int GiftCodeFieldNumber = 1;
    private bool hasGiftCode;
    private string giftCode_ = "";
    public bool HasGiftCode {
      get { return hasGiftCode; }
    }
    public string GiftCode {
      get { return giftCode_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int GiftIdFieldNumber = 3;
    private bool hasGiftId;
    private int giftId_;
    public bool HasGiftId {
      get { return hasGiftId; }
    }
    public int GiftId {
      get { return giftId_; }
    }
    
    public const int IsUsedFieldNumber = 4;
    private bool hasIsUsed;
    private bool isUsed_;
    public bool HasIsUsed {
      get { return hasIsUsed; }
    }
    public bool IsUsed {
      get { return isUsed_; }
    }
    
    public const int UserGuidFieldNumber = 5;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGiftCode) return false;
        if (!hasIsValid) return false;
        if (!hasGiftId) return false;
        if (!hasIsUsed) return false;
        if (!hasUserGuid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGiftCodeFieldNames;
      if (hasGiftCode) {
        output.WriteString(1, field_names[0], GiftCode);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[3], IsValid);
      }
      if (hasGiftId) {
        output.WriteInt32(3, field_names[1], GiftId);
      }
      if (hasIsUsed) {
        output.WriteBool(4, field_names[2], IsUsed);
      }
      if (hasUserGuid) {
        output.WriteInt64(5, field_names[4], UserGuid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGiftCode) {
          size += pb::CodedOutputStream.ComputeStringSize(1, GiftCode);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasGiftId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, GiftId);
        }
        if (hasIsUsed) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IsUsed);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, UserGuid);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_GiftCode ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_GiftCode ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_GiftCode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_GiftCode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_GiftCode MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_GiftCode prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_GiftCode, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_GiftCode cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_GiftCode result;
      
      private DS_GiftCode PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_GiftCode original = result;
          result = new DS_GiftCode();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_GiftCode MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_GiftCode.Descriptor; }
      }
      
      public override DS_GiftCode DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_GiftCode.DefaultInstance; }
      }
      
      public override DS_GiftCode BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_GiftCode) {
          return MergeFrom((DS_GiftCode) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_GiftCode other) {
        if (other == global::DashFire.DataStore.DS_GiftCode.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGiftCode) {
          GiftCode = other.GiftCode;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasGiftId) {
          GiftId = other.GiftId;
        }
        if (other.HasIsUsed) {
          IsUsed = other.IsUsed;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGiftCodeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGiftCodeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGiftCode = input.ReadString(ref result.giftCode_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasGiftId = input.ReadInt32(ref result.giftId_);
              break;
            }
            case 32: {
              result.hasIsUsed = input.ReadBool(ref result.isUsed_);
              break;
            }
            case 40: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGiftCode {
        get { return result.hasGiftCode; }
      }
      public string GiftCode {
        get { return result.GiftCode; }
        set { SetGiftCode(value); }
      }
      public Builder SetGiftCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGiftCode = true;
        result.giftCode_ = value;
        return this;
      }
      public Builder ClearGiftCode() {
        PrepareBuilder();
        result.hasGiftCode = false;
        result.giftCode_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasGiftId {
        get { return result.hasGiftId; }
      }
      public int GiftId {
        get { return result.GiftId; }
        set { SetGiftId(value); }
      }
      public Builder SetGiftId(int value) {
        PrepareBuilder();
        result.hasGiftId = true;
        result.giftId_ = value;
        return this;
      }
      public Builder ClearGiftId() {
        PrepareBuilder();
        result.hasGiftId = false;
        result.giftId_ = 0;
        return this;
      }
      
      public bool HasIsUsed {
        get { return result.hasIsUsed; }
      }
      public bool IsUsed {
        get { return result.IsUsed; }
        set { SetIsUsed(value); }
      }
      public Builder SetIsUsed(bool value) {
        PrepareBuilder();
        result.hasIsUsed = true;
        result.isUsed_ = value;
        return this;
      }
      public Builder ClearIsUsed() {
        PrepareBuilder();
        result.hasIsUsed = false;
        result.isUsed_ = false;
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
    }
    static DS_GiftCode() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_ArenaInfo : pb::GeneratedMessage<DS_ArenaInfo, DS_ArenaInfo.Builder> {
    private DS_ArenaInfo() { }
    private static readonly DS_ArenaInfo defaultInstance = new DS_ArenaInfo().MakeReadOnly();
    private static readonly string[] _dSArenaInfoFieldNames = new string[] { "ArenaBytes", "ArenaHistroyRankList", "ArenaHistroyTimeList", "BuyFightCount", "IsRobot", "IsValid", "LastBattleTime", "LastResetFightCountTime", "LeftFightCount", "Rank", "UserGuid" };
    private static readonly uint[] _dSArenaInfoFieldTags = new uint[] { 42, 90, 82, 64, 32, 16, 50, 74, 56, 24, 8 };
    public static DS_ArenaInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_ArenaInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_ArenaInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ArenaInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_ArenaInfo, DS_ArenaInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ArenaInfo__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private int rank_;
    public bool HasRank {
      get { return hasRank; }
    }
    public int Rank {
      get { return rank_; }
    }
    
    public const int IsRobotFieldNumber = 4;
    private bool hasIsRobot;
    private bool isRobot_;
    public bool HasIsRobot {
      get { return hasIsRobot; }
    }
    public bool IsRobot {
      get { return isRobot_; }
    }
    
    public const int ArenaBytesFieldNumber = 5;
    private bool hasArenaBytes;
    private pb::ByteString arenaBytes_ = pb::ByteString.Empty;
    public bool HasArenaBytes {
      get { return hasArenaBytes; }
    }
    public pb::ByteString ArenaBytes {
      get { return arenaBytes_; }
    }
    
    public const int LastBattleTimeFieldNumber = 6;
    private bool hasLastBattleTime;
    private string lastBattleTime_ = "";
    public bool HasLastBattleTime {
      get { return hasLastBattleTime; }
    }
    public string LastBattleTime {
      get { return lastBattleTime_; }
    }
    
    public const int LeftFightCountFieldNumber = 7;
    private bool hasLeftFightCount;
    private int leftFightCount_;
    public bool HasLeftFightCount {
      get { return hasLeftFightCount; }
    }
    public int LeftFightCount {
      get { return leftFightCount_; }
    }
    
    public const int BuyFightCountFieldNumber = 8;
    private bool hasBuyFightCount;
    private int buyFightCount_;
    public bool HasBuyFightCount {
      get { return hasBuyFightCount; }
    }
    public int BuyFightCount {
      get { return buyFightCount_; }
    }
    
    public const int LastResetFightCountTimeFieldNumber = 9;
    private bool hasLastResetFightCountTime;
    private string lastResetFightCountTime_ = "";
    public bool HasLastResetFightCountTime {
      get { return hasLastResetFightCountTime; }
    }
    public string LastResetFightCountTime {
      get { return lastResetFightCountTime_; }
    }
    
    public const int ArenaHistroyTimeListFieldNumber = 10;
    private bool hasArenaHistroyTimeList;
    private string arenaHistroyTimeList_ = "";
    public bool HasArenaHistroyTimeList {
      get { return hasArenaHistroyTimeList; }
    }
    public string ArenaHistroyTimeList {
      get { return arenaHistroyTimeList_; }
    }
    
    public const int ArenaHistroyRankListFieldNumber = 11;
    private bool hasArenaHistroyRankList;
    private string arenaHistroyRankList_ = "";
    public bool HasArenaHistroyRankList {
      get { return hasArenaHistroyRankList; }
    }
    public string ArenaHistroyRankList {
      get { return arenaHistroyRankList_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasRank) return false;
        if (!hasIsRobot) return false;
        if (!hasArenaBytes) return false;
        if (!hasLastBattleTime) return false;
        if (!hasLeftFightCount) return false;
        if (!hasBuyFightCount) return false;
        if (!hasLastResetFightCountTime) return false;
        if (!hasArenaHistroyTimeList) return false;
        if (!hasArenaHistroyRankList) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSArenaInfoFieldNames;
      if (hasUserGuid) {
        output.WriteInt64(1, field_names[10], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[5], IsValid);
      }
      if (hasRank) {
        output.WriteInt32(3, field_names[9], Rank);
      }
      if (hasIsRobot) {
        output.WriteBool(4, field_names[4], IsRobot);
      }
      if (hasArenaBytes) {
        output.WriteBytes(5, field_names[0], ArenaBytes);
      }
      if (hasLastBattleTime) {
        output.WriteString(6, field_names[6], LastBattleTime);
      }
      if (hasLeftFightCount) {
        output.WriteInt32(7, field_names[8], LeftFightCount);
      }
      if (hasBuyFightCount) {
        output.WriteInt32(8, field_names[3], BuyFightCount);
      }
      if (hasLastResetFightCountTime) {
        output.WriteString(9, field_names[7], LastResetFightCountTime);
      }
      if (hasArenaHistroyTimeList) {
        output.WriteString(10, field_names[2], ArenaHistroyTimeList);
      }
      if (hasArenaHistroyRankList) {
        output.WriteString(11, field_names[1], ArenaHistroyRankList);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasRank) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Rank);
        }
        if (hasIsRobot) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IsRobot);
        }
        if (hasArenaBytes) {
          size += pb::CodedOutputStream.ComputeBytesSize(5, ArenaBytes);
        }
        if (hasLastBattleTime) {
          size += pb::CodedOutputStream.ComputeStringSize(6, LastBattleTime);
        }
        if (hasLeftFightCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, LeftFightCount);
        }
        if (hasBuyFightCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, BuyFightCount);
        }
        if (hasLastResetFightCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(9, LastResetFightCountTime);
        }
        if (hasArenaHistroyTimeList) {
          size += pb::CodedOutputStream.ComputeStringSize(10, ArenaHistroyTimeList);
        }
        if (hasArenaHistroyRankList) {
          size += pb::CodedOutputStream.ComputeStringSize(11, ArenaHistroyRankList);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_ArenaInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_ArenaInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ArenaInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_ArenaInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_ArenaInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_ArenaInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_ArenaInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_ArenaInfo result;
      
      private DS_ArenaInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_ArenaInfo original = result;
          result = new DS_ArenaInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_ArenaInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_ArenaInfo.Descriptor; }
      }
      
      public override DS_ArenaInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_ArenaInfo.DefaultInstance; }
      }
      
      public override DS_ArenaInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_ArenaInfo) {
          return MergeFrom((DS_ArenaInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_ArenaInfo other) {
        if (other == global::DashFire.DataStore.DS_ArenaInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasIsRobot) {
          IsRobot = other.IsRobot;
        }
        if (other.HasArenaBytes) {
          ArenaBytes = other.ArenaBytes;
        }
        if (other.HasLastBattleTime) {
          LastBattleTime = other.LastBattleTime;
        }
        if (other.HasLeftFightCount) {
          LeftFightCount = other.LeftFightCount;
        }
        if (other.HasBuyFightCount) {
          BuyFightCount = other.BuyFightCount;
        }
        if (other.HasLastResetFightCountTime) {
          LastResetFightCountTime = other.LastResetFightCountTime;
        }
        if (other.HasArenaHistroyTimeList) {
          ArenaHistroyTimeList = other.ArenaHistroyTimeList;
        }
        if (other.HasArenaHistroyRankList) {
          ArenaHistroyRankList = other.ArenaHistroyRankList;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSArenaInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSArenaInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasRank = input.ReadInt32(ref result.rank_);
              break;
            }
            case 32: {
              result.hasIsRobot = input.ReadBool(ref result.isRobot_);
              break;
            }
            case 42: {
              result.hasArenaBytes = input.ReadBytes(ref result.arenaBytes_);
              break;
            }
            case 50: {
              result.hasLastBattleTime = input.ReadString(ref result.lastBattleTime_);
              break;
            }
            case 56: {
              result.hasLeftFightCount = input.ReadInt32(ref result.leftFightCount_);
              break;
            }
            case 64: {
              result.hasBuyFightCount = input.ReadInt32(ref result.buyFightCount_);
              break;
            }
            case 74: {
              result.hasLastResetFightCountTime = input.ReadString(ref result.lastResetFightCountTime_);
              break;
            }
            case 82: {
              result.hasArenaHistroyTimeList = input.ReadString(ref result.arenaHistroyTimeList_);
              break;
            }
            case 90: {
              result.hasArenaHistroyRankList = input.ReadString(ref result.arenaHistroyRankList_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasRank {
        get { return result.hasRank; }
      }
      public int Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(int value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = 0;
        return this;
      }
      
      public bool HasIsRobot {
        get { return result.hasIsRobot; }
      }
      public bool IsRobot {
        get { return result.IsRobot; }
        set { SetIsRobot(value); }
      }
      public Builder SetIsRobot(bool value) {
        PrepareBuilder();
        result.hasIsRobot = true;
        result.isRobot_ = value;
        return this;
      }
      public Builder ClearIsRobot() {
        PrepareBuilder();
        result.hasIsRobot = false;
        result.isRobot_ = false;
        return this;
      }
      
      public bool HasArenaBytes {
        get { return result.hasArenaBytes; }
      }
      public pb::ByteString ArenaBytes {
        get { return result.ArenaBytes; }
        set { SetArenaBytes(value); }
      }
      public Builder SetArenaBytes(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArenaBytes = true;
        result.arenaBytes_ = value;
        return this;
      }
      public Builder ClearArenaBytes() {
        PrepareBuilder();
        result.hasArenaBytes = false;
        result.arenaBytes_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasLastBattleTime {
        get { return result.hasLastBattleTime; }
      }
      public string LastBattleTime {
        get { return result.LastBattleTime; }
        set { SetLastBattleTime(value); }
      }
      public Builder SetLastBattleTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastBattleTime = true;
        result.lastBattleTime_ = value;
        return this;
      }
      public Builder ClearLastBattleTime() {
        PrepareBuilder();
        result.hasLastBattleTime = false;
        result.lastBattleTime_ = "";
        return this;
      }
      
      public bool HasLeftFightCount {
        get { return result.hasLeftFightCount; }
      }
      public int LeftFightCount {
        get { return result.LeftFightCount; }
        set { SetLeftFightCount(value); }
      }
      public Builder SetLeftFightCount(int value) {
        PrepareBuilder();
        result.hasLeftFightCount = true;
        result.leftFightCount_ = value;
        return this;
      }
      public Builder ClearLeftFightCount() {
        PrepareBuilder();
        result.hasLeftFightCount = false;
        result.leftFightCount_ = 0;
        return this;
      }
      
      public bool HasBuyFightCount {
        get { return result.hasBuyFightCount; }
      }
      public int BuyFightCount {
        get { return result.BuyFightCount; }
        set { SetBuyFightCount(value); }
      }
      public Builder SetBuyFightCount(int value) {
        PrepareBuilder();
        result.hasBuyFightCount = true;
        result.buyFightCount_ = value;
        return this;
      }
      public Builder ClearBuyFightCount() {
        PrepareBuilder();
        result.hasBuyFightCount = false;
        result.buyFightCount_ = 0;
        return this;
      }
      
      public bool HasLastResetFightCountTime {
        get { return result.hasLastResetFightCountTime; }
      }
      public string LastResetFightCountTime {
        get { return result.LastResetFightCountTime; }
        set { SetLastResetFightCountTime(value); }
      }
      public Builder SetLastResetFightCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetFightCountTime = true;
        result.lastResetFightCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetFightCountTime() {
        PrepareBuilder();
        result.hasLastResetFightCountTime = false;
        result.lastResetFightCountTime_ = "";
        return this;
      }
      
      public bool HasArenaHistroyTimeList {
        get { return result.hasArenaHistroyTimeList; }
      }
      public string ArenaHistroyTimeList {
        get { return result.ArenaHistroyTimeList; }
        set { SetArenaHistroyTimeList(value); }
      }
      public Builder SetArenaHistroyTimeList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArenaHistroyTimeList = true;
        result.arenaHistroyTimeList_ = value;
        return this;
      }
      public Builder ClearArenaHistroyTimeList() {
        PrepareBuilder();
        result.hasArenaHistroyTimeList = false;
        result.arenaHistroyTimeList_ = "";
        return this;
      }
      
      public bool HasArenaHistroyRankList {
        get { return result.hasArenaHistroyRankList; }
      }
      public string ArenaHistroyRankList {
        get { return result.ArenaHistroyRankList; }
        set { SetArenaHistroyRankList(value); }
      }
      public Builder SetArenaHistroyRankList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArenaHistroyRankList = true;
        result.arenaHistroyRankList_ = value;
        return this;
      }
      public Builder ClearArenaHistroyRankList() {
        PrepareBuilder();
        result.hasArenaHistroyRankList = false;
        result.arenaHistroyRankList_ = "";
        return this;
      }
    }
    static DS_ArenaInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_ArenaRecord : pb::GeneratedMessage<DS_ArenaRecord, DS_ArenaRecord.Builder> {
    private DS_ArenaRecord() { }
    private static readonly DS_ArenaRecord defaultInstance = new DS_ArenaRecord().MakeReadOnly();
    private static readonly string[] _dSArenaRecordFieldNames = new string[] { "BeginTime", "CFightScore", "CGuid", "CHeroId", "CLevel", "CNickname", "CPartnerDamage1", "CPartnerDamage2", "CPartnerDamage3", "CPartnerId1", "CPartnerId2", "CPartnerId3", "CRank", "CUserDamage", "EndTime", "Guid", "IsChallengerSuccess", "IsValid", "Rank", "TFightScore", "TGuid", "THeroId", "TLevel", "TNickname", "TPartnerDamage1", "TPartnerDamage2", "TPartnerDamage3", "TPartnerId1", "TPartnerId2", "TPartnerId3", "TRank", "TUserDamage", "UserGuid" };
    private static readonly uint[] _dSArenaRecordFieldTags = new uint[] { 50, 88, 64, 72, 80, 98, 128, 144, 160, 120, 136, 152, 104, 112, 58, 10, 40, 16, 32, 192, 168, 176, 184, 202, 232, 248, 264, 224, 240, 256, 208, 216, 24 };
    public static DS_ArenaRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_ArenaRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_ArenaRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ArenaRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_ArenaRecord, DS_ArenaRecord.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ArenaRecord__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int UserGuidFieldNumber = 3;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int RankFieldNumber = 4;
    private bool hasRank;
    private int rank_;
    public bool HasRank {
      get { return hasRank; }
    }
    public int Rank {
      get { return rank_; }
    }
    
    public const int IsChallengerSuccessFieldNumber = 5;
    private bool hasIsChallengerSuccess;
    private bool isChallengerSuccess_;
    public bool HasIsChallengerSuccess {
      get { return hasIsChallengerSuccess; }
    }
    public bool IsChallengerSuccess {
      get { return isChallengerSuccess_; }
    }
    
    public const int BeginTimeFieldNumber = 6;
    private bool hasBeginTime;
    private string beginTime_ = "";
    public bool HasBeginTime {
      get { return hasBeginTime; }
    }
    public string BeginTime {
      get { return beginTime_; }
    }
    
    public const int EndTimeFieldNumber = 7;
    private bool hasEndTime;
    private string endTime_ = "";
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public string EndTime {
      get { return endTime_; }
    }
    
    public const int CGuidFieldNumber = 8;
    private bool hasCGuid;
    private long cGuid_;
    public bool HasCGuid {
      get { return hasCGuid; }
    }
    public long CGuid {
      get { return cGuid_; }
    }
    
    public const int CHeroIdFieldNumber = 9;
    private bool hasCHeroId;
    private int cHeroId_;
    public bool HasCHeroId {
      get { return hasCHeroId; }
    }
    public int CHeroId {
      get { return cHeroId_; }
    }
    
    public const int CLevelFieldNumber = 10;
    private bool hasCLevel;
    private int cLevel_;
    public bool HasCLevel {
      get { return hasCLevel; }
    }
    public int CLevel {
      get { return cLevel_; }
    }
    
    public const int CFightScoreFieldNumber = 11;
    private bool hasCFightScore;
    private int cFightScore_;
    public bool HasCFightScore {
      get { return hasCFightScore; }
    }
    public int CFightScore {
      get { return cFightScore_; }
    }
    
    public const int CNicknameFieldNumber = 12;
    private bool hasCNickname;
    private string cNickname_ = "";
    public bool HasCNickname {
      get { return hasCNickname; }
    }
    public string CNickname {
      get { return cNickname_; }
    }
    
    public const int CRankFieldNumber = 13;
    private bool hasCRank;
    private int cRank_;
    public bool HasCRank {
      get { return hasCRank; }
    }
    public int CRank {
      get { return cRank_; }
    }
    
    public const int CUserDamageFieldNumber = 14;
    private bool hasCUserDamage;
    private int cUserDamage_;
    public bool HasCUserDamage {
      get { return hasCUserDamage; }
    }
    public int CUserDamage {
      get { return cUserDamage_; }
    }
    
    public const int CPartnerId1FieldNumber = 15;
    private bool hasCPartnerId1;
    private int cPartnerId1_;
    public bool HasCPartnerId1 {
      get { return hasCPartnerId1; }
    }
    public int CPartnerId1 {
      get { return cPartnerId1_; }
    }
    
    public const int CPartnerDamage1FieldNumber = 16;
    private bool hasCPartnerDamage1;
    private int cPartnerDamage1_;
    public bool HasCPartnerDamage1 {
      get { return hasCPartnerDamage1; }
    }
    public int CPartnerDamage1 {
      get { return cPartnerDamage1_; }
    }
    
    public const int CPartnerId2FieldNumber = 17;
    private bool hasCPartnerId2;
    private int cPartnerId2_;
    public bool HasCPartnerId2 {
      get { return hasCPartnerId2; }
    }
    public int CPartnerId2 {
      get { return cPartnerId2_; }
    }
    
    public const int CPartnerDamage2FieldNumber = 18;
    private bool hasCPartnerDamage2;
    private int cPartnerDamage2_;
    public bool HasCPartnerDamage2 {
      get { return hasCPartnerDamage2; }
    }
    public int CPartnerDamage2 {
      get { return cPartnerDamage2_; }
    }
    
    public const int CPartnerId3FieldNumber = 19;
    private bool hasCPartnerId3;
    private int cPartnerId3_;
    public bool HasCPartnerId3 {
      get { return hasCPartnerId3; }
    }
    public int CPartnerId3 {
      get { return cPartnerId3_; }
    }
    
    public const int CPartnerDamage3FieldNumber = 20;
    private bool hasCPartnerDamage3;
    private int cPartnerDamage3_;
    public bool HasCPartnerDamage3 {
      get { return hasCPartnerDamage3; }
    }
    public int CPartnerDamage3 {
      get { return cPartnerDamage3_; }
    }
    
    public const int TGuidFieldNumber = 21;
    private bool hasTGuid;
    private long tGuid_;
    public bool HasTGuid {
      get { return hasTGuid; }
    }
    public long TGuid {
      get { return tGuid_; }
    }
    
    public const int THeroIdFieldNumber = 22;
    private bool hasTHeroId;
    private int tHeroId_;
    public bool HasTHeroId {
      get { return hasTHeroId; }
    }
    public int THeroId {
      get { return tHeroId_; }
    }
    
    public const int TLevelFieldNumber = 23;
    private bool hasTLevel;
    private int tLevel_;
    public bool HasTLevel {
      get { return hasTLevel; }
    }
    public int TLevel {
      get { return tLevel_; }
    }
    
    public const int TFightScoreFieldNumber = 24;
    private bool hasTFightScore;
    private int tFightScore_;
    public bool HasTFightScore {
      get { return hasTFightScore; }
    }
    public int TFightScore {
      get { return tFightScore_; }
    }
    
    public const int TNicknameFieldNumber = 25;
    private bool hasTNickname;
    private string tNickname_ = "";
    public bool HasTNickname {
      get { return hasTNickname; }
    }
    public string TNickname {
      get { return tNickname_; }
    }
    
    public const int TRankFieldNumber = 26;
    private bool hasTRank;
    private int tRank_;
    public bool HasTRank {
      get { return hasTRank; }
    }
    public int TRank {
      get { return tRank_; }
    }
    
    public const int TUserDamageFieldNumber = 27;
    private bool hasTUserDamage;
    private int tUserDamage_;
    public bool HasTUserDamage {
      get { return hasTUserDamage; }
    }
    public int TUserDamage {
      get { return tUserDamage_; }
    }
    
    public const int TPartnerId1FieldNumber = 28;
    private bool hasTPartnerId1;
    private int tPartnerId1_;
    public bool HasTPartnerId1 {
      get { return hasTPartnerId1; }
    }
    public int TPartnerId1 {
      get { return tPartnerId1_; }
    }
    
    public const int TPartnerDamage1FieldNumber = 29;
    private bool hasTPartnerDamage1;
    private int tPartnerDamage1_;
    public bool HasTPartnerDamage1 {
      get { return hasTPartnerDamage1; }
    }
    public int TPartnerDamage1 {
      get { return tPartnerDamage1_; }
    }
    
    public const int TPartnerId2FieldNumber = 30;
    private bool hasTPartnerId2;
    private int tPartnerId2_;
    public bool HasTPartnerId2 {
      get { return hasTPartnerId2; }
    }
    public int TPartnerId2 {
      get { return tPartnerId2_; }
    }
    
    public const int TPartnerDamage2FieldNumber = 31;
    private bool hasTPartnerDamage2;
    private int tPartnerDamage2_;
    public bool HasTPartnerDamage2 {
      get { return hasTPartnerDamage2; }
    }
    public int TPartnerDamage2 {
      get { return tPartnerDamage2_; }
    }
    
    public const int TPartnerId3FieldNumber = 32;
    private bool hasTPartnerId3;
    private int tPartnerId3_;
    public bool HasTPartnerId3 {
      get { return hasTPartnerId3; }
    }
    public int TPartnerId3 {
      get { return tPartnerId3_; }
    }
    
    public const int TPartnerDamage3FieldNumber = 33;
    private bool hasTPartnerDamage3;
    private int tPartnerDamage3_;
    public bool HasTPartnerDamage3 {
      get { return hasTPartnerDamage3; }
    }
    public int TPartnerDamage3 {
      get { return tPartnerDamage3_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasIsValid) return false;
        if (!hasUserGuid) return false;
        if (!hasRank) return false;
        if (!hasIsChallengerSuccess) return false;
        if (!hasBeginTime) return false;
        if (!hasEndTime) return false;
        if (!hasCGuid) return false;
        if (!hasCHeroId) return false;
        if (!hasCLevel) return false;
        if (!hasCFightScore) return false;
        if (!hasCNickname) return false;
        if (!hasCRank) return false;
        if (!hasCUserDamage) return false;
        if (!hasCPartnerId1) return false;
        if (!hasCPartnerDamage1) return false;
        if (!hasCPartnerId2) return false;
        if (!hasCPartnerDamage2) return false;
        if (!hasCPartnerId3) return false;
        if (!hasCPartnerDamage3) return false;
        if (!hasTGuid) return false;
        if (!hasTHeroId) return false;
        if (!hasTLevel) return false;
        if (!hasTFightScore) return false;
        if (!hasTNickname) return false;
        if (!hasTRank) return false;
        if (!hasTUserDamage) return false;
        if (!hasTPartnerId1) return false;
        if (!hasTPartnerDamage1) return false;
        if (!hasTPartnerId2) return false;
        if (!hasTPartnerDamage2) return false;
        if (!hasTPartnerId3) return false;
        if (!hasTPartnerDamage3) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSArenaRecordFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[15], Guid);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[17], IsValid);
      }
      if (hasUserGuid) {
        output.WriteInt64(3, field_names[32], UserGuid);
      }
      if (hasRank) {
        output.WriteInt32(4, field_names[18], Rank);
      }
      if (hasIsChallengerSuccess) {
        output.WriteBool(5, field_names[16], IsChallengerSuccess);
      }
      if (hasBeginTime) {
        output.WriteString(6, field_names[0], BeginTime);
      }
      if (hasEndTime) {
        output.WriteString(7, field_names[14], EndTime);
      }
      if (hasCGuid) {
        output.WriteInt64(8, field_names[2], CGuid);
      }
      if (hasCHeroId) {
        output.WriteInt32(9, field_names[3], CHeroId);
      }
      if (hasCLevel) {
        output.WriteInt32(10, field_names[4], CLevel);
      }
      if (hasCFightScore) {
        output.WriteInt32(11, field_names[1], CFightScore);
      }
      if (hasCNickname) {
        output.WriteString(12, field_names[5], CNickname);
      }
      if (hasCRank) {
        output.WriteInt32(13, field_names[12], CRank);
      }
      if (hasCUserDamage) {
        output.WriteInt32(14, field_names[13], CUserDamage);
      }
      if (hasCPartnerId1) {
        output.WriteInt32(15, field_names[9], CPartnerId1);
      }
      if (hasCPartnerDamage1) {
        output.WriteInt32(16, field_names[6], CPartnerDamage1);
      }
      if (hasCPartnerId2) {
        output.WriteInt32(17, field_names[10], CPartnerId2);
      }
      if (hasCPartnerDamage2) {
        output.WriteInt32(18, field_names[7], CPartnerDamage2);
      }
      if (hasCPartnerId3) {
        output.WriteInt32(19, field_names[11], CPartnerId3);
      }
      if (hasCPartnerDamage3) {
        output.WriteInt32(20, field_names[8], CPartnerDamage3);
      }
      if (hasTGuid) {
        output.WriteInt64(21, field_names[20], TGuid);
      }
      if (hasTHeroId) {
        output.WriteInt32(22, field_names[21], THeroId);
      }
      if (hasTLevel) {
        output.WriteInt32(23, field_names[22], TLevel);
      }
      if (hasTFightScore) {
        output.WriteInt32(24, field_names[19], TFightScore);
      }
      if (hasTNickname) {
        output.WriteString(25, field_names[23], TNickname);
      }
      if (hasTRank) {
        output.WriteInt32(26, field_names[30], TRank);
      }
      if (hasTUserDamage) {
        output.WriteInt32(27, field_names[31], TUserDamage);
      }
      if (hasTPartnerId1) {
        output.WriteInt32(28, field_names[27], TPartnerId1);
      }
      if (hasTPartnerDamage1) {
        output.WriteInt32(29, field_names[24], TPartnerDamage1);
      }
      if (hasTPartnerId2) {
        output.WriteInt32(30, field_names[28], TPartnerId2);
      }
      if (hasTPartnerDamage2) {
        output.WriteInt32(31, field_names[25], TPartnerDamage2);
      }
      if (hasTPartnerId3) {
        output.WriteInt32(32, field_names[29], TPartnerId3);
      }
      if (hasTPartnerDamage3) {
        output.WriteInt32(33, field_names[26], TPartnerDamage3);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, UserGuid);
        }
        if (hasRank) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Rank);
        }
        if (hasIsChallengerSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, IsChallengerSuccess);
        }
        if (hasBeginTime) {
          size += pb::CodedOutputStream.ComputeStringSize(6, BeginTime);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeStringSize(7, EndTime);
        }
        if (hasCGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, CGuid);
        }
        if (hasCHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, CHeroId);
        }
        if (hasCLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, CLevel);
        }
        if (hasCFightScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, CFightScore);
        }
        if (hasCNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(12, CNickname);
        }
        if (hasCRank) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, CRank);
        }
        if (hasCUserDamage) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, CUserDamage);
        }
        if (hasCPartnerId1) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, CPartnerId1);
        }
        if (hasCPartnerDamage1) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, CPartnerDamage1);
        }
        if (hasCPartnerId2) {
          size += pb::CodedOutputStream.ComputeInt32Size(17, CPartnerId2);
        }
        if (hasCPartnerDamage2) {
          size += pb::CodedOutputStream.ComputeInt32Size(18, CPartnerDamage2);
        }
        if (hasCPartnerId3) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, CPartnerId3);
        }
        if (hasCPartnerDamage3) {
          size += pb::CodedOutputStream.ComputeInt32Size(20, CPartnerDamage3);
        }
        if (hasTGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(21, TGuid);
        }
        if (hasTHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(22, THeroId);
        }
        if (hasTLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(23, TLevel);
        }
        if (hasTFightScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(24, TFightScore);
        }
        if (hasTNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(25, TNickname);
        }
        if (hasTRank) {
          size += pb::CodedOutputStream.ComputeInt32Size(26, TRank);
        }
        if (hasTUserDamage) {
          size += pb::CodedOutputStream.ComputeInt32Size(27, TUserDamage);
        }
        if (hasTPartnerId1) {
          size += pb::CodedOutputStream.ComputeInt32Size(28, TPartnerId1);
        }
        if (hasTPartnerDamage1) {
          size += pb::CodedOutputStream.ComputeInt32Size(29, TPartnerDamage1);
        }
        if (hasTPartnerId2) {
          size += pb::CodedOutputStream.ComputeInt32Size(30, TPartnerId2);
        }
        if (hasTPartnerDamage2) {
          size += pb::CodedOutputStream.ComputeInt32Size(31, TPartnerDamage2);
        }
        if (hasTPartnerId3) {
          size += pb::CodedOutputStream.ComputeInt32Size(32, TPartnerId3);
        }
        if (hasTPartnerDamage3) {
          size += pb::CodedOutputStream.ComputeInt32Size(33, TPartnerDamage3);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_ArenaRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_ArenaRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_ArenaRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ArenaRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_ArenaRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_ArenaRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_ArenaRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_ArenaRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_ArenaRecord result;
      
      private DS_ArenaRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_ArenaRecord original = result;
          result = new DS_ArenaRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_ArenaRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_ArenaRecord.Descriptor; }
      }
      
      public override DS_ArenaRecord DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_ArenaRecord.DefaultInstance; }
      }
      
      public override DS_ArenaRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_ArenaRecord) {
          return MergeFrom((DS_ArenaRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_ArenaRecord other) {
        if (other == global::DashFire.DataStore.DS_ArenaRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasIsChallengerSuccess) {
          IsChallengerSuccess = other.IsChallengerSuccess;
        }
        if (other.HasBeginTime) {
          BeginTime = other.BeginTime;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasCGuid) {
          CGuid = other.CGuid;
        }
        if (other.HasCHeroId) {
          CHeroId = other.CHeroId;
        }
        if (other.HasCLevel) {
          CLevel = other.CLevel;
        }
        if (other.HasCFightScore) {
          CFightScore = other.CFightScore;
        }
        if (other.HasCNickname) {
          CNickname = other.CNickname;
        }
        if (other.HasCRank) {
          CRank = other.CRank;
        }
        if (other.HasCUserDamage) {
          CUserDamage = other.CUserDamage;
        }
        if (other.HasCPartnerId1) {
          CPartnerId1 = other.CPartnerId1;
        }
        if (other.HasCPartnerDamage1) {
          CPartnerDamage1 = other.CPartnerDamage1;
        }
        if (other.HasCPartnerId2) {
          CPartnerId2 = other.CPartnerId2;
        }
        if (other.HasCPartnerDamage2) {
          CPartnerDamage2 = other.CPartnerDamage2;
        }
        if (other.HasCPartnerId3) {
          CPartnerId3 = other.CPartnerId3;
        }
        if (other.HasCPartnerDamage3) {
          CPartnerDamage3 = other.CPartnerDamage3;
        }
        if (other.HasTGuid) {
          TGuid = other.TGuid;
        }
        if (other.HasTHeroId) {
          THeroId = other.THeroId;
        }
        if (other.HasTLevel) {
          TLevel = other.TLevel;
        }
        if (other.HasTFightScore) {
          TFightScore = other.TFightScore;
        }
        if (other.HasTNickname) {
          TNickname = other.TNickname;
        }
        if (other.HasTRank) {
          TRank = other.TRank;
        }
        if (other.HasTUserDamage) {
          TUserDamage = other.TUserDamage;
        }
        if (other.HasTPartnerId1) {
          TPartnerId1 = other.TPartnerId1;
        }
        if (other.HasTPartnerDamage1) {
          TPartnerDamage1 = other.TPartnerDamage1;
        }
        if (other.HasTPartnerId2) {
          TPartnerId2 = other.TPartnerId2;
        }
        if (other.HasTPartnerDamage2) {
          TPartnerDamage2 = other.TPartnerDamage2;
        }
        if (other.HasTPartnerId3) {
          TPartnerId3 = other.TPartnerId3;
        }
        if (other.HasTPartnerDamage3) {
          TPartnerDamage3 = other.TPartnerDamage3;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSArenaRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSArenaRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 32: {
              result.hasRank = input.ReadInt32(ref result.rank_);
              break;
            }
            case 40: {
              result.hasIsChallengerSuccess = input.ReadBool(ref result.isChallengerSuccess_);
              break;
            }
            case 50: {
              result.hasBeginTime = input.ReadString(ref result.beginTime_);
              break;
            }
            case 58: {
              result.hasEndTime = input.ReadString(ref result.endTime_);
              break;
            }
            case 64: {
              result.hasCGuid = input.ReadInt64(ref result.cGuid_);
              break;
            }
            case 72: {
              result.hasCHeroId = input.ReadInt32(ref result.cHeroId_);
              break;
            }
            case 80: {
              result.hasCLevel = input.ReadInt32(ref result.cLevel_);
              break;
            }
            case 88: {
              result.hasCFightScore = input.ReadInt32(ref result.cFightScore_);
              break;
            }
            case 98: {
              result.hasCNickname = input.ReadString(ref result.cNickname_);
              break;
            }
            case 104: {
              result.hasCRank = input.ReadInt32(ref result.cRank_);
              break;
            }
            case 112: {
              result.hasCUserDamage = input.ReadInt32(ref result.cUserDamage_);
              break;
            }
            case 120: {
              result.hasCPartnerId1 = input.ReadInt32(ref result.cPartnerId1_);
              break;
            }
            case 128: {
              result.hasCPartnerDamage1 = input.ReadInt32(ref result.cPartnerDamage1_);
              break;
            }
            case 136: {
              result.hasCPartnerId2 = input.ReadInt32(ref result.cPartnerId2_);
              break;
            }
            case 144: {
              result.hasCPartnerDamage2 = input.ReadInt32(ref result.cPartnerDamage2_);
              break;
            }
            case 152: {
              result.hasCPartnerId3 = input.ReadInt32(ref result.cPartnerId3_);
              break;
            }
            case 160: {
              result.hasCPartnerDamage3 = input.ReadInt32(ref result.cPartnerDamage3_);
              break;
            }
            case 168: {
              result.hasTGuid = input.ReadInt64(ref result.tGuid_);
              break;
            }
            case 176: {
              result.hasTHeroId = input.ReadInt32(ref result.tHeroId_);
              break;
            }
            case 184: {
              result.hasTLevel = input.ReadInt32(ref result.tLevel_);
              break;
            }
            case 192: {
              result.hasTFightScore = input.ReadInt32(ref result.tFightScore_);
              break;
            }
            case 202: {
              result.hasTNickname = input.ReadString(ref result.tNickname_);
              break;
            }
            case 208: {
              result.hasTRank = input.ReadInt32(ref result.tRank_);
              break;
            }
            case 216: {
              result.hasTUserDamage = input.ReadInt32(ref result.tUserDamage_);
              break;
            }
            case 224: {
              result.hasTPartnerId1 = input.ReadInt32(ref result.tPartnerId1_);
              break;
            }
            case 232: {
              result.hasTPartnerDamage1 = input.ReadInt32(ref result.tPartnerDamage1_);
              break;
            }
            case 240: {
              result.hasTPartnerId2 = input.ReadInt32(ref result.tPartnerId2_);
              break;
            }
            case 248: {
              result.hasTPartnerDamage2 = input.ReadInt32(ref result.tPartnerDamage2_);
              break;
            }
            case 256: {
              result.hasTPartnerId3 = input.ReadInt32(ref result.tPartnerId3_);
              break;
            }
            case 264: {
              result.hasTPartnerDamage3 = input.ReadInt32(ref result.tPartnerDamage3_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasRank {
        get { return result.hasRank; }
      }
      public int Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(int value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = 0;
        return this;
      }
      
      public bool HasIsChallengerSuccess {
        get { return result.hasIsChallengerSuccess; }
      }
      public bool IsChallengerSuccess {
        get { return result.IsChallengerSuccess; }
        set { SetIsChallengerSuccess(value); }
      }
      public Builder SetIsChallengerSuccess(bool value) {
        PrepareBuilder();
        result.hasIsChallengerSuccess = true;
        result.isChallengerSuccess_ = value;
        return this;
      }
      public Builder ClearIsChallengerSuccess() {
        PrepareBuilder();
        result.hasIsChallengerSuccess = false;
        result.isChallengerSuccess_ = false;
        return this;
      }
      
      public bool HasBeginTime {
        get { return result.hasBeginTime; }
      }
      public string BeginTime {
        get { return result.BeginTime; }
        set { SetBeginTime(value); }
      }
      public Builder SetBeginTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBeginTime = true;
        result.beginTime_ = value;
        return this;
      }
      public Builder ClearBeginTime() {
        PrepareBuilder();
        result.hasBeginTime = false;
        result.beginTime_ = "";
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public string EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        PrepareBuilder();
        result.hasEndTime = false;
        result.endTime_ = "";
        return this;
      }
      
      public bool HasCGuid {
        get { return result.hasCGuid; }
      }
      public long CGuid {
        get { return result.CGuid; }
        set { SetCGuid(value); }
      }
      public Builder SetCGuid(long value) {
        PrepareBuilder();
        result.hasCGuid = true;
        result.cGuid_ = value;
        return this;
      }
      public Builder ClearCGuid() {
        PrepareBuilder();
        result.hasCGuid = false;
        result.cGuid_ = 0L;
        return this;
      }
      
      public bool HasCHeroId {
        get { return result.hasCHeroId; }
      }
      public int CHeroId {
        get { return result.CHeroId; }
        set { SetCHeroId(value); }
      }
      public Builder SetCHeroId(int value) {
        PrepareBuilder();
        result.hasCHeroId = true;
        result.cHeroId_ = value;
        return this;
      }
      public Builder ClearCHeroId() {
        PrepareBuilder();
        result.hasCHeroId = false;
        result.cHeroId_ = 0;
        return this;
      }
      
      public bool HasCLevel {
        get { return result.hasCLevel; }
      }
      public int CLevel {
        get { return result.CLevel; }
        set { SetCLevel(value); }
      }
      public Builder SetCLevel(int value) {
        PrepareBuilder();
        result.hasCLevel = true;
        result.cLevel_ = value;
        return this;
      }
      public Builder ClearCLevel() {
        PrepareBuilder();
        result.hasCLevel = false;
        result.cLevel_ = 0;
        return this;
      }
      
      public bool HasCFightScore {
        get { return result.hasCFightScore; }
      }
      public int CFightScore {
        get { return result.CFightScore; }
        set { SetCFightScore(value); }
      }
      public Builder SetCFightScore(int value) {
        PrepareBuilder();
        result.hasCFightScore = true;
        result.cFightScore_ = value;
        return this;
      }
      public Builder ClearCFightScore() {
        PrepareBuilder();
        result.hasCFightScore = false;
        result.cFightScore_ = 0;
        return this;
      }
      
      public bool HasCNickname {
        get { return result.hasCNickname; }
      }
      public string CNickname {
        get { return result.CNickname; }
        set { SetCNickname(value); }
      }
      public Builder SetCNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCNickname = true;
        result.cNickname_ = value;
        return this;
      }
      public Builder ClearCNickname() {
        PrepareBuilder();
        result.hasCNickname = false;
        result.cNickname_ = "";
        return this;
      }
      
      public bool HasCRank {
        get { return result.hasCRank; }
      }
      public int CRank {
        get { return result.CRank; }
        set { SetCRank(value); }
      }
      public Builder SetCRank(int value) {
        PrepareBuilder();
        result.hasCRank = true;
        result.cRank_ = value;
        return this;
      }
      public Builder ClearCRank() {
        PrepareBuilder();
        result.hasCRank = false;
        result.cRank_ = 0;
        return this;
      }
      
      public bool HasCUserDamage {
        get { return result.hasCUserDamage; }
      }
      public int CUserDamage {
        get { return result.CUserDamage; }
        set { SetCUserDamage(value); }
      }
      public Builder SetCUserDamage(int value) {
        PrepareBuilder();
        result.hasCUserDamage = true;
        result.cUserDamage_ = value;
        return this;
      }
      public Builder ClearCUserDamage() {
        PrepareBuilder();
        result.hasCUserDamage = false;
        result.cUserDamage_ = 0;
        return this;
      }
      
      public bool HasCPartnerId1 {
        get { return result.hasCPartnerId1; }
      }
      public int CPartnerId1 {
        get { return result.CPartnerId1; }
        set { SetCPartnerId1(value); }
      }
      public Builder SetCPartnerId1(int value) {
        PrepareBuilder();
        result.hasCPartnerId1 = true;
        result.cPartnerId1_ = value;
        return this;
      }
      public Builder ClearCPartnerId1() {
        PrepareBuilder();
        result.hasCPartnerId1 = false;
        result.cPartnerId1_ = 0;
        return this;
      }
      
      public bool HasCPartnerDamage1 {
        get { return result.hasCPartnerDamage1; }
      }
      public int CPartnerDamage1 {
        get { return result.CPartnerDamage1; }
        set { SetCPartnerDamage1(value); }
      }
      public Builder SetCPartnerDamage1(int value) {
        PrepareBuilder();
        result.hasCPartnerDamage1 = true;
        result.cPartnerDamage1_ = value;
        return this;
      }
      public Builder ClearCPartnerDamage1() {
        PrepareBuilder();
        result.hasCPartnerDamage1 = false;
        result.cPartnerDamage1_ = 0;
        return this;
      }
      
      public bool HasCPartnerId2 {
        get { return result.hasCPartnerId2; }
      }
      public int CPartnerId2 {
        get { return result.CPartnerId2; }
        set { SetCPartnerId2(value); }
      }
      public Builder SetCPartnerId2(int value) {
        PrepareBuilder();
        result.hasCPartnerId2 = true;
        result.cPartnerId2_ = value;
        return this;
      }
      public Builder ClearCPartnerId2() {
        PrepareBuilder();
        result.hasCPartnerId2 = false;
        result.cPartnerId2_ = 0;
        return this;
      }
      
      public bool HasCPartnerDamage2 {
        get { return result.hasCPartnerDamage2; }
      }
      public int CPartnerDamage2 {
        get { return result.CPartnerDamage2; }
        set { SetCPartnerDamage2(value); }
      }
      public Builder SetCPartnerDamage2(int value) {
        PrepareBuilder();
        result.hasCPartnerDamage2 = true;
        result.cPartnerDamage2_ = value;
        return this;
      }
      public Builder ClearCPartnerDamage2() {
        PrepareBuilder();
        result.hasCPartnerDamage2 = false;
        result.cPartnerDamage2_ = 0;
        return this;
      }
      
      public bool HasCPartnerId3 {
        get { return result.hasCPartnerId3; }
      }
      public int CPartnerId3 {
        get { return result.CPartnerId3; }
        set { SetCPartnerId3(value); }
      }
      public Builder SetCPartnerId3(int value) {
        PrepareBuilder();
        result.hasCPartnerId3 = true;
        result.cPartnerId3_ = value;
        return this;
      }
      public Builder ClearCPartnerId3() {
        PrepareBuilder();
        result.hasCPartnerId3 = false;
        result.cPartnerId3_ = 0;
        return this;
      }
      
      public bool HasCPartnerDamage3 {
        get { return result.hasCPartnerDamage3; }
      }
      public int CPartnerDamage3 {
        get { return result.CPartnerDamage3; }
        set { SetCPartnerDamage3(value); }
      }
      public Builder SetCPartnerDamage3(int value) {
        PrepareBuilder();
        result.hasCPartnerDamage3 = true;
        result.cPartnerDamage3_ = value;
        return this;
      }
      public Builder ClearCPartnerDamage3() {
        PrepareBuilder();
        result.hasCPartnerDamage3 = false;
        result.cPartnerDamage3_ = 0;
        return this;
      }
      
      public bool HasTGuid {
        get { return result.hasTGuid; }
      }
      public long TGuid {
        get { return result.TGuid; }
        set { SetTGuid(value); }
      }
      public Builder SetTGuid(long value) {
        PrepareBuilder();
        result.hasTGuid = true;
        result.tGuid_ = value;
        return this;
      }
      public Builder ClearTGuid() {
        PrepareBuilder();
        result.hasTGuid = false;
        result.tGuid_ = 0L;
        return this;
      }
      
      public bool HasTHeroId {
        get { return result.hasTHeroId; }
      }
      public int THeroId {
        get { return result.THeroId; }
        set { SetTHeroId(value); }
      }
      public Builder SetTHeroId(int value) {
        PrepareBuilder();
        result.hasTHeroId = true;
        result.tHeroId_ = value;
        return this;
      }
      public Builder ClearTHeroId() {
        PrepareBuilder();
        result.hasTHeroId = false;
        result.tHeroId_ = 0;
        return this;
      }
      
      public bool HasTLevel {
        get { return result.hasTLevel; }
      }
      public int TLevel {
        get { return result.TLevel; }
        set { SetTLevel(value); }
      }
      public Builder SetTLevel(int value) {
        PrepareBuilder();
        result.hasTLevel = true;
        result.tLevel_ = value;
        return this;
      }
      public Builder ClearTLevel() {
        PrepareBuilder();
        result.hasTLevel = false;
        result.tLevel_ = 0;
        return this;
      }
      
      public bool HasTFightScore {
        get { return result.hasTFightScore; }
      }
      public int TFightScore {
        get { return result.TFightScore; }
        set { SetTFightScore(value); }
      }
      public Builder SetTFightScore(int value) {
        PrepareBuilder();
        result.hasTFightScore = true;
        result.tFightScore_ = value;
        return this;
      }
      public Builder ClearTFightScore() {
        PrepareBuilder();
        result.hasTFightScore = false;
        result.tFightScore_ = 0;
        return this;
      }
      
      public bool HasTNickname {
        get { return result.hasTNickname; }
      }
      public string TNickname {
        get { return result.TNickname; }
        set { SetTNickname(value); }
      }
      public Builder SetTNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTNickname = true;
        result.tNickname_ = value;
        return this;
      }
      public Builder ClearTNickname() {
        PrepareBuilder();
        result.hasTNickname = false;
        result.tNickname_ = "";
        return this;
      }
      
      public bool HasTRank {
        get { return result.hasTRank; }
      }
      public int TRank {
        get { return result.TRank; }
        set { SetTRank(value); }
      }
      public Builder SetTRank(int value) {
        PrepareBuilder();
        result.hasTRank = true;
        result.tRank_ = value;
        return this;
      }
      public Builder ClearTRank() {
        PrepareBuilder();
        result.hasTRank = false;
        result.tRank_ = 0;
        return this;
      }
      
      public bool HasTUserDamage {
        get { return result.hasTUserDamage; }
      }
      public int TUserDamage {
        get { return result.TUserDamage; }
        set { SetTUserDamage(value); }
      }
      public Builder SetTUserDamage(int value) {
        PrepareBuilder();
        result.hasTUserDamage = true;
        result.tUserDamage_ = value;
        return this;
      }
      public Builder ClearTUserDamage() {
        PrepareBuilder();
        result.hasTUserDamage = false;
        result.tUserDamage_ = 0;
        return this;
      }
      
      public bool HasTPartnerId1 {
        get { return result.hasTPartnerId1; }
      }
      public int TPartnerId1 {
        get { return result.TPartnerId1; }
        set { SetTPartnerId1(value); }
      }
      public Builder SetTPartnerId1(int value) {
        PrepareBuilder();
        result.hasTPartnerId1 = true;
        result.tPartnerId1_ = value;
        return this;
      }
      public Builder ClearTPartnerId1() {
        PrepareBuilder();
        result.hasTPartnerId1 = false;
        result.tPartnerId1_ = 0;
        return this;
      }
      
      public bool HasTPartnerDamage1 {
        get { return result.hasTPartnerDamage1; }
      }
      public int TPartnerDamage1 {
        get { return result.TPartnerDamage1; }
        set { SetTPartnerDamage1(value); }
      }
      public Builder SetTPartnerDamage1(int value) {
        PrepareBuilder();
        result.hasTPartnerDamage1 = true;
        result.tPartnerDamage1_ = value;
        return this;
      }
      public Builder ClearTPartnerDamage1() {
        PrepareBuilder();
        result.hasTPartnerDamage1 = false;
        result.tPartnerDamage1_ = 0;
        return this;
      }
      
      public bool HasTPartnerId2 {
        get { return result.hasTPartnerId2; }
      }
      public int TPartnerId2 {
        get { return result.TPartnerId2; }
        set { SetTPartnerId2(value); }
      }
      public Builder SetTPartnerId2(int value) {
        PrepareBuilder();
        result.hasTPartnerId2 = true;
        result.tPartnerId2_ = value;
        return this;
      }
      public Builder ClearTPartnerId2() {
        PrepareBuilder();
        result.hasTPartnerId2 = false;
        result.tPartnerId2_ = 0;
        return this;
      }
      
      public bool HasTPartnerDamage2 {
        get { return result.hasTPartnerDamage2; }
      }
      public int TPartnerDamage2 {
        get { return result.TPartnerDamage2; }
        set { SetTPartnerDamage2(value); }
      }
      public Builder SetTPartnerDamage2(int value) {
        PrepareBuilder();
        result.hasTPartnerDamage2 = true;
        result.tPartnerDamage2_ = value;
        return this;
      }
      public Builder ClearTPartnerDamage2() {
        PrepareBuilder();
        result.hasTPartnerDamage2 = false;
        result.tPartnerDamage2_ = 0;
        return this;
      }
      
      public bool HasTPartnerId3 {
        get { return result.hasTPartnerId3; }
      }
      public int TPartnerId3 {
        get { return result.TPartnerId3; }
        set { SetTPartnerId3(value); }
      }
      public Builder SetTPartnerId3(int value) {
        PrepareBuilder();
        result.hasTPartnerId3 = true;
        result.tPartnerId3_ = value;
        return this;
      }
      public Builder ClearTPartnerId3() {
        PrepareBuilder();
        result.hasTPartnerId3 = false;
        result.tPartnerId3_ = 0;
        return this;
      }
      
      public bool HasTPartnerDamage3 {
        get { return result.hasTPartnerDamage3; }
      }
      public int TPartnerDamage3 {
        get { return result.TPartnerDamage3; }
        set { SetTPartnerDamage3(value); }
      }
      public Builder SetTPartnerDamage3(int value) {
        PrepareBuilder();
        result.hasTPartnerDamage3 = true;
        result.tPartnerDamage3_ = value;
        return this;
      }
      public Builder ClearTPartnerDamage3() {
        PrepareBuilder();
        result.hasTPartnerDamage3 = false;
        result.tPartnerDamage3_ = 0;
        return this;
      }
    }
    static DS_ArenaRecord() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_Account : pb::GeneratedMessage<DS_Account, DS_Account.Builder> {
    private DS_Account() { }
    private static readonly DS_Account defaultInstance = new DS_Account().MakeReadOnly();
    private static readonly string[] _dSAccountFieldNames = new string[] { "Account", "IsBanned", "IsValid", "UserGuid1", "UserGuid2", "UserGuid3" };
    private static readonly uint[] _dSAccountFieldTags = new uint[] { 10, 24, 16, 32, 40, 48 };
    public static DS_Account DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_Account DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_Account ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Account__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_Account, DS_Account.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_Account__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int IsBannedFieldNumber = 3;
    private bool hasIsBanned;
    private bool isBanned_;
    public bool HasIsBanned {
      get { return hasIsBanned; }
    }
    public bool IsBanned {
      get { return isBanned_; }
    }
    
    public const int UserGuid1FieldNumber = 4;
    private bool hasUserGuid1;
    private long userGuid1_;
    public bool HasUserGuid1 {
      get { return hasUserGuid1; }
    }
    public long UserGuid1 {
      get { return userGuid1_; }
    }
    
    public const int UserGuid2FieldNumber = 5;
    private bool hasUserGuid2;
    private long userGuid2_;
    public bool HasUserGuid2 {
      get { return hasUserGuid2; }
    }
    public long UserGuid2 {
      get { return userGuid2_; }
    }
    
    public const int UserGuid3FieldNumber = 6;
    private bool hasUserGuid3;
    private long userGuid3_;
    public bool HasUserGuid3 {
      get { return hasUserGuid3; }
    }
    public long UserGuid3 {
      get { return userGuid3_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasIsValid) return false;
        if (!hasIsBanned) return false;
        if (!hasUserGuid1) return false;
        if (!hasUserGuid2) return false;
        if (!hasUserGuid3) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSAccountFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[2], IsValid);
      }
      if (hasIsBanned) {
        output.WriteBool(3, field_names[1], IsBanned);
      }
      if (hasUserGuid1) {
        output.WriteInt64(4, field_names[3], UserGuid1);
      }
      if (hasUserGuid2) {
        output.WriteInt64(5, field_names[4], UserGuid2);
      }
      if (hasUserGuid3) {
        output.WriteInt64(6, field_names[5], UserGuid3);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasIsBanned) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsBanned);
        }
        if (hasUserGuid1) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, UserGuid1);
        }
        if (hasUserGuid2) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, UserGuid2);
        }
        if (hasUserGuid3) {
          size += pb::CodedOutputStream.ComputeInt64Size(6, UserGuid3);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_Account ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Account ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Account ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_Account ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_Account ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Account ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_Account ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_Account ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_Account ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_Account ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_Account MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_Account prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_Account, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_Account cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_Account result;
      
      private DS_Account PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_Account original = result;
          result = new DS_Account();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_Account MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_Account.Descriptor; }
      }
      
      public override DS_Account DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_Account.DefaultInstance; }
      }
      
      public override DS_Account BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_Account) {
          return MergeFrom((DS_Account) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_Account other) {
        if (other == global::DashFire.DataStore.DS_Account.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasIsBanned) {
          IsBanned = other.IsBanned;
        }
        if (other.HasUserGuid1) {
          UserGuid1 = other.UserGuid1;
        }
        if (other.HasUserGuid2) {
          UserGuid2 = other.UserGuid2;
        }
        if (other.HasUserGuid3) {
          UserGuid3 = other.UserGuid3;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasIsBanned = input.ReadBool(ref result.isBanned_);
              break;
            }
            case 32: {
              result.hasUserGuid1 = input.ReadInt64(ref result.userGuid1_);
              break;
            }
            case 40: {
              result.hasUserGuid2 = input.ReadInt64(ref result.userGuid2_);
              break;
            }
            case 48: {
              result.hasUserGuid3 = input.ReadInt64(ref result.userGuid3_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasIsBanned {
        get { return result.hasIsBanned; }
      }
      public bool IsBanned {
        get { return result.IsBanned; }
        set { SetIsBanned(value); }
      }
      public Builder SetIsBanned(bool value) {
        PrepareBuilder();
        result.hasIsBanned = true;
        result.isBanned_ = value;
        return this;
      }
      public Builder ClearIsBanned() {
        PrepareBuilder();
        result.hasIsBanned = false;
        result.isBanned_ = false;
        return this;
      }
      
      public bool HasUserGuid1 {
        get { return result.hasUserGuid1; }
      }
      public long UserGuid1 {
        get { return result.UserGuid1; }
        set { SetUserGuid1(value); }
      }
      public Builder SetUserGuid1(long value) {
        PrepareBuilder();
        result.hasUserGuid1 = true;
        result.userGuid1_ = value;
        return this;
      }
      public Builder ClearUserGuid1() {
        PrepareBuilder();
        result.hasUserGuid1 = false;
        result.userGuid1_ = 0L;
        return this;
      }
      
      public bool HasUserGuid2 {
        get { return result.hasUserGuid2; }
      }
      public long UserGuid2 {
        get { return result.UserGuid2; }
        set { SetUserGuid2(value); }
      }
      public Builder SetUserGuid2(long value) {
        PrepareBuilder();
        result.hasUserGuid2 = true;
        result.userGuid2_ = value;
        return this;
      }
      public Builder ClearUserGuid2() {
        PrepareBuilder();
        result.hasUserGuid2 = false;
        result.userGuid2_ = 0L;
        return this;
      }
      
      public bool HasUserGuid3 {
        get { return result.hasUserGuid3; }
      }
      public long UserGuid3 {
        get { return result.UserGuid3; }
        set { SetUserGuid3(value); }
      }
      public Builder SetUserGuid3(long value) {
        PrepareBuilder();
        result.hasUserGuid3 = true;
        result.userGuid3_ = value;
        return this;
      }
      public Builder ClearUserGuid3() {
        PrepareBuilder();
        result.hasUserGuid3 = false;
        result.userGuid3_ = 0L;
        return this;
      }
    }
    static DS_Account() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_UserInfo : pb::GeneratedMessage<DS_UserInfo, DS_UserInfo.Builder> {
    private DS_UserInfo() { }
    private static readonly DS_UserInfo defaultInstance = new DS_UserInfo().MakeReadOnly();
    private static readonly string[] _dSUserInfoFieldNames = new string[] { "AccountId", "CitySceneId", "CreateTime", "ExpPoints", "Gold", "Guid", "HeroId", "IsValid", "LastLogoutTime", "Level", "Money", "NewbieActionFlag", "NewbieStep", "Nickname", "Vip" };
    private static readonly uint[] _dSUserInfoFieldTags = new uint[] { 18, 80, 106, 72, 64, 8, 40, 24, 98, 48, 56, 120, 112, 34, 88 };
    public static DS_UserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_UserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_UserInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_UserInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_UserInfo, DS_UserInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_UserInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private long guid_;
    public bool HasGuid {
      get { return hasGuid; }
    }
    public long Guid {
      get { return guid_; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int NicknameFieldNumber = 4;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int HeroIdFieldNumber = 5;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int LevelFieldNumber = 6;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int MoneyFieldNumber = 7;
    private bool hasMoney;
    private int money_;
    public bool HasMoney {
      get { return hasMoney; }
    }
    public int Money {
      get { return money_; }
    }
    
    public const int GoldFieldNumber = 8;
    private bool hasGold;
    private int gold_;
    public bool HasGold {
      get { return hasGold; }
    }
    public int Gold {
      get { return gold_; }
    }
    
    public const int ExpPointsFieldNumber = 9;
    private bool hasExpPoints;
    private int expPoints_;
    public bool HasExpPoints {
      get { return hasExpPoints; }
    }
    public int ExpPoints {
      get { return expPoints_; }
    }
    
    public const int CitySceneIdFieldNumber = 10;
    private bool hasCitySceneId;
    private int citySceneId_;
    public bool HasCitySceneId {
      get { return hasCitySceneId; }
    }
    public int CitySceneId {
      get { return citySceneId_; }
    }
    
    public const int VipFieldNumber = 11;
    private bool hasVip;
    private int vip_;
    public bool HasVip {
      get { return hasVip; }
    }
    public int Vip {
      get { return vip_; }
    }
    
    public const int LastLogoutTimeFieldNumber = 12;
    private bool hasLastLogoutTime;
    private string lastLogoutTime_ = "";
    public bool HasLastLogoutTime {
      get { return hasLastLogoutTime; }
    }
    public string LastLogoutTime {
      get { return lastLogoutTime_; }
    }
    
    public const int CreateTimeFieldNumber = 13;
    private bool hasCreateTime;
    private string createTime_ = "";
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public string CreateTime {
      get { return createTime_; }
    }
    
    public const int NewbieStepFieldNumber = 14;
    private bool hasNewbieStep;
    private long newbieStep_;
    public bool HasNewbieStep {
      get { return hasNewbieStep; }
    }
    public long NewbieStep {
      get { return newbieStep_; }
    }
    
    public const int NewbieActionFlagFieldNumber = 15;
    private bool hasNewbieActionFlag;
    private long newbieActionFlag_;
    public bool HasNewbieActionFlag {
      get { return hasNewbieActionFlag; }
    }
    public long NewbieActionFlag {
      get { return newbieActionFlag_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasAccountId) return false;
        if (!hasIsValid) return false;
        if (!hasNickname) return false;
        if (!hasHeroId) return false;
        if (!hasLevel) return false;
        if (!hasMoney) return false;
        if (!hasGold) return false;
        if (!hasExpPoints) return false;
        if (!hasCitySceneId) return false;
        if (!hasVip) return false;
        if (!hasLastLogoutTime) return false;
        if (!hasCreateTime) return false;
        if (!hasNewbieStep) return false;
        if (!hasNewbieActionFlag) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSUserInfoFieldNames;
      if (hasGuid) {
        output.WriteInt64(1, field_names[5], Guid);
      }
      if (hasAccountId) {
        output.WriteString(2, field_names[0], AccountId);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[7], IsValid);
      }
      if (hasNickname) {
        output.WriteString(4, field_names[13], Nickname);
      }
      if (hasHeroId) {
        output.WriteInt32(5, field_names[6], HeroId);
      }
      if (hasLevel) {
        output.WriteInt32(6, field_names[9], Level);
      }
      if (hasMoney) {
        output.WriteInt32(7, field_names[10], Money);
      }
      if (hasGold) {
        output.WriteInt32(8, field_names[4], Gold);
      }
      if (hasExpPoints) {
        output.WriteInt32(9, field_names[3], ExpPoints);
      }
      if (hasCitySceneId) {
        output.WriteInt32(10, field_names[1], CitySceneId);
      }
      if (hasVip) {
        output.WriteInt32(11, field_names[14], Vip);
      }
      if (hasLastLogoutTime) {
        output.WriteString(12, field_names[8], LastLogoutTime);
      }
      if (hasCreateTime) {
        output.WriteString(13, field_names[2], CreateTime);
      }
      if (hasNewbieStep) {
        output.WriteInt64(14, field_names[12], NewbieStep);
      }
      if (hasNewbieActionFlag) {
        output.WriteInt64(15, field_names[11], NewbieActionFlag);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, Guid);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, AccountId);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Nickname);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, HeroId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Level);
        }
        if (hasMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Money);
        }
        if (hasGold) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, Gold);
        }
        if (hasExpPoints) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, ExpPoints);
        }
        if (hasCitySceneId) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, CitySceneId);
        }
        if (hasVip) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, Vip);
        }
        if (hasLastLogoutTime) {
          size += pb::CodedOutputStream.ComputeStringSize(12, LastLogoutTime);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeStringSize(13, CreateTime);
        }
        if (hasNewbieStep) {
          size += pb::CodedOutputStream.ComputeInt64Size(14, NewbieStep);
        }
        if (hasNewbieActionFlag) {
          size += pb::CodedOutputStream.ComputeInt64Size(15, NewbieActionFlag);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_UserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_UserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_UserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_UserInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_UserInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_UserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_UserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_UserInfo result;
      
      private DS_UserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_UserInfo original = result;
          result = new DS_UserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_UserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_UserInfo.Descriptor; }
      }
      
      public override DS_UserInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_UserInfo.DefaultInstance; }
      }
      
      public override DS_UserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_UserInfo) {
          return MergeFrom((DS_UserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_UserInfo other) {
        if (other == global::DashFire.DataStore.DS_UserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasMoney) {
          Money = other.Money;
        }
        if (other.HasGold) {
          Gold = other.Gold;
        }
        if (other.HasExpPoints) {
          ExpPoints = other.ExpPoints;
        }
        if (other.HasCitySceneId) {
          CitySceneId = other.CitySceneId;
        }
        if (other.HasVip) {
          Vip = other.Vip;
        }
        if (other.HasLastLogoutTime) {
          LastLogoutTime = other.LastLogoutTime;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasNewbieStep) {
          NewbieStep = other.NewbieStep;
        }
        if (other.HasNewbieActionFlag) {
          NewbieActionFlag = other.NewbieActionFlag;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSUserInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGuid = input.ReadInt64(ref result.guid_);
              break;
            }
            case 18: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 34: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 40: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 48: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 56: {
              result.hasMoney = input.ReadInt32(ref result.money_);
              break;
            }
            case 64: {
              result.hasGold = input.ReadInt32(ref result.gold_);
              break;
            }
            case 72: {
              result.hasExpPoints = input.ReadInt32(ref result.expPoints_);
              break;
            }
            case 80: {
              result.hasCitySceneId = input.ReadInt32(ref result.citySceneId_);
              break;
            }
            case 88: {
              result.hasVip = input.ReadInt32(ref result.vip_);
              break;
            }
            case 98: {
              result.hasLastLogoutTime = input.ReadString(ref result.lastLogoutTime_);
              break;
            }
            case 106: {
              result.hasCreateTime = input.ReadString(ref result.createTime_);
              break;
            }
            case 112: {
              result.hasNewbieStep = input.ReadInt64(ref result.newbieStep_);
              break;
            }
            case 120: {
              result.hasNewbieActionFlag = input.ReadInt64(ref result.newbieActionFlag_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public long Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(long value) {
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = 0L;
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasMoney {
        get { return result.hasMoney; }
      }
      public int Money {
        get { return result.Money; }
        set { SetMoney(value); }
      }
      public Builder SetMoney(int value) {
        PrepareBuilder();
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder ClearMoney() {
        PrepareBuilder();
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      public bool HasGold {
        get { return result.hasGold; }
      }
      public int Gold {
        get { return result.Gold; }
        set { SetGold(value); }
      }
      public Builder SetGold(int value) {
        PrepareBuilder();
        result.hasGold = true;
        result.gold_ = value;
        return this;
      }
      public Builder ClearGold() {
        PrepareBuilder();
        result.hasGold = false;
        result.gold_ = 0;
        return this;
      }
      
      public bool HasExpPoints {
        get { return result.hasExpPoints; }
      }
      public int ExpPoints {
        get { return result.ExpPoints; }
        set { SetExpPoints(value); }
      }
      public Builder SetExpPoints(int value) {
        PrepareBuilder();
        result.hasExpPoints = true;
        result.expPoints_ = value;
        return this;
      }
      public Builder ClearExpPoints() {
        PrepareBuilder();
        result.hasExpPoints = false;
        result.expPoints_ = 0;
        return this;
      }
      
      public bool HasCitySceneId {
        get { return result.hasCitySceneId; }
      }
      public int CitySceneId {
        get { return result.CitySceneId; }
        set { SetCitySceneId(value); }
      }
      public Builder SetCitySceneId(int value) {
        PrepareBuilder();
        result.hasCitySceneId = true;
        result.citySceneId_ = value;
        return this;
      }
      public Builder ClearCitySceneId() {
        PrepareBuilder();
        result.hasCitySceneId = false;
        result.citySceneId_ = 0;
        return this;
      }
      
      public bool HasVip {
        get { return result.hasVip; }
      }
      public int Vip {
        get { return result.Vip; }
        set { SetVip(value); }
      }
      public Builder SetVip(int value) {
        PrepareBuilder();
        result.hasVip = true;
        result.vip_ = value;
        return this;
      }
      public Builder ClearVip() {
        PrepareBuilder();
        result.hasVip = false;
        result.vip_ = 0;
        return this;
      }
      
      public bool HasLastLogoutTime {
        get { return result.hasLastLogoutTime; }
      }
      public string LastLogoutTime {
        get { return result.LastLogoutTime; }
        set { SetLastLogoutTime(value); }
      }
      public Builder SetLastLogoutTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastLogoutTime = true;
        result.lastLogoutTime_ = value;
        return this;
      }
      public Builder ClearLastLogoutTime() {
        PrepareBuilder();
        result.hasLastLogoutTime = false;
        result.lastLogoutTime_ = "";
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public string CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = "";
        return this;
      }
      
      public bool HasNewbieStep {
        get { return result.hasNewbieStep; }
      }
      public long NewbieStep {
        get { return result.NewbieStep; }
        set { SetNewbieStep(value); }
      }
      public Builder SetNewbieStep(long value) {
        PrepareBuilder();
        result.hasNewbieStep = true;
        result.newbieStep_ = value;
        return this;
      }
      public Builder ClearNewbieStep() {
        PrepareBuilder();
        result.hasNewbieStep = false;
        result.newbieStep_ = 0L;
        return this;
      }
      
      public bool HasNewbieActionFlag {
        get { return result.hasNewbieActionFlag; }
      }
      public long NewbieActionFlag {
        get { return result.NewbieActionFlag; }
        set { SetNewbieActionFlag(value); }
      }
      public Builder SetNewbieActionFlag(long value) {
        PrepareBuilder();
        result.hasNewbieActionFlag = true;
        result.newbieActionFlag_ = value;
        return this;
      }
      public Builder ClearNewbieActionFlag() {
        PrepareBuilder();
        result.hasNewbieActionFlag = false;
        result.newbieActionFlag_ = 0L;
        return this;
      }
    }
    static DS_UserInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_UserInfoExtra : pb::GeneratedMessage<DS_UserInfoExtra, DS_UserInfoExtra.Builder> {
    private DS_UserInfoExtra() { }
    private static readonly DS_UserInfoExtra defaultInstance = new DS_UserInfoExtra().MakeReadOnly();
    private static readonly string[] _dSUserInfoExtraFieldNames = new string[] { "ActivePartnerId", "AttemptAcceptedAward", "AttemptAward", "AttemptCurAcceptedCount", "BuyMoneyCount", "BuyStaminaCount", "CompleteSceneList", "CompleteSceneNumber", "DayRestSignCount", "ExchangeGoodList", "ExchangeGoodNumber", "ExchangeGoodRefreshCount", "GoldTollgateCount", "GowElo", "GowHistroyEloList", "GowHistroyTimeList", "GowMatches", "GowWinMatches", "Guid", "IsValid", "IsWeeklyLoginRewarded", "LastAddStaminaTimestamp", "LastAddVigorTimestamp", "LastBuyMoneyTimestamp", "LastResetAttemptAwardCountTime", "LastResetDailyMissionTime", "LastResetDaySignCountTime", "LastResetExchangeGoodTime", "LastResetGoldTollgateCountTime", "LastResetMidasTouchTime", "LastResetMonthSignCountTime", "LastResetSceneCountTime", "LastResetSellTime", "LastResetStaminaTime", "LastResetWeeklyLoginRewardTime", "LastSellTimestamp", "MonthCardExpireTime", "MonthSignCount", "SellIncome", "Stamina", "UsedStamina", "Vigor", "WeeklyLoginRewardList" };
    private static readonly uint[] _dSUserInfoExtraFieldTags = new uint[] { 136, 160, 144, 152, 72, 56, 226, 234, 272, 194, 202, 218, 176, 24, 322, 314, 32, 40, 8, 16, 328, 65, 257, 81, 170, 130, 282, 210, 186, 114, 298, 242, 122, 106, 346, 97, 306, 288, 88, 48, 264, 248, 338 };
    public static DS_UserInfoExtra DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_UserInfoExtra DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_UserInfoExtra ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_UserInfoExtra__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_UserInfoExtra, DS_UserInfoExtra.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_UserInfoExtra__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private long guid_;
    public bool HasGuid {
      get { return hasGuid; }
    }
    public long Guid {
      get { return guid_; }
    }
    
    public const int IsValidFieldNumber = 2;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int GowEloFieldNumber = 3;
    private bool hasGowElo;
    private int gowElo_;
    public bool HasGowElo {
      get { return hasGowElo; }
    }
    public int GowElo {
      get { return gowElo_; }
    }
    
    public const int GowMatchesFieldNumber = 4;
    private bool hasGowMatches;
    private int gowMatches_;
    public bool HasGowMatches {
      get { return hasGowMatches; }
    }
    public int GowMatches {
      get { return gowMatches_; }
    }
    
    public const int GowWinMatchesFieldNumber = 5;
    private bool hasGowWinMatches;
    private int gowWinMatches_;
    public bool HasGowWinMatches {
      get { return hasGowWinMatches; }
    }
    public int GowWinMatches {
      get { return gowWinMatches_; }
    }
    
    public const int StaminaFieldNumber = 6;
    private bool hasStamina;
    private int stamina_;
    public bool HasStamina {
      get { return hasStamina; }
    }
    public int Stamina {
      get { return stamina_; }
    }
    
    public const int BuyStaminaCountFieldNumber = 7;
    private bool hasBuyStaminaCount;
    private int buyStaminaCount_;
    public bool HasBuyStaminaCount {
      get { return hasBuyStaminaCount; }
    }
    public int BuyStaminaCount {
      get { return buyStaminaCount_; }
    }
    
    public const int LastAddStaminaTimestampFieldNumber = 8;
    private bool hasLastAddStaminaTimestamp;
    private double lastAddStaminaTimestamp_;
    public bool HasLastAddStaminaTimestamp {
      get { return hasLastAddStaminaTimestamp; }
    }
    public double LastAddStaminaTimestamp {
      get { return lastAddStaminaTimestamp_; }
    }
    
    public const int BuyMoneyCountFieldNumber = 9;
    private bool hasBuyMoneyCount;
    private int buyMoneyCount_;
    public bool HasBuyMoneyCount {
      get { return hasBuyMoneyCount; }
    }
    public int BuyMoneyCount {
      get { return buyMoneyCount_; }
    }
    
    public const int LastBuyMoneyTimestampFieldNumber = 10;
    private bool hasLastBuyMoneyTimestamp;
    private double lastBuyMoneyTimestamp_;
    public bool HasLastBuyMoneyTimestamp {
      get { return hasLastBuyMoneyTimestamp; }
    }
    public double LastBuyMoneyTimestamp {
      get { return lastBuyMoneyTimestamp_; }
    }
    
    public const int SellIncomeFieldNumber = 11;
    private bool hasSellIncome;
    private int sellIncome_;
    public bool HasSellIncome {
      get { return hasSellIncome; }
    }
    public int SellIncome {
      get { return sellIncome_; }
    }
    
    public const int LastSellTimestampFieldNumber = 12;
    private bool hasLastSellTimestamp;
    private double lastSellTimestamp_;
    public bool HasLastSellTimestamp {
      get { return hasLastSellTimestamp; }
    }
    public double LastSellTimestamp {
      get { return lastSellTimestamp_; }
    }
    
    public const int LastResetStaminaTimeFieldNumber = 13;
    private bool hasLastResetStaminaTime;
    private string lastResetStaminaTime_ = "";
    public bool HasLastResetStaminaTime {
      get { return hasLastResetStaminaTime; }
    }
    public string LastResetStaminaTime {
      get { return lastResetStaminaTime_; }
    }
    
    public const int LastResetMidasTouchTimeFieldNumber = 14;
    private bool hasLastResetMidasTouchTime;
    private string lastResetMidasTouchTime_ = "";
    public bool HasLastResetMidasTouchTime {
      get { return hasLastResetMidasTouchTime; }
    }
    public string LastResetMidasTouchTime {
      get { return lastResetMidasTouchTime_; }
    }
    
    public const int LastResetSellTimeFieldNumber = 15;
    private bool hasLastResetSellTime;
    private string lastResetSellTime_ = "";
    public bool HasLastResetSellTime {
      get { return hasLastResetSellTime; }
    }
    public string LastResetSellTime {
      get { return lastResetSellTime_; }
    }
    
    public const int LastResetDailyMissionTimeFieldNumber = 16;
    private bool hasLastResetDailyMissionTime;
    private string lastResetDailyMissionTime_ = "";
    public bool HasLastResetDailyMissionTime {
      get { return hasLastResetDailyMissionTime; }
    }
    public string LastResetDailyMissionTime {
      get { return lastResetDailyMissionTime_; }
    }
    
    public const int ActivePartnerIdFieldNumber = 17;
    private bool hasActivePartnerId;
    private int activePartnerId_;
    public bool HasActivePartnerId {
      get { return hasActivePartnerId; }
    }
    public int ActivePartnerId {
      get { return activePartnerId_; }
    }
    
    public const int AttemptAwardFieldNumber = 18;
    private bool hasAttemptAward;
    private int attemptAward_;
    public bool HasAttemptAward {
      get { return hasAttemptAward; }
    }
    public int AttemptAward {
      get { return attemptAward_; }
    }
    
    public const int AttemptCurAcceptedCountFieldNumber = 19;
    private bool hasAttemptCurAcceptedCount;
    private int attemptCurAcceptedCount_;
    public bool HasAttemptCurAcceptedCount {
      get { return hasAttemptCurAcceptedCount; }
    }
    public int AttemptCurAcceptedCount {
      get { return attemptCurAcceptedCount_; }
    }
    
    public const int AttemptAcceptedAwardFieldNumber = 20;
    private bool hasAttemptAcceptedAward;
    private int attemptAcceptedAward_;
    public bool HasAttemptAcceptedAward {
      get { return hasAttemptAcceptedAward; }
    }
    public int AttemptAcceptedAward {
      get { return attemptAcceptedAward_; }
    }
    
    public const int LastResetAttemptAwardCountTimeFieldNumber = 21;
    private bool hasLastResetAttemptAwardCountTime;
    private string lastResetAttemptAwardCountTime_ = "";
    public bool HasLastResetAttemptAwardCountTime {
      get { return hasLastResetAttemptAwardCountTime; }
    }
    public string LastResetAttemptAwardCountTime {
      get { return lastResetAttemptAwardCountTime_; }
    }
    
    public const int GoldTollgateCountFieldNumber = 22;
    private bool hasGoldTollgateCount;
    private int goldTollgateCount_;
    public bool HasGoldTollgateCount {
      get { return hasGoldTollgateCount; }
    }
    public int GoldTollgateCount {
      get { return goldTollgateCount_; }
    }
    
    public const int LastResetGoldTollgateCountTimeFieldNumber = 23;
    private bool hasLastResetGoldTollgateCountTime;
    private string lastResetGoldTollgateCountTime_ = "";
    public bool HasLastResetGoldTollgateCountTime {
      get { return hasLastResetGoldTollgateCountTime; }
    }
    public string LastResetGoldTollgateCountTime {
      get { return lastResetGoldTollgateCountTime_; }
    }
    
    public const int ExchangeGoodListFieldNumber = 24;
    private bool hasExchangeGoodList;
    private string exchangeGoodList_ = "";
    public bool HasExchangeGoodList {
      get { return hasExchangeGoodList; }
    }
    public string ExchangeGoodList {
      get { return exchangeGoodList_; }
    }
    
    public const int ExchangeGoodNumberFieldNumber = 25;
    private bool hasExchangeGoodNumber;
    private string exchangeGoodNumber_ = "";
    public bool HasExchangeGoodNumber {
      get { return hasExchangeGoodNumber; }
    }
    public string ExchangeGoodNumber {
      get { return exchangeGoodNumber_; }
    }
    
    public const int LastResetExchangeGoodTimeFieldNumber = 26;
    private bool hasLastResetExchangeGoodTime;
    private string lastResetExchangeGoodTime_ = "";
    public bool HasLastResetExchangeGoodTime {
      get { return hasLastResetExchangeGoodTime; }
    }
    public string LastResetExchangeGoodTime {
      get { return lastResetExchangeGoodTime_; }
    }
    
    public const int ExchangeGoodRefreshCountFieldNumber = 27;
    private bool hasExchangeGoodRefreshCount;
    private string exchangeGoodRefreshCount_ = "";
    public bool HasExchangeGoodRefreshCount {
      get { return hasExchangeGoodRefreshCount; }
    }
    public string ExchangeGoodRefreshCount {
      get { return exchangeGoodRefreshCount_; }
    }
    
    public const int CompleteSceneListFieldNumber = 28;
    private bool hasCompleteSceneList;
    private string completeSceneList_ = "";
    public bool HasCompleteSceneList {
      get { return hasCompleteSceneList; }
    }
    public string CompleteSceneList {
      get { return completeSceneList_; }
    }
    
    public const int CompleteSceneNumberFieldNumber = 29;
    private bool hasCompleteSceneNumber;
    private string completeSceneNumber_ = "";
    public bool HasCompleteSceneNumber {
      get { return hasCompleteSceneNumber; }
    }
    public string CompleteSceneNumber {
      get { return completeSceneNumber_; }
    }
    
    public const int LastResetSceneCountTimeFieldNumber = 30;
    private bool hasLastResetSceneCountTime;
    private string lastResetSceneCountTime_ = "";
    public bool HasLastResetSceneCountTime {
      get { return hasLastResetSceneCountTime; }
    }
    public string LastResetSceneCountTime {
      get { return lastResetSceneCountTime_; }
    }
    
    public const int VigorFieldNumber = 31;
    private bool hasVigor;
    private int vigor_;
    public bool HasVigor {
      get { return hasVigor; }
    }
    public int Vigor {
      get { return vigor_; }
    }
    
    public const int LastAddVigorTimestampFieldNumber = 32;
    private bool hasLastAddVigorTimestamp;
    private double lastAddVigorTimestamp_;
    public bool HasLastAddVigorTimestamp {
      get { return hasLastAddVigorTimestamp; }
    }
    public double LastAddVigorTimestamp {
      get { return lastAddVigorTimestamp_; }
    }
    
    public const int UsedStaminaFieldNumber = 33;
    private bool hasUsedStamina;
    private int usedStamina_;
    public bool HasUsedStamina {
      get { return hasUsedStamina; }
    }
    public int UsedStamina {
      get { return usedStamina_; }
    }
    
    public const int DayRestSignCountFieldNumber = 34;
    private bool hasDayRestSignCount;
    private int dayRestSignCount_;
    public bool HasDayRestSignCount {
      get { return hasDayRestSignCount; }
    }
    public int DayRestSignCount {
      get { return dayRestSignCount_; }
    }
    
    public const int LastResetDaySignCountTimeFieldNumber = 35;
    private bool hasLastResetDaySignCountTime;
    private string lastResetDaySignCountTime_ = "";
    public bool HasLastResetDaySignCountTime {
      get { return hasLastResetDaySignCountTime; }
    }
    public string LastResetDaySignCountTime {
      get { return lastResetDaySignCountTime_; }
    }
    
    public const int MonthSignCountFieldNumber = 36;
    private bool hasMonthSignCount;
    private int monthSignCount_;
    public bool HasMonthSignCount {
      get { return hasMonthSignCount; }
    }
    public int MonthSignCount {
      get { return monthSignCount_; }
    }
    
    public const int LastResetMonthSignCountTimeFieldNumber = 37;
    private bool hasLastResetMonthSignCountTime;
    private string lastResetMonthSignCountTime_ = "";
    public bool HasLastResetMonthSignCountTime {
      get { return hasLastResetMonthSignCountTime; }
    }
    public string LastResetMonthSignCountTime {
      get { return lastResetMonthSignCountTime_; }
    }
    
    public const int MonthCardExpireTimeFieldNumber = 38;
    private bool hasMonthCardExpireTime;
    private string monthCardExpireTime_ = "";
    public bool HasMonthCardExpireTime {
      get { return hasMonthCardExpireTime; }
    }
    public string MonthCardExpireTime {
      get { return monthCardExpireTime_; }
    }
    
    public const int GowHistroyTimeListFieldNumber = 39;
    private bool hasGowHistroyTimeList;
    private string gowHistroyTimeList_ = "";
    public bool HasGowHistroyTimeList {
      get { return hasGowHistroyTimeList; }
    }
    public string GowHistroyTimeList {
      get { return gowHistroyTimeList_; }
    }
    
    public const int GowHistroyEloListFieldNumber = 40;
    private bool hasGowHistroyEloList;
    private string gowHistroyEloList_ = "";
    public bool HasGowHistroyEloList {
      get { return hasGowHistroyEloList; }
    }
    public string GowHistroyEloList {
      get { return gowHistroyEloList_; }
    }
    
    public const int IsWeeklyLoginRewardedFieldNumber = 41;
    private bool hasIsWeeklyLoginRewarded;
    private bool isWeeklyLoginRewarded_;
    public bool HasIsWeeklyLoginRewarded {
      get { return hasIsWeeklyLoginRewarded; }
    }
    public bool IsWeeklyLoginRewarded {
      get { return isWeeklyLoginRewarded_; }
    }
    
    public const int WeeklyLoginRewardListFieldNumber = 42;
    private bool hasWeeklyLoginRewardList;
    private string weeklyLoginRewardList_ = "";
    public bool HasWeeklyLoginRewardList {
      get { return hasWeeklyLoginRewardList; }
    }
    public string WeeklyLoginRewardList {
      get { return weeklyLoginRewardList_; }
    }
    
    public const int LastResetWeeklyLoginRewardTimeFieldNumber = 43;
    private bool hasLastResetWeeklyLoginRewardTime;
    private string lastResetWeeklyLoginRewardTime_ = "";
    public bool HasLastResetWeeklyLoginRewardTime {
      get { return hasLastResetWeeklyLoginRewardTime; }
    }
    public string LastResetWeeklyLoginRewardTime {
      get { return lastResetWeeklyLoginRewardTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasIsValid) return false;
        if (!hasGowElo) return false;
        if (!hasGowMatches) return false;
        if (!hasGowWinMatches) return false;
        if (!hasStamina) return false;
        if (!hasBuyStaminaCount) return false;
        if (!hasLastAddStaminaTimestamp) return false;
        if (!hasBuyMoneyCount) return false;
        if (!hasLastBuyMoneyTimestamp) return false;
        if (!hasSellIncome) return false;
        if (!hasLastSellTimestamp) return false;
        if (!hasLastResetStaminaTime) return false;
        if (!hasLastResetMidasTouchTime) return false;
        if (!hasLastResetSellTime) return false;
        if (!hasLastResetDailyMissionTime) return false;
        if (!hasActivePartnerId) return false;
        if (!hasAttemptAward) return false;
        if (!hasAttemptCurAcceptedCount) return false;
        if (!hasAttemptAcceptedAward) return false;
        if (!hasLastResetAttemptAwardCountTime) return false;
        if (!hasGoldTollgateCount) return false;
        if (!hasLastResetGoldTollgateCountTime) return false;
        if (!hasExchangeGoodList) return false;
        if (!hasExchangeGoodNumber) return false;
        if (!hasLastResetExchangeGoodTime) return false;
        if (!hasExchangeGoodRefreshCount) return false;
        if (!hasCompleteSceneList) return false;
        if (!hasCompleteSceneNumber) return false;
        if (!hasLastResetSceneCountTime) return false;
        if (!hasVigor) return false;
        if (!hasLastAddVigorTimestamp) return false;
        if (!hasUsedStamina) return false;
        if (!hasDayRestSignCount) return false;
        if (!hasLastResetDaySignCountTime) return false;
        if (!hasMonthSignCount) return false;
        if (!hasLastResetMonthSignCountTime) return false;
        if (!hasMonthCardExpireTime) return false;
        if (!hasGowHistroyTimeList) return false;
        if (!hasGowHistroyEloList) return false;
        if (!hasIsWeeklyLoginRewarded) return false;
        if (!hasWeeklyLoginRewardList) return false;
        if (!hasLastResetWeeklyLoginRewardTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSUserInfoExtraFieldNames;
      if (hasGuid) {
        output.WriteInt64(1, field_names[18], Guid);
      }
      if (hasIsValid) {
        output.WriteBool(2, field_names[19], IsValid);
      }
      if (hasGowElo) {
        output.WriteInt32(3, field_names[13], GowElo);
      }
      if (hasGowMatches) {
        output.WriteInt32(4, field_names[16], GowMatches);
      }
      if (hasGowWinMatches) {
        output.WriteInt32(5, field_names[17], GowWinMatches);
      }
      if (hasStamina) {
        output.WriteInt32(6, field_names[39], Stamina);
      }
      if (hasBuyStaminaCount) {
        output.WriteInt32(7, field_names[5], BuyStaminaCount);
      }
      if (hasLastAddStaminaTimestamp) {
        output.WriteDouble(8, field_names[21], LastAddStaminaTimestamp);
      }
      if (hasBuyMoneyCount) {
        output.WriteInt32(9, field_names[4], BuyMoneyCount);
      }
      if (hasLastBuyMoneyTimestamp) {
        output.WriteDouble(10, field_names[23], LastBuyMoneyTimestamp);
      }
      if (hasSellIncome) {
        output.WriteInt32(11, field_names[38], SellIncome);
      }
      if (hasLastSellTimestamp) {
        output.WriteDouble(12, field_names[35], LastSellTimestamp);
      }
      if (hasLastResetStaminaTime) {
        output.WriteString(13, field_names[33], LastResetStaminaTime);
      }
      if (hasLastResetMidasTouchTime) {
        output.WriteString(14, field_names[29], LastResetMidasTouchTime);
      }
      if (hasLastResetSellTime) {
        output.WriteString(15, field_names[32], LastResetSellTime);
      }
      if (hasLastResetDailyMissionTime) {
        output.WriteString(16, field_names[25], LastResetDailyMissionTime);
      }
      if (hasActivePartnerId) {
        output.WriteInt32(17, field_names[0], ActivePartnerId);
      }
      if (hasAttemptAward) {
        output.WriteInt32(18, field_names[2], AttemptAward);
      }
      if (hasAttemptCurAcceptedCount) {
        output.WriteInt32(19, field_names[3], AttemptCurAcceptedCount);
      }
      if (hasAttemptAcceptedAward) {
        output.WriteInt32(20, field_names[1], AttemptAcceptedAward);
      }
      if (hasLastResetAttemptAwardCountTime) {
        output.WriteString(21, field_names[24], LastResetAttemptAwardCountTime);
      }
      if (hasGoldTollgateCount) {
        output.WriteInt32(22, field_names[12], GoldTollgateCount);
      }
      if (hasLastResetGoldTollgateCountTime) {
        output.WriteString(23, field_names[28], LastResetGoldTollgateCountTime);
      }
      if (hasExchangeGoodList) {
        output.WriteString(24, field_names[9], ExchangeGoodList);
      }
      if (hasExchangeGoodNumber) {
        output.WriteString(25, field_names[10], ExchangeGoodNumber);
      }
      if (hasLastResetExchangeGoodTime) {
        output.WriteString(26, field_names[27], LastResetExchangeGoodTime);
      }
      if (hasExchangeGoodRefreshCount) {
        output.WriteString(27, field_names[11], ExchangeGoodRefreshCount);
      }
      if (hasCompleteSceneList) {
        output.WriteString(28, field_names[6], CompleteSceneList);
      }
      if (hasCompleteSceneNumber) {
        output.WriteString(29, field_names[7], CompleteSceneNumber);
      }
      if (hasLastResetSceneCountTime) {
        output.WriteString(30, field_names[31], LastResetSceneCountTime);
      }
      if (hasVigor) {
        output.WriteInt32(31, field_names[41], Vigor);
      }
      if (hasLastAddVigorTimestamp) {
        output.WriteDouble(32, field_names[22], LastAddVigorTimestamp);
      }
      if (hasUsedStamina) {
        output.WriteInt32(33, field_names[40], UsedStamina);
      }
      if (hasDayRestSignCount) {
        output.WriteInt32(34, field_names[8], DayRestSignCount);
      }
      if (hasLastResetDaySignCountTime) {
        output.WriteString(35, field_names[26], LastResetDaySignCountTime);
      }
      if (hasMonthSignCount) {
        output.WriteInt32(36, field_names[37], MonthSignCount);
      }
      if (hasLastResetMonthSignCountTime) {
        output.WriteString(37, field_names[30], LastResetMonthSignCountTime);
      }
      if (hasMonthCardExpireTime) {
        output.WriteString(38, field_names[36], MonthCardExpireTime);
      }
      if (hasGowHistroyTimeList) {
        output.WriteString(39, field_names[15], GowHistroyTimeList);
      }
      if (hasGowHistroyEloList) {
        output.WriteString(40, field_names[14], GowHistroyEloList);
      }
      if (hasIsWeeklyLoginRewarded) {
        output.WriteBool(41, field_names[20], IsWeeklyLoginRewarded);
      }
      if (hasWeeklyLoginRewardList) {
        output.WriteString(42, field_names[42], WeeklyLoginRewardList);
      }
      if (hasLastResetWeeklyLoginRewardTime) {
        output.WriteString(43, field_names[34], LastResetWeeklyLoginRewardTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, Guid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsValid);
        }
        if (hasGowElo) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, GowElo);
        }
        if (hasGowMatches) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, GowMatches);
        }
        if (hasGowWinMatches) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, GowWinMatches);
        }
        if (hasStamina) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Stamina);
        }
        if (hasBuyStaminaCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, BuyStaminaCount);
        }
        if (hasLastAddStaminaTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, LastAddStaminaTimestamp);
        }
        if (hasBuyMoneyCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, BuyMoneyCount);
        }
        if (hasLastBuyMoneyTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(10, LastBuyMoneyTimestamp);
        }
        if (hasSellIncome) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, SellIncome);
        }
        if (hasLastSellTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(12, LastSellTimestamp);
        }
        if (hasLastResetStaminaTime) {
          size += pb::CodedOutputStream.ComputeStringSize(13, LastResetStaminaTime);
        }
        if (hasLastResetMidasTouchTime) {
          size += pb::CodedOutputStream.ComputeStringSize(14, LastResetMidasTouchTime);
        }
        if (hasLastResetSellTime) {
          size += pb::CodedOutputStream.ComputeStringSize(15, LastResetSellTime);
        }
        if (hasLastResetDailyMissionTime) {
          size += pb::CodedOutputStream.ComputeStringSize(16, LastResetDailyMissionTime);
        }
        if (hasActivePartnerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(17, ActivePartnerId);
        }
        if (hasAttemptAward) {
          size += pb::CodedOutputStream.ComputeInt32Size(18, AttemptAward);
        }
        if (hasAttemptCurAcceptedCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, AttemptCurAcceptedCount);
        }
        if (hasAttemptAcceptedAward) {
          size += pb::CodedOutputStream.ComputeInt32Size(20, AttemptAcceptedAward);
        }
        if (hasLastResetAttemptAwardCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(21, LastResetAttemptAwardCountTime);
        }
        if (hasGoldTollgateCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(22, GoldTollgateCount);
        }
        if (hasLastResetGoldTollgateCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(23, LastResetGoldTollgateCountTime);
        }
        if (hasExchangeGoodList) {
          size += pb::CodedOutputStream.ComputeStringSize(24, ExchangeGoodList);
        }
        if (hasExchangeGoodNumber) {
          size += pb::CodedOutputStream.ComputeStringSize(25, ExchangeGoodNumber);
        }
        if (hasLastResetExchangeGoodTime) {
          size += pb::CodedOutputStream.ComputeStringSize(26, LastResetExchangeGoodTime);
        }
        if (hasExchangeGoodRefreshCount) {
          size += pb::CodedOutputStream.ComputeStringSize(27, ExchangeGoodRefreshCount);
        }
        if (hasCompleteSceneList) {
          size += pb::CodedOutputStream.ComputeStringSize(28, CompleteSceneList);
        }
        if (hasCompleteSceneNumber) {
          size += pb::CodedOutputStream.ComputeStringSize(29, CompleteSceneNumber);
        }
        if (hasLastResetSceneCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(30, LastResetSceneCountTime);
        }
        if (hasVigor) {
          size += pb::CodedOutputStream.ComputeInt32Size(31, Vigor);
        }
        if (hasLastAddVigorTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(32, LastAddVigorTimestamp);
        }
        if (hasUsedStamina) {
          size += pb::CodedOutputStream.ComputeInt32Size(33, UsedStamina);
        }
        if (hasDayRestSignCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(34, DayRestSignCount);
        }
        if (hasLastResetDaySignCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(35, LastResetDaySignCountTime);
        }
        if (hasMonthSignCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(36, MonthSignCount);
        }
        if (hasLastResetMonthSignCountTime) {
          size += pb::CodedOutputStream.ComputeStringSize(37, LastResetMonthSignCountTime);
        }
        if (hasMonthCardExpireTime) {
          size += pb::CodedOutputStream.ComputeStringSize(38, MonthCardExpireTime);
        }
        if (hasGowHistroyTimeList) {
          size += pb::CodedOutputStream.ComputeStringSize(39, GowHistroyTimeList);
        }
        if (hasGowHistroyEloList) {
          size += pb::CodedOutputStream.ComputeStringSize(40, GowHistroyEloList);
        }
        if (hasIsWeeklyLoginRewarded) {
          size += pb::CodedOutputStream.ComputeBoolSize(41, IsWeeklyLoginRewarded);
        }
        if (hasWeeklyLoginRewardList) {
          size += pb::CodedOutputStream.ComputeStringSize(42, WeeklyLoginRewardList);
        }
        if (hasLastResetWeeklyLoginRewardTime) {
          size += pb::CodedOutputStream.ComputeStringSize(43, LastResetWeeklyLoginRewardTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_UserInfoExtra ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_UserInfoExtra ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_UserInfoExtra ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_UserInfoExtra MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_UserInfoExtra prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_UserInfoExtra, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_UserInfoExtra cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_UserInfoExtra result;
      
      private DS_UserInfoExtra PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_UserInfoExtra original = result;
          result = new DS_UserInfoExtra();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_UserInfoExtra MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_UserInfoExtra.Descriptor; }
      }
      
      public override DS_UserInfoExtra DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_UserInfoExtra.DefaultInstance; }
      }
      
      public override DS_UserInfoExtra BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_UserInfoExtra) {
          return MergeFrom((DS_UserInfoExtra) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_UserInfoExtra other) {
        if (other == global::DashFire.DataStore.DS_UserInfoExtra.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasGowElo) {
          GowElo = other.GowElo;
        }
        if (other.HasGowMatches) {
          GowMatches = other.GowMatches;
        }
        if (other.HasGowWinMatches) {
          GowWinMatches = other.GowWinMatches;
        }
        if (other.HasStamina) {
          Stamina = other.Stamina;
        }
        if (other.HasBuyStaminaCount) {
          BuyStaminaCount = other.BuyStaminaCount;
        }
        if (other.HasLastAddStaminaTimestamp) {
          LastAddStaminaTimestamp = other.LastAddStaminaTimestamp;
        }
        if (other.HasBuyMoneyCount) {
          BuyMoneyCount = other.BuyMoneyCount;
        }
        if (other.HasLastBuyMoneyTimestamp) {
          LastBuyMoneyTimestamp = other.LastBuyMoneyTimestamp;
        }
        if (other.HasSellIncome) {
          SellIncome = other.SellIncome;
        }
        if (other.HasLastSellTimestamp) {
          LastSellTimestamp = other.LastSellTimestamp;
        }
        if (other.HasLastResetStaminaTime) {
          LastResetStaminaTime = other.LastResetStaminaTime;
        }
        if (other.HasLastResetMidasTouchTime) {
          LastResetMidasTouchTime = other.LastResetMidasTouchTime;
        }
        if (other.HasLastResetSellTime) {
          LastResetSellTime = other.LastResetSellTime;
        }
        if (other.HasLastResetDailyMissionTime) {
          LastResetDailyMissionTime = other.LastResetDailyMissionTime;
        }
        if (other.HasActivePartnerId) {
          ActivePartnerId = other.ActivePartnerId;
        }
        if (other.HasAttemptAward) {
          AttemptAward = other.AttemptAward;
        }
        if (other.HasAttemptCurAcceptedCount) {
          AttemptCurAcceptedCount = other.AttemptCurAcceptedCount;
        }
        if (other.HasAttemptAcceptedAward) {
          AttemptAcceptedAward = other.AttemptAcceptedAward;
        }
        if (other.HasLastResetAttemptAwardCountTime) {
          LastResetAttemptAwardCountTime = other.LastResetAttemptAwardCountTime;
        }
        if (other.HasGoldTollgateCount) {
          GoldTollgateCount = other.GoldTollgateCount;
        }
        if (other.HasLastResetGoldTollgateCountTime) {
          LastResetGoldTollgateCountTime = other.LastResetGoldTollgateCountTime;
        }
        if (other.HasExchangeGoodList) {
          ExchangeGoodList = other.ExchangeGoodList;
        }
        if (other.HasExchangeGoodNumber) {
          ExchangeGoodNumber = other.ExchangeGoodNumber;
        }
        if (other.HasLastResetExchangeGoodTime) {
          LastResetExchangeGoodTime = other.LastResetExchangeGoodTime;
        }
        if (other.HasExchangeGoodRefreshCount) {
          ExchangeGoodRefreshCount = other.ExchangeGoodRefreshCount;
        }
        if (other.HasCompleteSceneList) {
          CompleteSceneList = other.CompleteSceneList;
        }
        if (other.HasCompleteSceneNumber) {
          CompleteSceneNumber = other.CompleteSceneNumber;
        }
        if (other.HasLastResetSceneCountTime) {
          LastResetSceneCountTime = other.LastResetSceneCountTime;
        }
        if (other.HasVigor) {
          Vigor = other.Vigor;
        }
        if (other.HasLastAddVigorTimestamp) {
          LastAddVigorTimestamp = other.LastAddVigorTimestamp;
        }
        if (other.HasUsedStamina) {
          UsedStamina = other.UsedStamina;
        }
        if (other.HasDayRestSignCount) {
          DayRestSignCount = other.DayRestSignCount;
        }
        if (other.HasLastResetDaySignCountTime) {
          LastResetDaySignCountTime = other.LastResetDaySignCountTime;
        }
        if (other.HasMonthSignCount) {
          MonthSignCount = other.MonthSignCount;
        }
        if (other.HasLastResetMonthSignCountTime) {
          LastResetMonthSignCountTime = other.LastResetMonthSignCountTime;
        }
        if (other.HasMonthCardExpireTime) {
          MonthCardExpireTime = other.MonthCardExpireTime;
        }
        if (other.HasGowHistroyTimeList) {
          GowHistroyTimeList = other.GowHistroyTimeList;
        }
        if (other.HasGowHistroyEloList) {
          GowHistroyEloList = other.GowHistroyEloList;
        }
        if (other.HasIsWeeklyLoginRewarded) {
          IsWeeklyLoginRewarded = other.IsWeeklyLoginRewarded;
        }
        if (other.HasWeeklyLoginRewardList) {
          WeeklyLoginRewardList = other.WeeklyLoginRewardList;
        }
        if (other.HasLastResetWeeklyLoginRewardTime) {
          LastResetWeeklyLoginRewardTime = other.LastResetWeeklyLoginRewardTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSUserInfoExtraFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSUserInfoExtraFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGuid = input.ReadInt64(ref result.guid_);
              break;
            }
            case 16: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 24: {
              result.hasGowElo = input.ReadInt32(ref result.gowElo_);
              break;
            }
            case 32: {
              result.hasGowMatches = input.ReadInt32(ref result.gowMatches_);
              break;
            }
            case 40: {
              result.hasGowWinMatches = input.ReadInt32(ref result.gowWinMatches_);
              break;
            }
            case 48: {
              result.hasStamina = input.ReadInt32(ref result.stamina_);
              break;
            }
            case 56: {
              result.hasBuyStaminaCount = input.ReadInt32(ref result.buyStaminaCount_);
              break;
            }
            case 65: {
              result.hasLastAddStaminaTimestamp = input.ReadDouble(ref result.lastAddStaminaTimestamp_);
              break;
            }
            case 72: {
              result.hasBuyMoneyCount = input.ReadInt32(ref result.buyMoneyCount_);
              break;
            }
            case 81: {
              result.hasLastBuyMoneyTimestamp = input.ReadDouble(ref result.lastBuyMoneyTimestamp_);
              break;
            }
            case 88: {
              result.hasSellIncome = input.ReadInt32(ref result.sellIncome_);
              break;
            }
            case 97: {
              result.hasLastSellTimestamp = input.ReadDouble(ref result.lastSellTimestamp_);
              break;
            }
            case 106: {
              result.hasLastResetStaminaTime = input.ReadString(ref result.lastResetStaminaTime_);
              break;
            }
            case 114: {
              result.hasLastResetMidasTouchTime = input.ReadString(ref result.lastResetMidasTouchTime_);
              break;
            }
            case 122: {
              result.hasLastResetSellTime = input.ReadString(ref result.lastResetSellTime_);
              break;
            }
            case 130: {
              result.hasLastResetDailyMissionTime = input.ReadString(ref result.lastResetDailyMissionTime_);
              break;
            }
            case 136: {
              result.hasActivePartnerId = input.ReadInt32(ref result.activePartnerId_);
              break;
            }
            case 144: {
              result.hasAttemptAward = input.ReadInt32(ref result.attemptAward_);
              break;
            }
            case 152: {
              result.hasAttemptCurAcceptedCount = input.ReadInt32(ref result.attemptCurAcceptedCount_);
              break;
            }
            case 160: {
              result.hasAttemptAcceptedAward = input.ReadInt32(ref result.attemptAcceptedAward_);
              break;
            }
            case 170: {
              result.hasLastResetAttemptAwardCountTime = input.ReadString(ref result.lastResetAttemptAwardCountTime_);
              break;
            }
            case 176: {
              result.hasGoldTollgateCount = input.ReadInt32(ref result.goldTollgateCount_);
              break;
            }
            case 186: {
              result.hasLastResetGoldTollgateCountTime = input.ReadString(ref result.lastResetGoldTollgateCountTime_);
              break;
            }
            case 194: {
              result.hasExchangeGoodList = input.ReadString(ref result.exchangeGoodList_);
              break;
            }
            case 202: {
              result.hasExchangeGoodNumber = input.ReadString(ref result.exchangeGoodNumber_);
              break;
            }
            case 210: {
              result.hasLastResetExchangeGoodTime = input.ReadString(ref result.lastResetExchangeGoodTime_);
              break;
            }
            case 218: {
              result.hasExchangeGoodRefreshCount = input.ReadString(ref result.exchangeGoodRefreshCount_);
              break;
            }
            case 226: {
              result.hasCompleteSceneList = input.ReadString(ref result.completeSceneList_);
              break;
            }
            case 234: {
              result.hasCompleteSceneNumber = input.ReadString(ref result.completeSceneNumber_);
              break;
            }
            case 242: {
              result.hasLastResetSceneCountTime = input.ReadString(ref result.lastResetSceneCountTime_);
              break;
            }
            case 248: {
              result.hasVigor = input.ReadInt32(ref result.vigor_);
              break;
            }
            case 257: {
              result.hasLastAddVigorTimestamp = input.ReadDouble(ref result.lastAddVigorTimestamp_);
              break;
            }
            case 264: {
              result.hasUsedStamina = input.ReadInt32(ref result.usedStamina_);
              break;
            }
            case 272: {
              result.hasDayRestSignCount = input.ReadInt32(ref result.dayRestSignCount_);
              break;
            }
            case 282: {
              result.hasLastResetDaySignCountTime = input.ReadString(ref result.lastResetDaySignCountTime_);
              break;
            }
            case 288: {
              result.hasMonthSignCount = input.ReadInt32(ref result.monthSignCount_);
              break;
            }
            case 298: {
              result.hasLastResetMonthSignCountTime = input.ReadString(ref result.lastResetMonthSignCountTime_);
              break;
            }
            case 306: {
              result.hasMonthCardExpireTime = input.ReadString(ref result.monthCardExpireTime_);
              break;
            }
            case 314: {
              result.hasGowHistroyTimeList = input.ReadString(ref result.gowHistroyTimeList_);
              break;
            }
            case 322: {
              result.hasGowHistroyEloList = input.ReadString(ref result.gowHistroyEloList_);
              break;
            }
            case 328: {
              result.hasIsWeeklyLoginRewarded = input.ReadBool(ref result.isWeeklyLoginRewarded_);
              break;
            }
            case 338: {
              result.hasWeeklyLoginRewardList = input.ReadString(ref result.weeklyLoginRewardList_);
              break;
            }
            case 346: {
              result.hasLastResetWeeklyLoginRewardTime = input.ReadString(ref result.lastResetWeeklyLoginRewardTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public long Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(long value) {
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasGowElo {
        get { return result.hasGowElo; }
      }
      public int GowElo {
        get { return result.GowElo; }
        set { SetGowElo(value); }
      }
      public Builder SetGowElo(int value) {
        PrepareBuilder();
        result.hasGowElo = true;
        result.gowElo_ = value;
        return this;
      }
      public Builder ClearGowElo() {
        PrepareBuilder();
        result.hasGowElo = false;
        result.gowElo_ = 0;
        return this;
      }
      
      public bool HasGowMatches {
        get { return result.hasGowMatches; }
      }
      public int GowMatches {
        get { return result.GowMatches; }
        set { SetGowMatches(value); }
      }
      public Builder SetGowMatches(int value) {
        PrepareBuilder();
        result.hasGowMatches = true;
        result.gowMatches_ = value;
        return this;
      }
      public Builder ClearGowMatches() {
        PrepareBuilder();
        result.hasGowMatches = false;
        result.gowMatches_ = 0;
        return this;
      }
      
      public bool HasGowWinMatches {
        get { return result.hasGowWinMatches; }
      }
      public int GowWinMatches {
        get { return result.GowWinMatches; }
        set { SetGowWinMatches(value); }
      }
      public Builder SetGowWinMatches(int value) {
        PrepareBuilder();
        result.hasGowWinMatches = true;
        result.gowWinMatches_ = value;
        return this;
      }
      public Builder ClearGowWinMatches() {
        PrepareBuilder();
        result.hasGowWinMatches = false;
        result.gowWinMatches_ = 0;
        return this;
      }
      
      public bool HasStamina {
        get { return result.hasStamina; }
      }
      public int Stamina {
        get { return result.Stamina; }
        set { SetStamina(value); }
      }
      public Builder SetStamina(int value) {
        PrepareBuilder();
        result.hasStamina = true;
        result.stamina_ = value;
        return this;
      }
      public Builder ClearStamina() {
        PrepareBuilder();
        result.hasStamina = false;
        result.stamina_ = 0;
        return this;
      }
      
      public bool HasBuyStaminaCount {
        get { return result.hasBuyStaminaCount; }
      }
      public int BuyStaminaCount {
        get { return result.BuyStaminaCount; }
        set { SetBuyStaminaCount(value); }
      }
      public Builder SetBuyStaminaCount(int value) {
        PrepareBuilder();
        result.hasBuyStaminaCount = true;
        result.buyStaminaCount_ = value;
        return this;
      }
      public Builder ClearBuyStaminaCount() {
        PrepareBuilder();
        result.hasBuyStaminaCount = false;
        result.buyStaminaCount_ = 0;
        return this;
      }
      
      public bool HasLastAddStaminaTimestamp {
        get { return result.hasLastAddStaminaTimestamp; }
      }
      public double LastAddStaminaTimestamp {
        get { return result.LastAddStaminaTimestamp; }
        set { SetLastAddStaminaTimestamp(value); }
      }
      public Builder SetLastAddStaminaTimestamp(double value) {
        PrepareBuilder();
        result.hasLastAddStaminaTimestamp = true;
        result.lastAddStaminaTimestamp_ = value;
        return this;
      }
      public Builder ClearLastAddStaminaTimestamp() {
        PrepareBuilder();
        result.hasLastAddStaminaTimestamp = false;
        result.lastAddStaminaTimestamp_ = 0D;
        return this;
      }
      
      public bool HasBuyMoneyCount {
        get { return result.hasBuyMoneyCount; }
      }
      public int BuyMoneyCount {
        get { return result.BuyMoneyCount; }
        set { SetBuyMoneyCount(value); }
      }
      public Builder SetBuyMoneyCount(int value) {
        PrepareBuilder();
        result.hasBuyMoneyCount = true;
        result.buyMoneyCount_ = value;
        return this;
      }
      public Builder ClearBuyMoneyCount() {
        PrepareBuilder();
        result.hasBuyMoneyCount = false;
        result.buyMoneyCount_ = 0;
        return this;
      }
      
      public bool HasLastBuyMoneyTimestamp {
        get { return result.hasLastBuyMoneyTimestamp; }
      }
      public double LastBuyMoneyTimestamp {
        get { return result.LastBuyMoneyTimestamp; }
        set { SetLastBuyMoneyTimestamp(value); }
      }
      public Builder SetLastBuyMoneyTimestamp(double value) {
        PrepareBuilder();
        result.hasLastBuyMoneyTimestamp = true;
        result.lastBuyMoneyTimestamp_ = value;
        return this;
      }
      public Builder ClearLastBuyMoneyTimestamp() {
        PrepareBuilder();
        result.hasLastBuyMoneyTimestamp = false;
        result.lastBuyMoneyTimestamp_ = 0D;
        return this;
      }
      
      public bool HasSellIncome {
        get { return result.hasSellIncome; }
      }
      public int SellIncome {
        get { return result.SellIncome; }
        set { SetSellIncome(value); }
      }
      public Builder SetSellIncome(int value) {
        PrepareBuilder();
        result.hasSellIncome = true;
        result.sellIncome_ = value;
        return this;
      }
      public Builder ClearSellIncome() {
        PrepareBuilder();
        result.hasSellIncome = false;
        result.sellIncome_ = 0;
        return this;
      }
      
      public bool HasLastSellTimestamp {
        get { return result.hasLastSellTimestamp; }
      }
      public double LastSellTimestamp {
        get { return result.LastSellTimestamp; }
        set { SetLastSellTimestamp(value); }
      }
      public Builder SetLastSellTimestamp(double value) {
        PrepareBuilder();
        result.hasLastSellTimestamp = true;
        result.lastSellTimestamp_ = value;
        return this;
      }
      public Builder ClearLastSellTimestamp() {
        PrepareBuilder();
        result.hasLastSellTimestamp = false;
        result.lastSellTimestamp_ = 0D;
        return this;
      }
      
      public bool HasLastResetStaminaTime {
        get { return result.hasLastResetStaminaTime; }
      }
      public string LastResetStaminaTime {
        get { return result.LastResetStaminaTime; }
        set { SetLastResetStaminaTime(value); }
      }
      public Builder SetLastResetStaminaTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetStaminaTime = true;
        result.lastResetStaminaTime_ = value;
        return this;
      }
      public Builder ClearLastResetStaminaTime() {
        PrepareBuilder();
        result.hasLastResetStaminaTime = false;
        result.lastResetStaminaTime_ = "";
        return this;
      }
      
      public bool HasLastResetMidasTouchTime {
        get { return result.hasLastResetMidasTouchTime; }
      }
      public string LastResetMidasTouchTime {
        get { return result.LastResetMidasTouchTime; }
        set { SetLastResetMidasTouchTime(value); }
      }
      public Builder SetLastResetMidasTouchTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetMidasTouchTime = true;
        result.lastResetMidasTouchTime_ = value;
        return this;
      }
      public Builder ClearLastResetMidasTouchTime() {
        PrepareBuilder();
        result.hasLastResetMidasTouchTime = false;
        result.lastResetMidasTouchTime_ = "";
        return this;
      }
      
      public bool HasLastResetSellTime {
        get { return result.hasLastResetSellTime; }
      }
      public string LastResetSellTime {
        get { return result.LastResetSellTime; }
        set { SetLastResetSellTime(value); }
      }
      public Builder SetLastResetSellTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetSellTime = true;
        result.lastResetSellTime_ = value;
        return this;
      }
      public Builder ClearLastResetSellTime() {
        PrepareBuilder();
        result.hasLastResetSellTime = false;
        result.lastResetSellTime_ = "";
        return this;
      }
      
      public bool HasLastResetDailyMissionTime {
        get { return result.hasLastResetDailyMissionTime; }
      }
      public string LastResetDailyMissionTime {
        get { return result.LastResetDailyMissionTime; }
        set { SetLastResetDailyMissionTime(value); }
      }
      public Builder SetLastResetDailyMissionTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetDailyMissionTime = true;
        result.lastResetDailyMissionTime_ = value;
        return this;
      }
      public Builder ClearLastResetDailyMissionTime() {
        PrepareBuilder();
        result.hasLastResetDailyMissionTime = false;
        result.lastResetDailyMissionTime_ = "";
        return this;
      }
      
      public bool HasActivePartnerId {
        get { return result.hasActivePartnerId; }
      }
      public int ActivePartnerId {
        get { return result.ActivePartnerId; }
        set { SetActivePartnerId(value); }
      }
      public Builder SetActivePartnerId(int value) {
        PrepareBuilder();
        result.hasActivePartnerId = true;
        result.activePartnerId_ = value;
        return this;
      }
      public Builder ClearActivePartnerId() {
        PrepareBuilder();
        result.hasActivePartnerId = false;
        result.activePartnerId_ = 0;
        return this;
      }
      
      public bool HasAttemptAward {
        get { return result.hasAttemptAward; }
      }
      public int AttemptAward {
        get { return result.AttemptAward; }
        set { SetAttemptAward(value); }
      }
      public Builder SetAttemptAward(int value) {
        PrepareBuilder();
        result.hasAttemptAward = true;
        result.attemptAward_ = value;
        return this;
      }
      public Builder ClearAttemptAward() {
        PrepareBuilder();
        result.hasAttemptAward = false;
        result.attemptAward_ = 0;
        return this;
      }
      
      public bool HasAttemptCurAcceptedCount {
        get { return result.hasAttemptCurAcceptedCount; }
      }
      public int AttemptCurAcceptedCount {
        get { return result.AttemptCurAcceptedCount; }
        set { SetAttemptCurAcceptedCount(value); }
      }
      public Builder SetAttemptCurAcceptedCount(int value) {
        PrepareBuilder();
        result.hasAttemptCurAcceptedCount = true;
        result.attemptCurAcceptedCount_ = value;
        return this;
      }
      public Builder ClearAttemptCurAcceptedCount() {
        PrepareBuilder();
        result.hasAttemptCurAcceptedCount = false;
        result.attemptCurAcceptedCount_ = 0;
        return this;
      }
      
      public bool HasAttemptAcceptedAward {
        get { return result.hasAttemptAcceptedAward; }
      }
      public int AttemptAcceptedAward {
        get { return result.AttemptAcceptedAward; }
        set { SetAttemptAcceptedAward(value); }
      }
      public Builder SetAttemptAcceptedAward(int value) {
        PrepareBuilder();
        result.hasAttemptAcceptedAward = true;
        result.attemptAcceptedAward_ = value;
        return this;
      }
      public Builder ClearAttemptAcceptedAward() {
        PrepareBuilder();
        result.hasAttemptAcceptedAward = false;
        result.attemptAcceptedAward_ = 0;
        return this;
      }
      
      public bool HasLastResetAttemptAwardCountTime {
        get { return result.hasLastResetAttemptAwardCountTime; }
      }
      public string LastResetAttemptAwardCountTime {
        get { return result.LastResetAttemptAwardCountTime; }
        set { SetLastResetAttemptAwardCountTime(value); }
      }
      public Builder SetLastResetAttemptAwardCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetAttemptAwardCountTime = true;
        result.lastResetAttemptAwardCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetAttemptAwardCountTime() {
        PrepareBuilder();
        result.hasLastResetAttemptAwardCountTime = false;
        result.lastResetAttemptAwardCountTime_ = "";
        return this;
      }
      
      public bool HasGoldTollgateCount {
        get { return result.hasGoldTollgateCount; }
      }
      public int GoldTollgateCount {
        get { return result.GoldTollgateCount; }
        set { SetGoldTollgateCount(value); }
      }
      public Builder SetGoldTollgateCount(int value) {
        PrepareBuilder();
        result.hasGoldTollgateCount = true;
        result.goldTollgateCount_ = value;
        return this;
      }
      public Builder ClearGoldTollgateCount() {
        PrepareBuilder();
        result.hasGoldTollgateCount = false;
        result.goldTollgateCount_ = 0;
        return this;
      }
      
      public bool HasLastResetGoldTollgateCountTime {
        get { return result.hasLastResetGoldTollgateCountTime; }
      }
      public string LastResetGoldTollgateCountTime {
        get { return result.LastResetGoldTollgateCountTime; }
        set { SetLastResetGoldTollgateCountTime(value); }
      }
      public Builder SetLastResetGoldTollgateCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetGoldTollgateCountTime = true;
        result.lastResetGoldTollgateCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetGoldTollgateCountTime() {
        PrepareBuilder();
        result.hasLastResetGoldTollgateCountTime = false;
        result.lastResetGoldTollgateCountTime_ = "";
        return this;
      }
      
      public bool HasExchangeGoodList {
        get { return result.hasExchangeGoodList; }
      }
      public string ExchangeGoodList {
        get { return result.ExchangeGoodList; }
        set { SetExchangeGoodList(value); }
      }
      public Builder SetExchangeGoodList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeGoodList = true;
        result.exchangeGoodList_ = value;
        return this;
      }
      public Builder ClearExchangeGoodList() {
        PrepareBuilder();
        result.hasExchangeGoodList = false;
        result.exchangeGoodList_ = "";
        return this;
      }
      
      public bool HasExchangeGoodNumber {
        get { return result.hasExchangeGoodNumber; }
      }
      public string ExchangeGoodNumber {
        get { return result.ExchangeGoodNumber; }
        set { SetExchangeGoodNumber(value); }
      }
      public Builder SetExchangeGoodNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeGoodNumber = true;
        result.exchangeGoodNumber_ = value;
        return this;
      }
      public Builder ClearExchangeGoodNumber() {
        PrepareBuilder();
        result.hasExchangeGoodNumber = false;
        result.exchangeGoodNumber_ = "";
        return this;
      }
      
      public bool HasLastResetExchangeGoodTime {
        get { return result.hasLastResetExchangeGoodTime; }
      }
      public string LastResetExchangeGoodTime {
        get { return result.LastResetExchangeGoodTime; }
        set { SetLastResetExchangeGoodTime(value); }
      }
      public Builder SetLastResetExchangeGoodTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetExchangeGoodTime = true;
        result.lastResetExchangeGoodTime_ = value;
        return this;
      }
      public Builder ClearLastResetExchangeGoodTime() {
        PrepareBuilder();
        result.hasLastResetExchangeGoodTime = false;
        result.lastResetExchangeGoodTime_ = "";
        return this;
      }
      
      public bool HasExchangeGoodRefreshCount {
        get { return result.hasExchangeGoodRefreshCount; }
      }
      public string ExchangeGoodRefreshCount {
        get { return result.ExchangeGoodRefreshCount; }
        set { SetExchangeGoodRefreshCount(value); }
      }
      public Builder SetExchangeGoodRefreshCount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeGoodRefreshCount = true;
        result.exchangeGoodRefreshCount_ = value;
        return this;
      }
      public Builder ClearExchangeGoodRefreshCount() {
        PrepareBuilder();
        result.hasExchangeGoodRefreshCount = false;
        result.exchangeGoodRefreshCount_ = "";
        return this;
      }
      
      public bool HasCompleteSceneList {
        get { return result.hasCompleteSceneList; }
      }
      public string CompleteSceneList {
        get { return result.CompleteSceneList; }
        set { SetCompleteSceneList(value); }
      }
      public Builder SetCompleteSceneList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompleteSceneList = true;
        result.completeSceneList_ = value;
        return this;
      }
      public Builder ClearCompleteSceneList() {
        PrepareBuilder();
        result.hasCompleteSceneList = false;
        result.completeSceneList_ = "";
        return this;
      }
      
      public bool HasCompleteSceneNumber {
        get { return result.hasCompleteSceneNumber; }
      }
      public string CompleteSceneNumber {
        get { return result.CompleteSceneNumber; }
        set { SetCompleteSceneNumber(value); }
      }
      public Builder SetCompleteSceneNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompleteSceneNumber = true;
        result.completeSceneNumber_ = value;
        return this;
      }
      public Builder ClearCompleteSceneNumber() {
        PrepareBuilder();
        result.hasCompleteSceneNumber = false;
        result.completeSceneNumber_ = "";
        return this;
      }
      
      public bool HasLastResetSceneCountTime {
        get { return result.hasLastResetSceneCountTime; }
      }
      public string LastResetSceneCountTime {
        get { return result.LastResetSceneCountTime; }
        set { SetLastResetSceneCountTime(value); }
      }
      public Builder SetLastResetSceneCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetSceneCountTime = true;
        result.lastResetSceneCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetSceneCountTime() {
        PrepareBuilder();
        result.hasLastResetSceneCountTime = false;
        result.lastResetSceneCountTime_ = "";
        return this;
      }
      
      public bool HasVigor {
        get { return result.hasVigor; }
      }
      public int Vigor {
        get { return result.Vigor; }
        set { SetVigor(value); }
      }
      public Builder SetVigor(int value) {
        PrepareBuilder();
        result.hasVigor = true;
        result.vigor_ = value;
        return this;
      }
      public Builder ClearVigor() {
        PrepareBuilder();
        result.hasVigor = false;
        result.vigor_ = 0;
        return this;
      }
      
      public bool HasLastAddVigorTimestamp {
        get { return result.hasLastAddVigorTimestamp; }
      }
      public double LastAddVigorTimestamp {
        get { return result.LastAddVigorTimestamp; }
        set { SetLastAddVigorTimestamp(value); }
      }
      public Builder SetLastAddVigorTimestamp(double value) {
        PrepareBuilder();
        result.hasLastAddVigorTimestamp = true;
        result.lastAddVigorTimestamp_ = value;
        return this;
      }
      public Builder ClearLastAddVigorTimestamp() {
        PrepareBuilder();
        result.hasLastAddVigorTimestamp = false;
        result.lastAddVigorTimestamp_ = 0D;
        return this;
      }
      
      public bool HasUsedStamina {
        get { return result.hasUsedStamina; }
      }
      public int UsedStamina {
        get { return result.UsedStamina; }
        set { SetUsedStamina(value); }
      }
      public Builder SetUsedStamina(int value) {
        PrepareBuilder();
        result.hasUsedStamina = true;
        result.usedStamina_ = value;
        return this;
      }
      public Builder ClearUsedStamina() {
        PrepareBuilder();
        result.hasUsedStamina = false;
        result.usedStamina_ = 0;
        return this;
      }
      
      public bool HasDayRestSignCount {
        get { return result.hasDayRestSignCount; }
      }
      public int DayRestSignCount {
        get { return result.DayRestSignCount; }
        set { SetDayRestSignCount(value); }
      }
      public Builder SetDayRestSignCount(int value) {
        PrepareBuilder();
        result.hasDayRestSignCount = true;
        result.dayRestSignCount_ = value;
        return this;
      }
      public Builder ClearDayRestSignCount() {
        PrepareBuilder();
        result.hasDayRestSignCount = false;
        result.dayRestSignCount_ = 0;
        return this;
      }
      
      public bool HasLastResetDaySignCountTime {
        get { return result.hasLastResetDaySignCountTime; }
      }
      public string LastResetDaySignCountTime {
        get { return result.LastResetDaySignCountTime; }
        set { SetLastResetDaySignCountTime(value); }
      }
      public Builder SetLastResetDaySignCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetDaySignCountTime = true;
        result.lastResetDaySignCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetDaySignCountTime() {
        PrepareBuilder();
        result.hasLastResetDaySignCountTime = false;
        result.lastResetDaySignCountTime_ = "";
        return this;
      }
      
      public bool HasMonthSignCount {
        get { return result.hasMonthSignCount; }
      }
      public int MonthSignCount {
        get { return result.MonthSignCount; }
        set { SetMonthSignCount(value); }
      }
      public Builder SetMonthSignCount(int value) {
        PrepareBuilder();
        result.hasMonthSignCount = true;
        result.monthSignCount_ = value;
        return this;
      }
      public Builder ClearMonthSignCount() {
        PrepareBuilder();
        result.hasMonthSignCount = false;
        result.monthSignCount_ = 0;
        return this;
      }
      
      public bool HasLastResetMonthSignCountTime {
        get { return result.hasLastResetMonthSignCountTime; }
      }
      public string LastResetMonthSignCountTime {
        get { return result.LastResetMonthSignCountTime; }
        set { SetLastResetMonthSignCountTime(value); }
      }
      public Builder SetLastResetMonthSignCountTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetMonthSignCountTime = true;
        result.lastResetMonthSignCountTime_ = value;
        return this;
      }
      public Builder ClearLastResetMonthSignCountTime() {
        PrepareBuilder();
        result.hasLastResetMonthSignCountTime = false;
        result.lastResetMonthSignCountTime_ = "";
        return this;
      }
      
      public bool HasMonthCardExpireTime {
        get { return result.hasMonthCardExpireTime; }
      }
      public string MonthCardExpireTime {
        get { return result.MonthCardExpireTime; }
        set { SetMonthCardExpireTime(value); }
      }
      public Builder SetMonthCardExpireTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMonthCardExpireTime = true;
        result.monthCardExpireTime_ = value;
        return this;
      }
      public Builder ClearMonthCardExpireTime() {
        PrepareBuilder();
        result.hasMonthCardExpireTime = false;
        result.monthCardExpireTime_ = "";
        return this;
      }
      
      public bool HasGowHistroyTimeList {
        get { return result.hasGowHistroyTimeList; }
      }
      public string GowHistroyTimeList {
        get { return result.GowHistroyTimeList; }
        set { SetGowHistroyTimeList(value); }
      }
      public Builder SetGowHistroyTimeList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGowHistroyTimeList = true;
        result.gowHistroyTimeList_ = value;
        return this;
      }
      public Builder ClearGowHistroyTimeList() {
        PrepareBuilder();
        result.hasGowHistroyTimeList = false;
        result.gowHistroyTimeList_ = "";
        return this;
      }
      
      public bool HasGowHistroyEloList {
        get { return result.hasGowHistroyEloList; }
      }
      public string GowHistroyEloList {
        get { return result.GowHistroyEloList; }
        set { SetGowHistroyEloList(value); }
      }
      public Builder SetGowHistroyEloList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGowHistroyEloList = true;
        result.gowHistroyEloList_ = value;
        return this;
      }
      public Builder ClearGowHistroyEloList() {
        PrepareBuilder();
        result.hasGowHistroyEloList = false;
        result.gowHistroyEloList_ = "";
        return this;
      }
      
      public bool HasIsWeeklyLoginRewarded {
        get { return result.hasIsWeeklyLoginRewarded; }
      }
      public bool IsWeeklyLoginRewarded {
        get { return result.IsWeeklyLoginRewarded; }
        set { SetIsWeeklyLoginRewarded(value); }
      }
      public Builder SetIsWeeklyLoginRewarded(bool value) {
        PrepareBuilder();
        result.hasIsWeeklyLoginRewarded = true;
        result.isWeeklyLoginRewarded_ = value;
        return this;
      }
      public Builder ClearIsWeeklyLoginRewarded() {
        PrepareBuilder();
        result.hasIsWeeklyLoginRewarded = false;
        result.isWeeklyLoginRewarded_ = false;
        return this;
      }
      
      public bool HasWeeklyLoginRewardList {
        get { return result.hasWeeklyLoginRewardList; }
      }
      public string WeeklyLoginRewardList {
        get { return result.WeeklyLoginRewardList; }
        set { SetWeeklyLoginRewardList(value); }
      }
      public Builder SetWeeklyLoginRewardList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWeeklyLoginRewardList = true;
        result.weeklyLoginRewardList_ = value;
        return this;
      }
      public Builder ClearWeeklyLoginRewardList() {
        PrepareBuilder();
        result.hasWeeklyLoginRewardList = false;
        result.weeklyLoginRewardList_ = "";
        return this;
      }
      
      public bool HasLastResetWeeklyLoginRewardTime {
        get { return result.hasLastResetWeeklyLoginRewardTime; }
      }
      public string LastResetWeeklyLoginRewardTime {
        get { return result.LastResetWeeklyLoginRewardTime; }
        set { SetLastResetWeeklyLoginRewardTime(value); }
      }
      public Builder SetLastResetWeeklyLoginRewardTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastResetWeeklyLoginRewardTime = true;
        result.lastResetWeeklyLoginRewardTime_ = value;
        return this;
      }
      public Builder ClearLastResetWeeklyLoginRewardTime() {
        PrepareBuilder();
        result.hasLastResetWeeklyLoginRewardTime = false;
        result.lastResetWeeklyLoginRewardTime_ = "";
        return this;
      }
    }
    static DS_UserInfoExtra() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_EquipInfo : pb::GeneratedMessage<DS_EquipInfo, DS_EquipInfo.Builder> {
    private DS_EquipInfo() { }
    private static readonly DS_EquipInfo defaultInstance = new DS_EquipInfo().MakeReadOnly();
    private static readonly string[] _dSEquipInfoFieldNames = new string[] { "AppendProperty", "Guid", "IsValid", "ItemId", "ItemNum", "Level", "Position", "UserGuid" };
    private static readonly uint[] _dSEquipInfoFieldTags = new uint[] { 64, 10, 24, 40, 48, 56, 32, 16 };
    public static DS_EquipInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_EquipInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_EquipInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_EquipInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_EquipInfo, DS_EquipInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_EquipInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private int position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public int Position {
      get { return position_; }
    }
    
    public const int ItemIdFieldNumber = 5;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public const int ItemNumFieldNumber = 6;
    private bool hasItemNum;
    private int itemNum_;
    public bool HasItemNum {
      get { return hasItemNum; }
    }
    public int ItemNum {
      get { return itemNum_; }
    }
    
    public const int LevelFieldNumber = 7;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int AppendPropertyFieldNumber = 8;
    private bool hasAppendProperty;
    private int appendProperty_;
    public bool HasAppendProperty {
      get { return hasAppendProperty; }
    }
    public int AppendProperty {
      get { return appendProperty_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasPosition) return false;
        if (!hasItemId) return false;
        if (!hasItemNum) return false;
        if (!hasLevel) return false;
        if (!hasAppendProperty) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSEquipInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[1], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[7], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[2], IsValid);
      }
      if (hasPosition) {
        output.WriteInt32(4, field_names[6], Position);
      }
      if (hasItemId) {
        output.WriteInt32(5, field_names[3], ItemId);
      }
      if (hasItemNum) {
        output.WriteInt32(6, field_names[4], ItemNum);
      }
      if (hasLevel) {
        output.WriteInt32(7, field_names[5], Level);
      }
      if (hasAppendProperty) {
        output.WriteInt32(8, field_names[0], AppendProperty);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Position);
        }
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ItemId);
        }
        if (hasItemNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, ItemNum);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Level);
        }
        if (hasAppendProperty) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, AppendProperty);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_EquipInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_EquipInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_EquipInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_EquipInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_EquipInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_EquipInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_EquipInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_EquipInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_EquipInfo result;
      
      private DS_EquipInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_EquipInfo original = result;
          result = new DS_EquipInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_EquipInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_EquipInfo.Descriptor; }
      }
      
      public override DS_EquipInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_EquipInfo.DefaultInstance; }
      }
      
      public override DS_EquipInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_EquipInfo) {
          return MergeFrom((DS_EquipInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_EquipInfo other) {
        if (other == global::DashFire.DataStore.DS_EquipInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasItemNum) {
          ItemNum = other.ItemNum;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasAppendProperty) {
          AppendProperty = other.AppendProperty;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSEquipInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSEquipInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasPosition = input.ReadInt32(ref result.position_);
              break;
            }
            case 40: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
            case 48: {
              result.hasItemNum = input.ReadInt32(ref result.itemNum_);
              break;
            }
            case 56: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 64: {
              result.hasAppendProperty = input.ReadInt32(ref result.appendProperty_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public int Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(int value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
      
      public bool HasItemNum {
        get { return result.hasItemNum; }
      }
      public int ItemNum {
        get { return result.ItemNum; }
        set { SetItemNum(value); }
      }
      public Builder SetItemNum(int value) {
        PrepareBuilder();
        result.hasItemNum = true;
        result.itemNum_ = value;
        return this;
      }
      public Builder ClearItemNum() {
        PrepareBuilder();
        result.hasItemNum = false;
        result.itemNum_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasAppendProperty {
        get { return result.hasAppendProperty; }
      }
      public int AppendProperty {
        get { return result.AppendProperty; }
        set { SetAppendProperty(value); }
      }
      public Builder SetAppendProperty(int value) {
        PrepareBuilder();
        result.hasAppendProperty = true;
        result.appendProperty_ = value;
        return this;
      }
      public Builder ClearAppendProperty() {
        PrepareBuilder();
        result.hasAppendProperty = false;
        result.appendProperty_ = 0;
        return this;
      }
    }
    static DS_EquipInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_ItemInfo : pb::GeneratedMessage<DS_ItemInfo, DS_ItemInfo.Builder> {
    private DS_ItemInfo() { }
    private static readonly DS_ItemInfo defaultInstance = new DS_ItemInfo().MakeReadOnly();
    private static readonly string[] _dSItemInfoFieldNames = new string[] { "AppendProperty", "Guid", "IsValid", "ItemId", "ItemNum", "Level", "Position", "UserGuid" };
    private static readonly uint[] _dSItemInfoFieldTags = new uint[] { 64, 10, 24, 40, 48, 56, 32, 16 };
    public static DS_ItemInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_ItemInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_ItemInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ItemInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_ItemInfo, DS_ItemInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ItemInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private int position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public int Position {
      get { return position_; }
    }
    
    public const int ItemIdFieldNumber = 5;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public const int ItemNumFieldNumber = 6;
    private bool hasItemNum;
    private int itemNum_;
    public bool HasItemNum {
      get { return hasItemNum; }
    }
    public int ItemNum {
      get { return itemNum_; }
    }
    
    public const int LevelFieldNumber = 7;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int AppendPropertyFieldNumber = 8;
    private bool hasAppendProperty;
    private int appendProperty_;
    public bool HasAppendProperty {
      get { return hasAppendProperty; }
    }
    public int AppendProperty {
      get { return appendProperty_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasPosition) return false;
        if (!hasItemId) return false;
        if (!hasItemNum) return false;
        if (!hasLevel) return false;
        if (!hasAppendProperty) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSItemInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[1], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[7], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[2], IsValid);
      }
      if (hasPosition) {
        output.WriteInt32(4, field_names[6], Position);
      }
      if (hasItemId) {
        output.WriteInt32(5, field_names[3], ItemId);
      }
      if (hasItemNum) {
        output.WriteInt32(6, field_names[4], ItemNum);
      }
      if (hasLevel) {
        output.WriteInt32(7, field_names[5], Level);
      }
      if (hasAppendProperty) {
        output.WriteInt32(8, field_names[0], AppendProperty);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Position);
        }
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ItemId);
        }
        if (hasItemNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, ItemNum);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Level);
        }
        if (hasAppendProperty) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, AppendProperty);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_ItemInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_ItemInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_ItemInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ItemInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_ItemInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_ItemInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_ItemInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_ItemInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_ItemInfo result;
      
      private DS_ItemInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_ItemInfo original = result;
          result = new DS_ItemInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_ItemInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_ItemInfo.Descriptor; }
      }
      
      public override DS_ItemInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_ItemInfo.DefaultInstance; }
      }
      
      public override DS_ItemInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_ItemInfo) {
          return MergeFrom((DS_ItemInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_ItemInfo other) {
        if (other == global::DashFire.DataStore.DS_ItemInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasItemNum) {
          ItemNum = other.ItemNum;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasAppendProperty) {
          AppendProperty = other.AppendProperty;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSItemInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSItemInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasPosition = input.ReadInt32(ref result.position_);
              break;
            }
            case 40: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
            case 48: {
              result.hasItemNum = input.ReadInt32(ref result.itemNum_);
              break;
            }
            case 56: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 64: {
              result.hasAppendProperty = input.ReadInt32(ref result.appendProperty_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public int Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(int value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
      
      public bool HasItemNum {
        get { return result.hasItemNum; }
      }
      public int ItemNum {
        get { return result.ItemNum; }
        set { SetItemNum(value); }
      }
      public Builder SetItemNum(int value) {
        PrepareBuilder();
        result.hasItemNum = true;
        result.itemNum_ = value;
        return this;
      }
      public Builder ClearItemNum() {
        PrepareBuilder();
        result.hasItemNum = false;
        result.itemNum_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasAppendProperty {
        get { return result.hasAppendProperty; }
      }
      public int AppendProperty {
        get { return result.AppendProperty; }
        set { SetAppendProperty(value); }
      }
      public Builder SetAppendProperty(int value) {
        PrepareBuilder();
        result.hasAppendProperty = true;
        result.appendProperty_ = value;
        return this;
      }
      public Builder ClearAppendProperty() {
        PrepareBuilder();
        result.hasAppendProperty = false;
        result.appendProperty_ = 0;
        return this;
      }
    }
    static DS_ItemInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_LegacyInfo : pb::GeneratedMessage<DS_LegacyInfo, DS_LegacyInfo.Builder> {
    private DS_LegacyInfo() { }
    private static readonly DS_LegacyInfo defaultInstance = new DS_LegacyInfo().MakeReadOnly();
    private static readonly string[] _dSLegacyInfoFieldNames = new string[] { "AppendProperty", "Guid", "IsUnlock", "IsValid", "LegacyId", "LegacyLevel", "Position", "UserGuid" };
    private static readonly uint[] _dSLegacyInfoFieldTags = new uint[] { 56, 10, 64, 24, 40, 48, 32, 16 };
    public static DS_LegacyInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_LegacyInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_LegacyInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_LegacyInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_LegacyInfo, DS_LegacyInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_LegacyInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private int position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public int Position {
      get { return position_; }
    }
    
    public const int LegacyIdFieldNumber = 5;
    private bool hasLegacyId;
    private int legacyId_;
    public bool HasLegacyId {
      get { return hasLegacyId; }
    }
    public int LegacyId {
      get { return legacyId_; }
    }
    
    public const int LegacyLevelFieldNumber = 6;
    private bool hasLegacyLevel;
    private int legacyLevel_;
    public bool HasLegacyLevel {
      get { return hasLegacyLevel; }
    }
    public int LegacyLevel {
      get { return legacyLevel_; }
    }
    
    public const int AppendPropertyFieldNumber = 7;
    private bool hasAppendProperty;
    private int appendProperty_;
    public bool HasAppendProperty {
      get { return hasAppendProperty; }
    }
    public int AppendProperty {
      get { return appendProperty_; }
    }
    
    public const int IsUnlockFieldNumber = 8;
    private bool hasIsUnlock;
    private bool isUnlock_;
    public bool HasIsUnlock {
      get { return hasIsUnlock; }
    }
    public bool IsUnlock {
      get { return isUnlock_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasPosition) return false;
        if (!hasLegacyId) return false;
        if (!hasLegacyLevel) return false;
        if (!hasAppendProperty) return false;
        if (!hasIsUnlock) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSLegacyInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[1], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[7], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[3], IsValid);
      }
      if (hasPosition) {
        output.WriteInt32(4, field_names[6], Position);
      }
      if (hasLegacyId) {
        output.WriteInt32(5, field_names[4], LegacyId);
      }
      if (hasLegacyLevel) {
        output.WriteInt32(6, field_names[5], LegacyLevel);
      }
      if (hasAppendProperty) {
        output.WriteInt32(7, field_names[0], AppendProperty);
      }
      if (hasIsUnlock) {
        output.WriteBool(8, field_names[2], IsUnlock);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Position);
        }
        if (hasLegacyId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, LegacyId);
        }
        if (hasLegacyLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, LegacyLevel);
        }
        if (hasAppendProperty) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, AppendProperty);
        }
        if (hasIsUnlock) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, IsUnlock);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_LegacyInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_LegacyInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_LegacyInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_LegacyInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_LegacyInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_LegacyInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_LegacyInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_LegacyInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_LegacyInfo result;
      
      private DS_LegacyInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_LegacyInfo original = result;
          result = new DS_LegacyInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_LegacyInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_LegacyInfo.Descriptor; }
      }
      
      public override DS_LegacyInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_LegacyInfo.DefaultInstance; }
      }
      
      public override DS_LegacyInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_LegacyInfo) {
          return MergeFrom((DS_LegacyInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_LegacyInfo other) {
        if (other == global::DashFire.DataStore.DS_LegacyInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        if (other.HasLegacyId) {
          LegacyId = other.LegacyId;
        }
        if (other.HasLegacyLevel) {
          LegacyLevel = other.LegacyLevel;
        }
        if (other.HasAppendProperty) {
          AppendProperty = other.AppendProperty;
        }
        if (other.HasIsUnlock) {
          IsUnlock = other.IsUnlock;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSLegacyInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSLegacyInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasPosition = input.ReadInt32(ref result.position_);
              break;
            }
            case 40: {
              result.hasLegacyId = input.ReadInt32(ref result.legacyId_);
              break;
            }
            case 48: {
              result.hasLegacyLevel = input.ReadInt32(ref result.legacyLevel_);
              break;
            }
            case 56: {
              result.hasAppendProperty = input.ReadInt32(ref result.appendProperty_);
              break;
            }
            case 64: {
              result.hasIsUnlock = input.ReadBool(ref result.isUnlock_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public int Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(int value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      public bool HasLegacyId {
        get { return result.hasLegacyId; }
      }
      public int LegacyId {
        get { return result.LegacyId; }
        set { SetLegacyId(value); }
      }
      public Builder SetLegacyId(int value) {
        PrepareBuilder();
        result.hasLegacyId = true;
        result.legacyId_ = value;
        return this;
      }
      public Builder ClearLegacyId() {
        PrepareBuilder();
        result.hasLegacyId = false;
        result.legacyId_ = 0;
        return this;
      }
      
      public bool HasLegacyLevel {
        get { return result.hasLegacyLevel; }
      }
      public int LegacyLevel {
        get { return result.LegacyLevel; }
        set { SetLegacyLevel(value); }
      }
      public Builder SetLegacyLevel(int value) {
        PrepareBuilder();
        result.hasLegacyLevel = true;
        result.legacyLevel_ = value;
        return this;
      }
      public Builder ClearLegacyLevel() {
        PrepareBuilder();
        result.hasLegacyLevel = false;
        result.legacyLevel_ = 0;
        return this;
      }
      
      public bool HasAppendProperty {
        get { return result.hasAppendProperty; }
      }
      public int AppendProperty {
        get { return result.AppendProperty; }
        set { SetAppendProperty(value); }
      }
      public Builder SetAppendProperty(int value) {
        PrepareBuilder();
        result.hasAppendProperty = true;
        result.appendProperty_ = value;
        return this;
      }
      public Builder ClearAppendProperty() {
        PrepareBuilder();
        result.hasAppendProperty = false;
        result.appendProperty_ = 0;
        return this;
      }
      
      public bool HasIsUnlock {
        get { return result.hasIsUnlock; }
      }
      public bool IsUnlock {
        get { return result.IsUnlock; }
        set { SetIsUnlock(value); }
      }
      public Builder SetIsUnlock(bool value) {
        PrepareBuilder();
        result.hasIsUnlock = true;
        result.isUnlock_ = value;
        return this;
      }
      public Builder ClearIsUnlock() {
        PrepareBuilder();
        result.hasIsUnlock = false;
        result.isUnlock_ = false;
        return this;
      }
    }
    static DS_LegacyInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_XSoulInfo : pb::GeneratedMessage<DS_XSoulInfo, DS_XSoulInfo.Builder> {
    private DS_XSoulInfo() { }
    private static readonly DS_XSoulInfo defaultInstance = new DS_XSoulInfo().MakeReadOnly();
    private static readonly string[] _dSXSoulInfoFieldNames = new string[] { "Guid", "IsValid", "Position", "UserGuid", "XSoulExp", "XSoulId", "XSoulLevel", "XSoulModelLevel", "XSoulType" };
    private static readonly uint[] _dSXSoulInfoFieldTags = new uint[] { 10, 24, 32, 16, 64, 48, 56, 72, 40 };
    public static DS_XSoulInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_XSoulInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_XSoulInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_XSoulInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_XSoulInfo, DS_XSoulInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_XSoulInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private int position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public int Position {
      get { return position_; }
    }
    
    public const int XSoulTypeFieldNumber = 5;
    private bool hasXSoulType;
    private int xSoulType_;
    public bool HasXSoulType {
      get { return hasXSoulType; }
    }
    public int XSoulType {
      get { return xSoulType_; }
    }
    
    public const int XSoulIdFieldNumber = 6;
    private bool hasXSoulId;
    private int xSoulId_;
    public bool HasXSoulId {
      get { return hasXSoulId; }
    }
    public int XSoulId {
      get { return xSoulId_; }
    }
    
    public const int XSoulLevelFieldNumber = 7;
    private bool hasXSoulLevel;
    private int xSoulLevel_;
    public bool HasXSoulLevel {
      get { return hasXSoulLevel; }
    }
    public int XSoulLevel {
      get { return xSoulLevel_; }
    }
    
    public const int XSoulExpFieldNumber = 8;
    private bool hasXSoulExp;
    private int xSoulExp_;
    public bool HasXSoulExp {
      get { return hasXSoulExp; }
    }
    public int XSoulExp {
      get { return xSoulExp_; }
    }
    
    public const int XSoulModelLevelFieldNumber = 9;
    private bool hasXSoulModelLevel;
    private int xSoulModelLevel_;
    public bool HasXSoulModelLevel {
      get { return hasXSoulModelLevel; }
    }
    public int XSoulModelLevel {
      get { return xSoulModelLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasPosition) return false;
        if (!hasXSoulType) return false;
        if (!hasXSoulId) return false;
        if (!hasXSoulLevel) return false;
        if (!hasXSoulExp) return false;
        if (!hasXSoulModelLevel) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSXSoulInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[0], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[3], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[1], IsValid);
      }
      if (hasPosition) {
        output.WriteInt32(4, field_names[2], Position);
      }
      if (hasXSoulType) {
        output.WriteInt32(5, field_names[8], XSoulType);
      }
      if (hasXSoulId) {
        output.WriteInt32(6, field_names[5], XSoulId);
      }
      if (hasXSoulLevel) {
        output.WriteInt32(7, field_names[6], XSoulLevel);
      }
      if (hasXSoulExp) {
        output.WriteInt32(8, field_names[4], XSoulExp);
      }
      if (hasXSoulModelLevel) {
        output.WriteInt32(9, field_names[7], XSoulModelLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Position);
        }
        if (hasXSoulType) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, XSoulType);
        }
        if (hasXSoulId) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, XSoulId);
        }
        if (hasXSoulLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, XSoulLevel);
        }
        if (hasXSoulExp) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, XSoulExp);
        }
        if (hasXSoulModelLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, XSoulModelLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_XSoulInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_XSoulInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_XSoulInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_XSoulInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_XSoulInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_XSoulInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_XSoulInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_XSoulInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_XSoulInfo result;
      
      private DS_XSoulInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_XSoulInfo original = result;
          result = new DS_XSoulInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_XSoulInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_XSoulInfo.Descriptor; }
      }
      
      public override DS_XSoulInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_XSoulInfo.DefaultInstance; }
      }
      
      public override DS_XSoulInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_XSoulInfo) {
          return MergeFrom((DS_XSoulInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_XSoulInfo other) {
        if (other == global::DashFire.DataStore.DS_XSoulInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        if (other.HasXSoulType) {
          XSoulType = other.XSoulType;
        }
        if (other.HasXSoulId) {
          XSoulId = other.XSoulId;
        }
        if (other.HasXSoulLevel) {
          XSoulLevel = other.XSoulLevel;
        }
        if (other.HasXSoulExp) {
          XSoulExp = other.XSoulExp;
        }
        if (other.HasXSoulModelLevel) {
          XSoulModelLevel = other.XSoulModelLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSXSoulInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSXSoulInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasPosition = input.ReadInt32(ref result.position_);
              break;
            }
            case 40: {
              result.hasXSoulType = input.ReadInt32(ref result.xSoulType_);
              break;
            }
            case 48: {
              result.hasXSoulId = input.ReadInt32(ref result.xSoulId_);
              break;
            }
            case 56: {
              result.hasXSoulLevel = input.ReadInt32(ref result.xSoulLevel_);
              break;
            }
            case 64: {
              result.hasXSoulExp = input.ReadInt32(ref result.xSoulExp_);
              break;
            }
            case 72: {
              result.hasXSoulModelLevel = input.ReadInt32(ref result.xSoulModelLevel_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public int Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(int value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      public bool HasXSoulType {
        get { return result.hasXSoulType; }
      }
      public int XSoulType {
        get { return result.XSoulType; }
        set { SetXSoulType(value); }
      }
      public Builder SetXSoulType(int value) {
        PrepareBuilder();
        result.hasXSoulType = true;
        result.xSoulType_ = value;
        return this;
      }
      public Builder ClearXSoulType() {
        PrepareBuilder();
        result.hasXSoulType = false;
        result.xSoulType_ = 0;
        return this;
      }
      
      public bool HasXSoulId {
        get { return result.hasXSoulId; }
      }
      public int XSoulId {
        get { return result.XSoulId; }
        set { SetXSoulId(value); }
      }
      public Builder SetXSoulId(int value) {
        PrepareBuilder();
        result.hasXSoulId = true;
        result.xSoulId_ = value;
        return this;
      }
      public Builder ClearXSoulId() {
        PrepareBuilder();
        result.hasXSoulId = false;
        result.xSoulId_ = 0;
        return this;
      }
      
      public bool HasXSoulLevel {
        get { return result.hasXSoulLevel; }
      }
      public int XSoulLevel {
        get { return result.XSoulLevel; }
        set { SetXSoulLevel(value); }
      }
      public Builder SetXSoulLevel(int value) {
        PrepareBuilder();
        result.hasXSoulLevel = true;
        result.xSoulLevel_ = value;
        return this;
      }
      public Builder ClearXSoulLevel() {
        PrepareBuilder();
        result.hasXSoulLevel = false;
        result.xSoulLevel_ = 0;
        return this;
      }
      
      public bool HasXSoulExp {
        get { return result.hasXSoulExp; }
      }
      public int XSoulExp {
        get { return result.XSoulExp; }
        set { SetXSoulExp(value); }
      }
      public Builder SetXSoulExp(int value) {
        PrepareBuilder();
        result.hasXSoulExp = true;
        result.xSoulExp_ = value;
        return this;
      }
      public Builder ClearXSoulExp() {
        PrepareBuilder();
        result.hasXSoulExp = false;
        result.xSoulExp_ = 0;
        return this;
      }
      
      public bool HasXSoulModelLevel {
        get { return result.hasXSoulModelLevel; }
      }
      public int XSoulModelLevel {
        get { return result.XSoulModelLevel; }
        set { SetXSoulModelLevel(value); }
      }
      public Builder SetXSoulModelLevel(int value) {
        PrepareBuilder();
        result.hasXSoulModelLevel = true;
        result.xSoulModelLevel_ = value;
        return this;
      }
      public Builder ClearXSoulModelLevel() {
        PrepareBuilder();
        result.hasXSoulModelLevel = false;
        result.xSoulModelLevel_ = 0;
        return this;
      }
    }
    static DS_XSoulInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_SkillInfo : pb::GeneratedMessage<DS_SkillInfo, DS_SkillInfo.Builder> {
    private DS_SkillInfo() { }
    private static readonly DS_SkillInfo defaultInstance = new DS_SkillInfo().MakeReadOnly();
    private static readonly string[] _dSSkillInfoFieldNames = new string[] { "Guid", "IsValid", "Level", "Preset", "SkillId", "UserGuid" };
    private static readonly uint[] _dSSkillInfoFieldTags = new uint[] { 10, 24, 40, 48, 32, 16 };
    public static DS_SkillInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_SkillInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_SkillInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_SkillInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_SkillInfo, DS_SkillInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_SkillInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int SkillIdFieldNumber = 4;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int LevelFieldNumber = 5;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int PresetFieldNumber = 6;
    private bool hasPreset;
    private int preset_;
    public bool HasPreset {
      get { return hasPreset; }
    }
    public int Preset {
      get { return preset_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasSkillId) return false;
        if (!hasLevel) return false;
        if (!hasPreset) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSSkillInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[0], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[5], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[1], IsValid);
      }
      if (hasSkillId) {
        output.WriteInt32(4, field_names[4], SkillId);
      }
      if (hasLevel) {
        output.WriteInt32(5, field_names[2], Level);
      }
      if (hasPreset) {
        output.WriteInt32(6, field_names[3], Preset);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, SkillId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Level);
        }
        if (hasPreset) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Preset);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_SkillInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_SkillInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_SkillInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_SkillInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_SkillInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_SkillInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_SkillInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_SkillInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_SkillInfo result;
      
      private DS_SkillInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_SkillInfo original = result;
          result = new DS_SkillInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_SkillInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_SkillInfo.Descriptor; }
      }
      
      public override DS_SkillInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_SkillInfo.DefaultInstance; }
      }
      
      public override DS_SkillInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_SkillInfo) {
          return MergeFrom((DS_SkillInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_SkillInfo other) {
        if (other == global::DashFire.DataStore.DS_SkillInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasPreset) {
          Preset = other.Preset;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSSkillInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSSkillInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 40: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 48: {
              result.hasPreset = input.ReadInt32(ref result.preset_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasPreset {
        get { return result.hasPreset; }
      }
      public int Preset {
        get { return result.Preset; }
        set { SetPreset(value); }
      }
      public Builder SetPreset(int value) {
        PrepareBuilder();
        result.hasPreset = true;
        result.preset_ = value;
        return this;
      }
      public Builder ClearPreset() {
        PrepareBuilder();
        result.hasPreset = false;
        result.preset_ = 0;
        return this;
      }
    }
    static DS_SkillInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_MissionInfo : pb::GeneratedMessage<DS_MissionInfo, DS_MissionInfo.Builder> {
    private DS_MissionInfo() { }
    private static readonly DS_MissionInfo defaultInstance = new DS_MissionInfo().MakeReadOnly();
    private static readonly string[] _dSMissionInfoFieldNames = new string[] { "Guid", "IsValid", "MissionId", "MissionState", "MissionValue", "UserGuid" };
    private static readonly uint[] _dSMissionInfoFieldTags = new uint[] { 10, 24, 32, 48, 40, 16 };
    public static DS_MissionInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_MissionInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_MissionInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MissionInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_MissionInfo, DS_MissionInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MissionInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int MissionIdFieldNumber = 4;
    private bool hasMissionId;
    private int missionId_;
    public bool HasMissionId {
      get { return hasMissionId; }
    }
    public int MissionId {
      get { return missionId_; }
    }
    
    public const int MissionValueFieldNumber = 5;
    private bool hasMissionValue;
    private int missionValue_;
    public bool HasMissionValue {
      get { return hasMissionValue; }
    }
    public int MissionValue {
      get { return missionValue_; }
    }
    
    public const int MissionStateFieldNumber = 6;
    private bool hasMissionState;
    private int missionState_;
    public bool HasMissionState {
      get { return hasMissionState; }
    }
    public int MissionState {
      get { return missionState_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasMissionId) return false;
        if (!hasMissionValue) return false;
        if (!hasMissionState) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSMissionInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[0], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[5], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[1], IsValid);
      }
      if (hasMissionId) {
        output.WriteInt32(4, field_names[2], MissionId);
      }
      if (hasMissionValue) {
        output.WriteInt32(5, field_names[4], MissionValue);
      }
      if (hasMissionState) {
        output.WriteInt32(6, field_names[3], MissionState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasMissionId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, MissionId);
        }
        if (hasMissionValue) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, MissionValue);
        }
        if (hasMissionState) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, MissionState);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_MissionInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_MissionInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_MissionInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MissionInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_MissionInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_MissionInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_MissionInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_MissionInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_MissionInfo result;
      
      private DS_MissionInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_MissionInfo original = result;
          result = new DS_MissionInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_MissionInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_MissionInfo.Descriptor; }
      }
      
      public override DS_MissionInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_MissionInfo.DefaultInstance; }
      }
      
      public override DS_MissionInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_MissionInfo) {
          return MergeFrom((DS_MissionInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_MissionInfo other) {
        if (other == global::DashFire.DataStore.DS_MissionInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasMissionId) {
          MissionId = other.MissionId;
        }
        if (other.HasMissionValue) {
          MissionValue = other.MissionValue;
        }
        if (other.HasMissionState) {
          MissionState = other.MissionState;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSMissionInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSMissionInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasMissionId = input.ReadInt32(ref result.missionId_);
              break;
            }
            case 40: {
              result.hasMissionValue = input.ReadInt32(ref result.missionValue_);
              break;
            }
            case 48: {
              result.hasMissionState = input.ReadInt32(ref result.missionState_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasMissionId {
        get { return result.hasMissionId; }
      }
      public int MissionId {
        get { return result.MissionId; }
        set { SetMissionId(value); }
      }
      public Builder SetMissionId(int value) {
        PrepareBuilder();
        result.hasMissionId = true;
        result.missionId_ = value;
        return this;
      }
      public Builder ClearMissionId() {
        PrepareBuilder();
        result.hasMissionId = false;
        result.missionId_ = 0;
        return this;
      }
      
      public bool HasMissionValue {
        get { return result.hasMissionValue; }
      }
      public int MissionValue {
        get { return result.MissionValue; }
        set { SetMissionValue(value); }
      }
      public Builder SetMissionValue(int value) {
        PrepareBuilder();
        result.hasMissionValue = true;
        result.missionValue_ = value;
        return this;
      }
      public Builder ClearMissionValue() {
        PrepareBuilder();
        result.hasMissionValue = false;
        result.missionValue_ = 0;
        return this;
      }
      
      public bool HasMissionState {
        get { return result.hasMissionState; }
      }
      public int MissionState {
        get { return result.MissionState; }
        set { SetMissionState(value); }
      }
      public Builder SetMissionState(int value) {
        PrepareBuilder();
        result.hasMissionState = true;
        result.missionState_ = value;
        return this;
      }
      public Builder ClearMissionState() {
        PrepareBuilder();
        result.hasMissionState = false;
        result.missionState_ = 0;
        return this;
      }
    }
    static DS_MissionInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_LevelInfo : pb::GeneratedMessage<DS_LevelInfo, DS_LevelInfo.Builder> {
    private DS_LevelInfo() { }
    private static readonly DS_LevelInfo defaultInstance = new DS_LevelInfo().MakeReadOnly();
    private static readonly string[] _dSLevelInfoFieldNames = new string[] { "Guid", "IsValid", "LevelId", "LevelRecord", "UserGuid" };
    private static readonly uint[] _dSLevelInfoFieldTags = new uint[] { 10, 24, 32, 40, 16 };
    public static DS_LevelInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_LevelInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_LevelInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_LevelInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_LevelInfo, DS_LevelInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_LevelInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int LevelIdFieldNumber = 4;
    private bool hasLevelId;
    private int levelId_;
    public bool HasLevelId {
      get { return hasLevelId; }
    }
    public int LevelId {
      get { return levelId_; }
    }
    
    public const int LevelRecordFieldNumber = 5;
    private bool hasLevelRecord;
    private int levelRecord_;
    public bool HasLevelRecord {
      get { return hasLevelRecord; }
    }
    public int LevelRecord {
      get { return levelRecord_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasLevelId) return false;
        if (!hasLevelRecord) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSLevelInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[0], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[4], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[1], IsValid);
      }
      if (hasLevelId) {
        output.WriteInt32(4, field_names[2], LevelId);
      }
      if (hasLevelRecord) {
        output.WriteInt32(5, field_names[3], LevelRecord);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasLevelId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, LevelId);
        }
        if (hasLevelRecord) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, LevelRecord);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_LevelInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_LevelInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_LevelInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_LevelInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_LevelInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_LevelInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_LevelInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_LevelInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_LevelInfo result;
      
      private DS_LevelInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_LevelInfo original = result;
          result = new DS_LevelInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_LevelInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_LevelInfo.Descriptor; }
      }
      
      public override DS_LevelInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_LevelInfo.DefaultInstance; }
      }
      
      public override DS_LevelInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_LevelInfo) {
          return MergeFrom((DS_LevelInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_LevelInfo other) {
        if (other == global::DashFire.DataStore.DS_LevelInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasLevelId) {
          LevelId = other.LevelId;
        }
        if (other.HasLevelRecord) {
          LevelRecord = other.LevelRecord;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSLevelInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSLevelInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasLevelId = input.ReadInt32(ref result.levelId_);
              break;
            }
            case 40: {
              result.hasLevelRecord = input.ReadInt32(ref result.levelRecord_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasLevelId {
        get { return result.hasLevelId; }
      }
      public int LevelId {
        get { return result.LevelId; }
        set { SetLevelId(value); }
      }
      public Builder SetLevelId(int value) {
        PrepareBuilder();
        result.hasLevelId = true;
        result.levelId_ = value;
        return this;
      }
      public Builder ClearLevelId() {
        PrepareBuilder();
        result.hasLevelId = false;
        result.levelId_ = 0;
        return this;
      }
      
      public bool HasLevelRecord {
        get { return result.hasLevelRecord; }
      }
      public int LevelRecord {
        get { return result.LevelRecord; }
        set { SetLevelRecord(value); }
      }
      public Builder SetLevelRecord(int value) {
        PrepareBuilder();
        result.hasLevelRecord = true;
        result.levelRecord_ = value;
        return this;
      }
      public Builder ClearLevelRecord() {
        PrepareBuilder();
        result.hasLevelRecord = false;
        result.levelRecord_ = 0;
        return this;
      }
    }
    static DS_LevelInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_ExpeditionInfo : pb::GeneratedMessage<DS_ExpeditionInfo, DS_ExpeditionInfo.Builder> {
    private DS_ExpeditionInfo() { }
    private static readonly DS_ExpeditionInfo defaultInstance = new DS_ExpeditionInfo().MakeReadOnly();
    private static readonly string[] _dSExpeditionInfoFieldNames = new string[] { "BossCount", "EnemyAttrList", "EnemyList", "FightingScore", "Guid", "HP", "ImageA", "ImageB", "IsValid", "MP", "MonsterCount", "OnePlayerCount", "Rage", "Schedule", "StartTime", "TollgateType", "Unrewarded", "UserGuid" };
    private static readonly uint[] _dSExpeditionInfoFieldTags = new uint[] { 88, 130, 122, 40, 10, 48, 138, 146, 24, 56, 80, 96, 64, 72, 33, 112, 106, 16 };
    public static DS_ExpeditionInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_ExpeditionInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_ExpeditionInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ExpeditionInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_ExpeditionInfo, DS_ExpeditionInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_ExpeditionInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int StartTimeFieldNumber = 4;
    private bool hasStartTime;
    private double startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public double StartTime {
      get { return startTime_; }
    }
    
    public const int FightingScoreFieldNumber = 5;
    private bool hasFightingScore;
    private int fightingScore_;
    public bool HasFightingScore {
      get { return hasFightingScore; }
    }
    public int FightingScore {
      get { return fightingScore_; }
    }
    
    public const int HPFieldNumber = 6;
    private bool hasHP;
    private int hP_;
    public bool HasHP {
      get { return hasHP; }
    }
    public int HP {
      get { return hP_; }
    }
    
    public const int MPFieldNumber = 7;
    private bool hasMP;
    private int mP_;
    public bool HasMP {
      get { return hasMP; }
    }
    public int MP {
      get { return mP_; }
    }
    
    public const int RageFieldNumber = 8;
    private bool hasRage;
    private int rage_;
    public bool HasRage {
      get { return hasRage; }
    }
    public int Rage {
      get { return rage_; }
    }
    
    public const int ScheduleFieldNumber = 9;
    private bool hasSchedule;
    private int schedule_;
    public bool HasSchedule {
      get { return hasSchedule; }
    }
    public int Schedule {
      get { return schedule_; }
    }
    
    public const int MonsterCountFieldNumber = 10;
    private bool hasMonsterCount;
    private int monsterCount_;
    public bool HasMonsterCount {
      get { return hasMonsterCount; }
    }
    public int MonsterCount {
      get { return monsterCount_; }
    }
    
    public const int BossCountFieldNumber = 11;
    private bool hasBossCount;
    private int bossCount_;
    public bool HasBossCount {
      get { return hasBossCount; }
    }
    public int BossCount {
      get { return bossCount_; }
    }
    
    public const int OnePlayerCountFieldNumber = 12;
    private bool hasOnePlayerCount;
    private int onePlayerCount_;
    public bool HasOnePlayerCount {
      get { return hasOnePlayerCount; }
    }
    public int OnePlayerCount {
      get { return onePlayerCount_; }
    }
    
    public const int UnrewardedFieldNumber = 13;
    private bool hasUnrewarded;
    private string unrewarded_ = "";
    public bool HasUnrewarded {
      get { return hasUnrewarded; }
    }
    public string Unrewarded {
      get { return unrewarded_; }
    }
    
    public const int TollgateTypeFieldNumber = 14;
    private bool hasTollgateType;
    private int tollgateType_;
    public bool HasTollgateType {
      get { return hasTollgateType; }
    }
    public int TollgateType {
      get { return tollgateType_; }
    }
    
    public const int EnemyListFieldNumber = 15;
    private bool hasEnemyList;
    private string enemyList_ = "";
    public bool HasEnemyList {
      get { return hasEnemyList; }
    }
    public string EnemyList {
      get { return enemyList_; }
    }
    
    public const int EnemyAttrListFieldNumber = 16;
    private bool hasEnemyAttrList;
    private string enemyAttrList_ = "";
    public bool HasEnemyAttrList {
      get { return hasEnemyAttrList; }
    }
    public string EnemyAttrList {
      get { return enemyAttrList_; }
    }
    
    public const int ImageAFieldNumber = 17;
    private bool hasImageA;
    private pb::ByteString imageA_ = pb::ByteString.Empty;
    public bool HasImageA {
      get { return hasImageA; }
    }
    public pb::ByteString ImageA {
      get { return imageA_; }
    }
    
    public const int ImageBFieldNumber = 18;
    private bool hasImageB;
    private pb::ByteString imageB_ = pb::ByteString.Empty;
    public bool HasImageB {
      get { return hasImageB; }
    }
    public pb::ByteString ImageB {
      get { return imageB_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasStartTime) return false;
        if (!hasFightingScore) return false;
        if (!hasHP) return false;
        if (!hasMP) return false;
        if (!hasRage) return false;
        if (!hasSchedule) return false;
        if (!hasMonsterCount) return false;
        if (!hasBossCount) return false;
        if (!hasOnePlayerCount) return false;
        if (!hasUnrewarded) return false;
        if (!hasTollgateType) return false;
        if (!hasEnemyList) return false;
        if (!hasEnemyAttrList) return false;
        if (!hasImageA) return false;
        if (!hasImageB) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSExpeditionInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[4], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[17], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[8], IsValid);
      }
      if (hasStartTime) {
        output.WriteDouble(4, field_names[14], StartTime);
      }
      if (hasFightingScore) {
        output.WriteInt32(5, field_names[3], FightingScore);
      }
      if (hasHP) {
        output.WriteInt32(6, field_names[5], HP);
      }
      if (hasMP) {
        output.WriteInt32(7, field_names[9], MP);
      }
      if (hasRage) {
        output.WriteInt32(8, field_names[12], Rage);
      }
      if (hasSchedule) {
        output.WriteInt32(9, field_names[13], Schedule);
      }
      if (hasMonsterCount) {
        output.WriteInt32(10, field_names[10], MonsterCount);
      }
      if (hasBossCount) {
        output.WriteInt32(11, field_names[0], BossCount);
      }
      if (hasOnePlayerCount) {
        output.WriteInt32(12, field_names[11], OnePlayerCount);
      }
      if (hasUnrewarded) {
        output.WriteString(13, field_names[16], Unrewarded);
      }
      if (hasTollgateType) {
        output.WriteInt32(14, field_names[15], TollgateType);
      }
      if (hasEnemyList) {
        output.WriteString(15, field_names[2], EnemyList);
      }
      if (hasEnemyAttrList) {
        output.WriteString(16, field_names[1], EnemyAttrList);
      }
      if (hasImageA) {
        output.WriteBytes(17, field_names[6], ImageA);
      }
      if (hasImageB) {
        output.WriteBytes(18, field_names[7], ImageB);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, StartTime);
        }
        if (hasFightingScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, FightingScore);
        }
        if (hasHP) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, HP);
        }
        if (hasMP) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, MP);
        }
        if (hasRage) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, Rage);
        }
        if (hasSchedule) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, Schedule);
        }
        if (hasMonsterCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, MonsterCount);
        }
        if (hasBossCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, BossCount);
        }
        if (hasOnePlayerCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, OnePlayerCount);
        }
        if (hasUnrewarded) {
          size += pb::CodedOutputStream.ComputeStringSize(13, Unrewarded);
        }
        if (hasTollgateType) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, TollgateType);
        }
        if (hasEnemyList) {
          size += pb::CodedOutputStream.ComputeStringSize(15, EnemyList);
        }
        if (hasEnemyAttrList) {
          size += pb::CodedOutputStream.ComputeStringSize(16, EnemyAttrList);
        }
        if (hasImageA) {
          size += pb::CodedOutputStream.ComputeBytesSize(17, ImageA);
        }
        if (hasImageB) {
          size += pb::CodedOutputStream.ComputeBytesSize(18, ImageB);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_ExpeditionInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_ExpeditionInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_ExpeditionInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_ExpeditionInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_ExpeditionInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_ExpeditionInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_ExpeditionInfo result;
      
      private DS_ExpeditionInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_ExpeditionInfo original = result;
          result = new DS_ExpeditionInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_ExpeditionInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_ExpeditionInfo.Descriptor; }
      }
      
      public override DS_ExpeditionInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_ExpeditionInfo.DefaultInstance; }
      }
      
      public override DS_ExpeditionInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_ExpeditionInfo) {
          return MergeFrom((DS_ExpeditionInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_ExpeditionInfo other) {
        if (other == global::DashFire.DataStore.DS_ExpeditionInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasFightingScore) {
          FightingScore = other.FightingScore;
        }
        if (other.HasHP) {
          HP = other.HP;
        }
        if (other.HasMP) {
          MP = other.MP;
        }
        if (other.HasRage) {
          Rage = other.Rage;
        }
        if (other.HasSchedule) {
          Schedule = other.Schedule;
        }
        if (other.HasMonsterCount) {
          MonsterCount = other.MonsterCount;
        }
        if (other.HasBossCount) {
          BossCount = other.BossCount;
        }
        if (other.HasOnePlayerCount) {
          OnePlayerCount = other.OnePlayerCount;
        }
        if (other.HasUnrewarded) {
          Unrewarded = other.Unrewarded;
        }
        if (other.HasTollgateType) {
          TollgateType = other.TollgateType;
        }
        if (other.HasEnemyList) {
          EnemyList = other.EnemyList;
        }
        if (other.HasEnemyAttrList) {
          EnemyAttrList = other.EnemyAttrList;
        }
        if (other.HasImageA) {
          ImageA = other.ImageA;
        }
        if (other.HasImageB) {
          ImageB = other.ImageB;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSExpeditionInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSExpeditionInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 33: {
              result.hasStartTime = input.ReadDouble(ref result.startTime_);
              break;
            }
            case 40: {
              result.hasFightingScore = input.ReadInt32(ref result.fightingScore_);
              break;
            }
            case 48: {
              result.hasHP = input.ReadInt32(ref result.hP_);
              break;
            }
            case 56: {
              result.hasMP = input.ReadInt32(ref result.mP_);
              break;
            }
            case 64: {
              result.hasRage = input.ReadInt32(ref result.rage_);
              break;
            }
            case 72: {
              result.hasSchedule = input.ReadInt32(ref result.schedule_);
              break;
            }
            case 80: {
              result.hasMonsterCount = input.ReadInt32(ref result.monsterCount_);
              break;
            }
            case 88: {
              result.hasBossCount = input.ReadInt32(ref result.bossCount_);
              break;
            }
            case 96: {
              result.hasOnePlayerCount = input.ReadInt32(ref result.onePlayerCount_);
              break;
            }
            case 106: {
              result.hasUnrewarded = input.ReadString(ref result.unrewarded_);
              break;
            }
            case 112: {
              result.hasTollgateType = input.ReadInt32(ref result.tollgateType_);
              break;
            }
            case 122: {
              result.hasEnemyList = input.ReadString(ref result.enemyList_);
              break;
            }
            case 130: {
              result.hasEnemyAttrList = input.ReadString(ref result.enemyAttrList_);
              break;
            }
            case 138: {
              result.hasImageA = input.ReadBytes(ref result.imageA_);
              break;
            }
            case 146: {
              result.hasImageB = input.ReadBytes(ref result.imageB_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public double StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(double value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = 0D;
        return this;
      }
      
      public bool HasFightingScore {
        get { return result.hasFightingScore; }
      }
      public int FightingScore {
        get { return result.FightingScore; }
        set { SetFightingScore(value); }
      }
      public Builder SetFightingScore(int value) {
        PrepareBuilder();
        result.hasFightingScore = true;
        result.fightingScore_ = value;
        return this;
      }
      public Builder ClearFightingScore() {
        PrepareBuilder();
        result.hasFightingScore = false;
        result.fightingScore_ = 0;
        return this;
      }
      
      public bool HasHP {
        get { return result.hasHP; }
      }
      public int HP {
        get { return result.HP; }
        set { SetHP(value); }
      }
      public Builder SetHP(int value) {
        PrepareBuilder();
        result.hasHP = true;
        result.hP_ = value;
        return this;
      }
      public Builder ClearHP() {
        PrepareBuilder();
        result.hasHP = false;
        result.hP_ = 0;
        return this;
      }
      
      public bool HasMP {
        get { return result.hasMP; }
      }
      public int MP {
        get { return result.MP; }
        set { SetMP(value); }
      }
      public Builder SetMP(int value) {
        PrepareBuilder();
        result.hasMP = true;
        result.mP_ = value;
        return this;
      }
      public Builder ClearMP() {
        PrepareBuilder();
        result.hasMP = false;
        result.mP_ = 0;
        return this;
      }
      
      public bool HasRage {
        get { return result.hasRage; }
      }
      public int Rage {
        get { return result.Rage; }
        set { SetRage(value); }
      }
      public Builder SetRage(int value) {
        PrepareBuilder();
        result.hasRage = true;
        result.rage_ = value;
        return this;
      }
      public Builder ClearRage() {
        PrepareBuilder();
        result.hasRage = false;
        result.rage_ = 0;
        return this;
      }
      
      public bool HasSchedule {
        get { return result.hasSchedule; }
      }
      public int Schedule {
        get { return result.Schedule; }
        set { SetSchedule(value); }
      }
      public Builder SetSchedule(int value) {
        PrepareBuilder();
        result.hasSchedule = true;
        result.schedule_ = value;
        return this;
      }
      public Builder ClearSchedule() {
        PrepareBuilder();
        result.hasSchedule = false;
        result.schedule_ = 0;
        return this;
      }
      
      public bool HasMonsterCount {
        get { return result.hasMonsterCount; }
      }
      public int MonsterCount {
        get { return result.MonsterCount; }
        set { SetMonsterCount(value); }
      }
      public Builder SetMonsterCount(int value) {
        PrepareBuilder();
        result.hasMonsterCount = true;
        result.monsterCount_ = value;
        return this;
      }
      public Builder ClearMonsterCount() {
        PrepareBuilder();
        result.hasMonsterCount = false;
        result.monsterCount_ = 0;
        return this;
      }
      
      public bool HasBossCount {
        get { return result.hasBossCount; }
      }
      public int BossCount {
        get { return result.BossCount; }
        set { SetBossCount(value); }
      }
      public Builder SetBossCount(int value) {
        PrepareBuilder();
        result.hasBossCount = true;
        result.bossCount_ = value;
        return this;
      }
      public Builder ClearBossCount() {
        PrepareBuilder();
        result.hasBossCount = false;
        result.bossCount_ = 0;
        return this;
      }
      
      public bool HasOnePlayerCount {
        get { return result.hasOnePlayerCount; }
      }
      public int OnePlayerCount {
        get { return result.OnePlayerCount; }
        set { SetOnePlayerCount(value); }
      }
      public Builder SetOnePlayerCount(int value) {
        PrepareBuilder();
        result.hasOnePlayerCount = true;
        result.onePlayerCount_ = value;
        return this;
      }
      public Builder ClearOnePlayerCount() {
        PrepareBuilder();
        result.hasOnePlayerCount = false;
        result.onePlayerCount_ = 0;
        return this;
      }
      
      public bool HasUnrewarded {
        get { return result.hasUnrewarded; }
      }
      public string Unrewarded {
        get { return result.Unrewarded; }
        set { SetUnrewarded(value); }
      }
      public Builder SetUnrewarded(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUnrewarded = true;
        result.unrewarded_ = value;
        return this;
      }
      public Builder ClearUnrewarded() {
        PrepareBuilder();
        result.hasUnrewarded = false;
        result.unrewarded_ = "";
        return this;
      }
      
      public bool HasTollgateType {
        get { return result.hasTollgateType; }
      }
      public int TollgateType {
        get { return result.TollgateType; }
        set { SetTollgateType(value); }
      }
      public Builder SetTollgateType(int value) {
        PrepareBuilder();
        result.hasTollgateType = true;
        result.tollgateType_ = value;
        return this;
      }
      public Builder ClearTollgateType() {
        PrepareBuilder();
        result.hasTollgateType = false;
        result.tollgateType_ = 0;
        return this;
      }
      
      public bool HasEnemyList {
        get { return result.hasEnemyList; }
      }
      public string EnemyList {
        get { return result.EnemyList; }
        set { SetEnemyList(value); }
      }
      public Builder SetEnemyList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEnemyList = true;
        result.enemyList_ = value;
        return this;
      }
      public Builder ClearEnemyList() {
        PrepareBuilder();
        result.hasEnemyList = false;
        result.enemyList_ = "";
        return this;
      }
      
      public bool HasEnemyAttrList {
        get { return result.hasEnemyAttrList; }
      }
      public string EnemyAttrList {
        get { return result.EnemyAttrList; }
        set { SetEnemyAttrList(value); }
      }
      public Builder SetEnemyAttrList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEnemyAttrList = true;
        result.enemyAttrList_ = value;
        return this;
      }
      public Builder ClearEnemyAttrList() {
        PrepareBuilder();
        result.hasEnemyAttrList = false;
        result.enemyAttrList_ = "";
        return this;
      }
      
      public bool HasImageA {
        get { return result.hasImageA; }
      }
      public pb::ByteString ImageA {
        get { return result.ImageA; }
        set { SetImageA(value); }
      }
      public Builder SetImageA(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImageA = true;
        result.imageA_ = value;
        return this;
      }
      public Builder ClearImageA() {
        PrepareBuilder();
        result.hasImageA = false;
        result.imageA_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasImageB {
        get { return result.hasImageB; }
      }
      public pb::ByteString ImageB {
        get { return result.ImageB; }
        set { SetImageB(value); }
      }
      public Builder SetImageB(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImageB = true;
        result.imageB_ = value;
        return this;
      }
      public Builder ClearImageB() {
        PrepareBuilder();
        result.hasImageB = false;
        result.imageB_ = pb::ByteString.Empty;
        return this;
      }
    }
    static DS_ExpeditionInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_MailStateInfo : pb::GeneratedMessage<DS_MailStateInfo, DS_MailStateInfo.Builder> {
    private DS_MailStateInfo() { }
    private static readonly DS_MailStateInfo defaultInstance = new DS_MailStateInfo().MakeReadOnly();
    private static readonly string[] _dSMailStateInfoFieldNames = new string[] { "ExpiryDate", "Guid", "IsRead", "IsReceived", "IsValid", "MailGuid", "UserGuid" };
    private static readonly uint[] _dSMailStateInfoFieldTags = new uint[] { 58, 10, 40, 48, 24, 32, 16 };
    public static DS_MailStateInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_MailStateInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_MailStateInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MailStateInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_MailStateInfo, DS_MailStateInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_MailStateInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int MailGuidFieldNumber = 4;
    private bool hasMailGuid;
    private long mailGuid_;
    public bool HasMailGuid {
      get { return hasMailGuid; }
    }
    public long MailGuid {
      get { return mailGuid_; }
    }
    
    public const int IsReadFieldNumber = 5;
    private bool hasIsRead;
    private bool isRead_;
    public bool HasIsRead {
      get { return hasIsRead; }
    }
    public bool IsRead {
      get { return isRead_; }
    }
    
    public const int IsReceivedFieldNumber = 6;
    private bool hasIsReceived;
    private bool isReceived_;
    public bool HasIsReceived {
      get { return hasIsReceived; }
    }
    public bool IsReceived {
      get { return isReceived_; }
    }
    
    public const int ExpiryDateFieldNumber = 7;
    private bool hasExpiryDate;
    private string expiryDate_ = "";
    public bool HasExpiryDate {
      get { return hasExpiryDate; }
    }
    public string ExpiryDate {
      get { return expiryDate_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasMailGuid) return false;
        if (!hasIsRead) return false;
        if (!hasIsReceived) return false;
        if (!hasExpiryDate) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSMailStateInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[1], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[6], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[4], IsValid);
      }
      if (hasMailGuid) {
        output.WriteInt64(4, field_names[5], MailGuid);
      }
      if (hasIsRead) {
        output.WriteBool(5, field_names[2], IsRead);
      }
      if (hasIsReceived) {
        output.WriteBool(6, field_names[3], IsReceived);
      }
      if (hasExpiryDate) {
        output.WriteString(7, field_names[0], ExpiryDate);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasMailGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, MailGuid);
        }
        if (hasIsRead) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, IsRead);
        }
        if (hasIsReceived) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsReceived);
        }
        if (hasExpiryDate) {
          size += pb::CodedOutputStream.ComputeStringSize(7, ExpiryDate);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_MailStateInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_MailStateInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_MailStateInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_MailStateInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_MailStateInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_MailStateInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_MailStateInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_MailStateInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_MailStateInfo result;
      
      private DS_MailStateInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_MailStateInfo original = result;
          result = new DS_MailStateInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_MailStateInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_MailStateInfo.Descriptor; }
      }
      
      public override DS_MailStateInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_MailStateInfo.DefaultInstance; }
      }
      
      public override DS_MailStateInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_MailStateInfo) {
          return MergeFrom((DS_MailStateInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_MailStateInfo other) {
        if (other == global::DashFire.DataStore.DS_MailStateInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasMailGuid) {
          MailGuid = other.MailGuid;
        }
        if (other.HasIsRead) {
          IsRead = other.IsRead;
        }
        if (other.HasIsReceived) {
          IsReceived = other.IsReceived;
        }
        if (other.HasExpiryDate) {
          ExpiryDate = other.ExpiryDate;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSMailStateInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSMailStateInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasMailGuid = input.ReadInt64(ref result.mailGuid_);
              break;
            }
            case 40: {
              result.hasIsRead = input.ReadBool(ref result.isRead_);
              break;
            }
            case 48: {
              result.hasIsReceived = input.ReadBool(ref result.isReceived_);
              break;
            }
            case 58: {
              result.hasExpiryDate = input.ReadString(ref result.expiryDate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasMailGuid {
        get { return result.hasMailGuid; }
      }
      public long MailGuid {
        get { return result.MailGuid; }
        set { SetMailGuid(value); }
      }
      public Builder SetMailGuid(long value) {
        PrepareBuilder();
        result.hasMailGuid = true;
        result.mailGuid_ = value;
        return this;
      }
      public Builder ClearMailGuid() {
        PrepareBuilder();
        result.hasMailGuid = false;
        result.mailGuid_ = 0L;
        return this;
      }
      
      public bool HasIsRead {
        get { return result.hasIsRead; }
      }
      public bool IsRead {
        get { return result.IsRead; }
        set { SetIsRead(value); }
      }
      public Builder SetIsRead(bool value) {
        PrepareBuilder();
        result.hasIsRead = true;
        result.isRead_ = value;
        return this;
      }
      public Builder ClearIsRead() {
        PrepareBuilder();
        result.hasIsRead = false;
        result.isRead_ = false;
        return this;
      }
      
      public bool HasIsReceived {
        get { return result.hasIsReceived; }
      }
      public bool IsReceived {
        get { return result.IsReceived; }
        set { SetIsReceived(value); }
      }
      public Builder SetIsReceived(bool value) {
        PrepareBuilder();
        result.hasIsReceived = true;
        result.isReceived_ = value;
        return this;
      }
      public Builder ClearIsReceived() {
        PrepareBuilder();
        result.hasIsReceived = false;
        result.isReceived_ = false;
        return this;
      }
      
      public bool HasExpiryDate {
        get { return result.hasExpiryDate; }
      }
      public string ExpiryDate {
        get { return result.ExpiryDate; }
        set { SetExpiryDate(value); }
      }
      public Builder SetExpiryDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExpiryDate = true;
        result.expiryDate_ = value;
        return this;
      }
      public Builder ClearExpiryDate() {
        PrepareBuilder();
        result.hasExpiryDate = false;
        result.expiryDate_ = "";
        return this;
      }
    }
    static DS_MailStateInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_PartnerInfo : pb::GeneratedMessage<DS_PartnerInfo, DS_PartnerInfo.Builder> {
    private DS_PartnerInfo() { }
    private static readonly DS_PartnerInfo defaultInstance = new DS_PartnerInfo().MakeReadOnly();
    private static readonly string[] _dSPartnerInfoFieldNames = new string[] { "AdditionLevel", "Guid", "IsValid", "PartnerId", "SkillLevel", "UserGuid" };
    private static readonly uint[] _dSPartnerInfoFieldTags = new uint[] { 40, 10, 24, 32, 48, 16 };
    public static DS_PartnerInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_PartnerInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_PartnerInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_PartnerInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_PartnerInfo, DS_PartnerInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_PartnerInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int PartnerIdFieldNumber = 4;
    private bool hasPartnerId;
    private int partnerId_;
    public bool HasPartnerId {
      get { return hasPartnerId; }
    }
    public int PartnerId {
      get { return partnerId_; }
    }
    
    public const int AdditionLevelFieldNumber = 5;
    private bool hasAdditionLevel;
    private int additionLevel_;
    public bool HasAdditionLevel {
      get { return hasAdditionLevel; }
    }
    public int AdditionLevel {
      get { return additionLevel_; }
    }
    
    public const int SkillLevelFieldNumber = 6;
    private bool hasSkillLevel;
    private int skillLevel_;
    public bool HasSkillLevel {
      get { return hasSkillLevel; }
    }
    public int SkillLevel {
      get { return skillLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasPartnerId) return false;
        if (!hasAdditionLevel) return false;
        if (!hasSkillLevel) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPartnerInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[1], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[5], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[2], IsValid);
      }
      if (hasPartnerId) {
        output.WriteInt32(4, field_names[3], PartnerId);
      }
      if (hasAdditionLevel) {
        output.WriteInt32(5, field_names[0], AdditionLevel);
      }
      if (hasSkillLevel) {
        output.WriteInt32(6, field_names[4], SkillLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasPartnerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, PartnerId);
        }
        if (hasAdditionLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, AdditionLevel);
        }
        if (hasSkillLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, SkillLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_PartnerInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_PartnerInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_PartnerInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_PartnerInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_PartnerInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_PartnerInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_PartnerInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_PartnerInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_PartnerInfo result;
      
      private DS_PartnerInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_PartnerInfo original = result;
          result = new DS_PartnerInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_PartnerInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_PartnerInfo.Descriptor; }
      }
      
      public override DS_PartnerInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_PartnerInfo.DefaultInstance; }
      }
      
      public override DS_PartnerInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_PartnerInfo) {
          return MergeFrom((DS_PartnerInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_PartnerInfo other) {
        if (other == global::DashFire.DataStore.DS_PartnerInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasPartnerId) {
          PartnerId = other.PartnerId;
        }
        if (other.HasAdditionLevel) {
          AdditionLevel = other.AdditionLevel;
        }
        if (other.HasSkillLevel) {
          SkillLevel = other.SkillLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPartnerInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPartnerInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasPartnerId = input.ReadInt32(ref result.partnerId_);
              break;
            }
            case 40: {
              result.hasAdditionLevel = input.ReadInt32(ref result.additionLevel_);
              break;
            }
            case 48: {
              result.hasSkillLevel = input.ReadInt32(ref result.skillLevel_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasPartnerId {
        get { return result.hasPartnerId; }
      }
      public int PartnerId {
        get { return result.PartnerId; }
        set { SetPartnerId(value); }
      }
      public Builder SetPartnerId(int value) {
        PrepareBuilder();
        result.hasPartnerId = true;
        result.partnerId_ = value;
        return this;
      }
      public Builder ClearPartnerId() {
        PrepareBuilder();
        result.hasPartnerId = false;
        result.partnerId_ = 0;
        return this;
      }
      
      public bool HasAdditionLevel {
        get { return result.hasAdditionLevel; }
      }
      public int AdditionLevel {
        get { return result.AdditionLevel; }
        set { SetAdditionLevel(value); }
      }
      public Builder SetAdditionLevel(int value) {
        PrepareBuilder();
        result.hasAdditionLevel = true;
        result.additionLevel_ = value;
        return this;
      }
      public Builder ClearAdditionLevel() {
        PrepareBuilder();
        result.hasAdditionLevel = false;
        result.additionLevel_ = 0;
        return this;
      }
      
      public bool HasSkillLevel {
        get { return result.hasSkillLevel; }
      }
      public int SkillLevel {
        get { return result.SkillLevel; }
        set { SetSkillLevel(value); }
      }
      public Builder SetSkillLevel(int value) {
        PrepareBuilder();
        result.hasSkillLevel = true;
        result.skillLevel_ = value;
        return this;
      }
      public Builder ClearSkillLevel() {
        PrepareBuilder();
        result.hasSkillLevel = false;
        result.skillLevel_ = 0;
        return this;
      }
    }
    static DS_PartnerInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DS_FriendInfo : pb::GeneratedMessage<DS_FriendInfo, DS_FriendInfo.Builder> {
    private DS_FriendInfo() { }
    private static readonly DS_FriendInfo defaultInstance = new DS_FriendInfo().MakeReadOnly();
    private static readonly string[] _dSFriendInfoFieldNames = new string[] { "FightingScore", "FriendGuid", "FriendNickname", "Guid", "HeroId", "IsValid", "Level", "UserGuid" };
    private static readonly uint[] _dSFriendInfoFieldTags = new uint[] { 64, 32, 42, 10, 48, 24, 56, 16 };
    public static DS_FriendInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DS_FriendInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DS_FriendInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DS_FriendInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DS_FriendInfo, DS_FriendInfo.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DS_FriendInfo__FieldAccessorTable; }
    }
    
    public const int GuidFieldNumber = 1;
    private bool hasGuid;
    private string guid_ = "";
    public bool HasGuid {
      get { return hasGuid; }
    }
    public string Guid {
      get { return guid_; }
    }
    
    public const int UserGuidFieldNumber = 2;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int IsValidFieldNumber = 3;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int FriendGuidFieldNumber = 4;
    private bool hasFriendGuid;
    private long friendGuid_;
    public bool HasFriendGuid {
      get { return hasFriendGuid; }
    }
    public long FriendGuid {
      get { return friendGuid_; }
    }
    
    public const int FriendNicknameFieldNumber = 5;
    private bool hasFriendNickname;
    private string friendNickname_ = "";
    public bool HasFriendNickname {
      get { return hasFriendNickname; }
    }
    public string FriendNickname {
      get { return friendNickname_; }
    }
    
    public const int HeroIdFieldNumber = 6;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int LevelFieldNumber = 7;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int FightingScoreFieldNumber = 8;
    private bool hasFightingScore;
    private int fightingScore_;
    public bool HasFightingScore {
      get { return hasFightingScore; }
    }
    public int FightingScore {
      get { return fightingScore_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGuid) return false;
        if (!hasUserGuid) return false;
        if (!hasIsValid) return false;
        if (!hasFriendGuid) return false;
        if (!hasFriendNickname) return false;
        if (!hasHeroId) return false;
        if (!hasLevel) return false;
        if (!hasFightingScore) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSFriendInfoFieldNames;
      if (hasGuid) {
        output.WriteString(1, field_names[3], Guid);
      }
      if (hasUserGuid) {
        output.WriteInt64(2, field_names[7], UserGuid);
      }
      if (hasIsValid) {
        output.WriteBool(3, field_names[5], IsValid);
      }
      if (hasFriendGuid) {
        output.WriteInt64(4, field_names[1], FriendGuid);
      }
      if (hasFriendNickname) {
        output.WriteString(5, field_names[2], FriendNickname);
      }
      if (hasHeroId) {
        output.WriteInt32(6, field_names[4], HeroId);
      }
      if (hasLevel) {
        output.WriteInt32(7, field_names[6], Level);
      }
      if (hasFightingScore) {
        output.WriteInt32(8, field_names[0], FightingScore);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGuid) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Guid);
        }
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, UserGuid);
        }
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsValid);
        }
        if (hasFriendGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, FriendGuid);
        }
        if (hasFriendNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(5, FriendNickname);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, HeroId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Level);
        }
        if (hasFightingScore) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, FightingScore);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DS_FriendInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DS_FriendInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DS_FriendInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DS_FriendInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DS_FriendInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DS_FriendInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DS_FriendInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DS_FriendInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DS_FriendInfo result;
      
      private DS_FriendInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          DS_FriendInfo original = result;
          result = new DS_FriendInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DS_FriendInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DS_FriendInfo.Descriptor; }
      }
      
      public override DS_FriendInfo DefaultInstanceForType {
        get { return global::DashFire.DataStore.DS_FriendInfo.DefaultInstance; }
      }
      
      public override DS_FriendInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DS_FriendInfo) {
          return MergeFrom((DS_FriendInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DS_FriendInfo other) {
        if (other == global::DashFire.DataStore.DS_FriendInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasFriendGuid) {
          FriendGuid = other.FriendGuid;
        }
        if (other.HasFriendNickname) {
          FriendNickname = other.FriendNickname;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasFightingScore) {
          FightingScore = other.FightingScore;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSFriendInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSFriendInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGuid = input.ReadString(ref result.guid_);
              break;
            }
            case 16: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 24: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 32: {
              result.hasFriendGuid = input.ReadInt64(ref result.friendGuid_);
              break;
            }
            case 42: {
              result.hasFriendNickname = input.ReadString(ref result.friendNickname_);
              break;
            }
            case 48: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 56: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 64: {
              result.hasFightingScore = input.ReadInt32(ref result.fightingScore_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGuid {
        get { return result.hasGuid; }
      }
      public string Guid {
        get { return result.Guid; }
        set { SetGuid(value); }
      }
      public Builder SetGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuid = true;
        result.guid_ = value;
        return this;
      }
      public Builder ClearGuid() {
        PrepareBuilder();
        result.hasGuid = false;
        result.guid_ = "";
        return this;
      }
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasFriendGuid {
        get { return result.hasFriendGuid; }
      }
      public long FriendGuid {
        get { return result.FriendGuid; }
        set { SetFriendGuid(value); }
      }
      public Builder SetFriendGuid(long value) {
        PrepareBuilder();
        result.hasFriendGuid = true;
        result.friendGuid_ = value;
        return this;
      }
      public Builder ClearFriendGuid() {
        PrepareBuilder();
        result.hasFriendGuid = false;
        result.friendGuid_ = 0L;
        return this;
      }
      
      public bool HasFriendNickname {
        get { return result.hasFriendNickname; }
      }
      public string FriendNickname {
        get { return result.FriendNickname; }
        set { SetFriendNickname(value); }
      }
      public Builder SetFriendNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFriendNickname = true;
        result.friendNickname_ = value;
        return this;
      }
      public Builder ClearFriendNickname() {
        PrepareBuilder();
        result.hasFriendNickname = false;
        result.friendNickname_ = "";
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasFightingScore {
        get { return result.hasFightingScore; }
      }
      public int FightingScore {
        get { return result.FightingScore; }
        set { SetFightingScore(value); }
      }
      public Builder SetFightingScore(int value) {
        PrepareBuilder();
        result.hasFightingScore = true;
        result.fightingScore_ = value;
        return this;
      }
      public Builder ClearFightingScore() {
        PrepareBuilder();
        result.hasFightingScore = false;
        result.fightingScore_ = 0;
        return this;
      }
    }
    static DS_FriendInfo() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSP_Account : pb::GeneratedMessage<DSP_Account, DSP_Account.Builder> {
    private DSP_Account() { }
    private static readonly DSP_Account defaultInstance = new DSP_Account().MakeReadOnly();
    private static readonly string[] _dSPAccountFieldNames = new string[] { "Account", "AccountBasic", "UserList" };
    private static readonly uint[] _dSPAccountFieldTags = new uint[] { 10, 18, 26 };
    public static DSP_Account DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSP_Account DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSP_Account ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_Account__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSP_Account, DSP_Account.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_Account__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int AccountBasicFieldNumber = 2;
    private bool hasAccountBasic;
    private global::DashFire.DataStore.DS_Account accountBasic_;
    public bool HasAccountBasic {
      get { return hasAccountBasic; }
    }
    public global::DashFire.DataStore.DS_Account AccountBasic {
      get { return accountBasic_ ?? global::DashFire.DataStore.DS_Account.DefaultInstance; }
    }
    
    public const int UserListFieldNumber = 3;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_UserInfo> userList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_UserInfo>();
    public scg::IList<global::DashFire.DataStore.DS_UserInfo> UserListList {
      get { return userList_; }
    }
    public int UserListCount {
      get { return userList_.Count; }
    }
    public global::DashFire.DataStore.DS_UserInfo GetUserList(int index) {
      return userList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasAccountBasic) return false;
        if (!AccountBasic.IsInitialized) return false;
        foreach (global::DashFire.DataStore.DS_UserInfo element in UserListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPAccountFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasAccountBasic) {
        output.WriteMessage(2, field_names[1], AccountBasic);
      }
      if (userList_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], userList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasAccountBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, AccountBasic);
        }
        foreach (global::DashFire.DataStore.DS_UserInfo element in UserListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSP_Account ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_Account ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_Account ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_Account ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_Account ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_Account ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSP_Account ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSP_Account ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSP_Account ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_Account ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSP_Account MakeReadOnly() {
      userList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSP_Account prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSP_Account, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSP_Account cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSP_Account result;
      
      private DSP_Account PrepareBuilder() {
        if (resultIsReadOnly) {
          DSP_Account original = result;
          result = new DSP_Account();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSP_Account MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSP_Account.Descriptor; }
      }
      
      public override DSP_Account DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSP_Account.DefaultInstance; }
      }
      
      public override DSP_Account BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSP_Account) {
          return MergeFrom((DSP_Account) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSP_Account other) {
        if (other == global::DashFire.DataStore.DSP_Account.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasAccountBasic) {
          MergeAccountBasic(other.AccountBasic);
        }
        if (other.userList_.Count != 0) {
          result.userList_.Add(other.userList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 18: {
              global::DashFire.DataStore.DS_Account.Builder subBuilder = global::DashFire.DataStore.DS_Account.CreateBuilder();
              if (result.hasAccountBasic) {
                subBuilder.MergeFrom(AccountBasic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountBasic = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.userList_, global::DashFire.DataStore.DS_UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasAccountBasic {
       get { return result.hasAccountBasic; }
      }
      public global::DashFire.DataStore.DS_Account AccountBasic {
        get { return result.AccountBasic; }
        set { SetAccountBasic(value); }
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = value;
        return this;
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountBasic &&
            result.accountBasic_ != global::DashFire.DataStore.DS_Account.DefaultInstance) {
            result.accountBasic_ = global::DashFire.DataStore.DS_Account.CreateBuilder(result.accountBasic_).MergeFrom(value).BuildPartial();
        } else {
          result.accountBasic_ = value;
        }
        result.hasAccountBasic = true;
        return this;
      }
      public Builder ClearAccountBasic() {
        PrepareBuilder();
        result.hasAccountBasic = false;
        result.accountBasic_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_UserInfo> UserListList {
        get { return PrepareBuilder().userList_; }
      }
      public int UserListCount {
        get { return result.UserListCount; }
      }
      public global::DashFire.DataStore.DS_UserInfo GetUserList(int index) {
        return result.GetUserList(index);
      }
      public Builder SetUserList(int index, global::DashFire.DataStore.DS_UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userList_[index] = value;
        return this;
      }
      public Builder SetUserList(int index, global::DashFire.DataStore.DS_UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserList(global::DashFire.DataStore.DS_UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userList_.Add(value);
        return this;
      }
      public Builder AddUserList(global::DashFire.DataStore.DS_UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserList(scg::IEnumerable<global::DashFire.DataStore.DS_UserInfo> values) {
        PrepareBuilder();
        result.userList_.Add(values);
        return this;
      }
      public Builder ClearUserList() {
        PrepareBuilder();
        result.userList_.Clear();
        return this;
      }
    }
    static DSP_Account() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSP_User : pb::GeneratedMessage<DSP_User, DSP_User.Builder> {
    private DSP_User() { }
    private static readonly DSP_User defaultInstance = new DSP_User().MakeReadOnly();
    private static readonly string[] _dSPUserFieldNames = new string[] { "EquipList", "FriendList", "ItemList", "LegacyList", "LevelList", "MailStateList", "MissionList", "PartnerList", "SkillList", "UserBasic", "UserExpedition", "UserExtra", "UserGuid", "XSoulList" };
    private static readonly uint[] _dSPUserFieldTags = new uint[] { 34, 114, 42, 50, 82, 98, 74, 106, 66, 18, 90, 26, 8, 58 };
    public static DSP_User DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSP_User DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSP_User ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_User__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSP_User, DSP_User.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_User__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int UserBasicFieldNumber = 2;
    private bool hasUserBasic;
    private global::DashFire.DataStore.DS_UserInfo userBasic_;
    public bool HasUserBasic {
      get { return hasUserBasic; }
    }
    public global::DashFire.DataStore.DS_UserInfo UserBasic {
      get { return userBasic_ ?? global::DashFire.DataStore.DS_UserInfo.DefaultInstance; }
    }
    
    public const int UserExtraFieldNumber = 3;
    private bool hasUserExtra;
    private global::DashFire.DataStore.DS_UserInfoExtra userExtra_;
    public bool HasUserExtra {
      get { return hasUserExtra; }
    }
    public global::DashFire.DataStore.DS_UserInfoExtra UserExtra {
      get { return userExtra_ ?? global::DashFire.DataStore.DS_UserInfoExtra.DefaultInstance; }
    }
    
    public const int EquipListFieldNumber = 4;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_EquipInfo> equipList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_EquipInfo>();
    public scg::IList<global::DashFire.DataStore.DS_EquipInfo> EquipListList {
      get { return equipList_; }
    }
    public int EquipListCount {
      get { return equipList_.Count; }
    }
    public global::DashFire.DataStore.DS_EquipInfo GetEquipList(int index) {
      return equipList_[index];
    }
    
    public const int ItemListFieldNumber = 5;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_ItemInfo> itemList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_ItemInfo>();
    public scg::IList<global::DashFire.DataStore.DS_ItemInfo> ItemListList {
      get { return itemList_; }
    }
    public int ItemListCount {
      get { return itemList_.Count; }
    }
    public global::DashFire.DataStore.DS_ItemInfo GetItemList(int index) {
      return itemList_[index];
    }
    
    public const int LegacyListFieldNumber = 6;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_LegacyInfo> legacyList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_LegacyInfo>();
    public scg::IList<global::DashFire.DataStore.DS_LegacyInfo> LegacyListList {
      get { return legacyList_; }
    }
    public int LegacyListCount {
      get { return legacyList_.Count; }
    }
    public global::DashFire.DataStore.DS_LegacyInfo GetLegacyList(int index) {
      return legacyList_[index];
    }
    
    public const int XSoulListFieldNumber = 7;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_XSoulInfo> xSoulList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_XSoulInfo>();
    public scg::IList<global::DashFire.DataStore.DS_XSoulInfo> XSoulListList {
      get { return xSoulList_; }
    }
    public int XSoulListCount {
      get { return xSoulList_.Count; }
    }
    public global::DashFire.DataStore.DS_XSoulInfo GetXSoulList(int index) {
      return xSoulList_[index];
    }
    
    public const int SkillListFieldNumber = 8;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_SkillInfo> skillList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_SkillInfo>();
    public scg::IList<global::DashFire.DataStore.DS_SkillInfo> SkillListList {
      get { return skillList_; }
    }
    public int SkillListCount {
      get { return skillList_.Count; }
    }
    public global::DashFire.DataStore.DS_SkillInfo GetSkillList(int index) {
      return skillList_[index];
    }
    
    public const int MissionListFieldNumber = 9;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_MissionInfo> missionList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_MissionInfo>();
    public scg::IList<global::DashFire.DataStore.DS_MissionInfo> MissionListList {
      get { return missionList_; }
    }
    public int MissionListCount {
      get { return missionList_.Count; }
    }
    public global::DashFire.DataStore.DS_MissionInfo GetMissionList(int index) {
      return missionList_[index];
    }
    
    public const int LevelListFieldNumber = 10;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_LevelInfo> levelList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_LevelInfo>();
    public scg::IList<global::DashFire.DataStore.DS_LevelInfo> LevelListList {
      get { return levelList_; }
    }
    public int LevelListCount {
      get { return levelList_.Count; }
    }
    public global::DashFire.DataStore.DS_LevelInfo GetLevelList(int index) {
      return levelList_[index];
    }
    
    public const int UserExpeditionFieldNumber = 11;
    private bool hasUserExpedition;
    private global::DashFire.DataStore.DS_ExpeditionInfo userExpedition_;
    public bool HasUserExpedition {
      get { return hasUserExpedition; }
    }
    public global::DashFire.DataStore.DS_ExpeditionInfo UserExpedition {
      get { return userExpedition_ ?? global::DashFire.DataStore.DS_ExpeditionInfo.DefaultInstance; }
    }
    
    public const int MailStateListFieldNumber = 12;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_MailStateInfo> mailStateList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_MailStateInfo>();
    public scg::IList<global::DashFire.DataStore.DS_MailStateInfo> MailStateListList {
      get { return mailStateList_; }
    }
    public int MailStateListCount {
      get { return mailStateList_.Count; }
    }
    public global::DashFire.DataStore.DS_MailStateInfo GetMailStateList(int index) {
      return mailStateList_[index];
    }
    
    public const int PartnerListFieldNumber = 13;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_PartnerInfo> partnerList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_PartnerInfo>();
    public scg::IList<global::DashFire.DataStore.DS_PartnerInfo> PartnerListList {
      get { return partnerList_; }
    }
    public int PartnerListCount {
      get { return partnerList_.Count; }
    }
    public global::DashFire.DataStore.DS_PartnerInfo GetPartnerList(int index) {
      return partnerList_[index];
    }
    
    public const int FriendListFieldNumber = 14;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_FriendInfo> friendList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_FriendInfo>();
    public scg::IList<global::DashFire.DataStore.DS_FriendInfo> FriendListList {
      get { return friendList_; }
    }
    public int FriendListCount {
      get { return friendList_.Count; }
    }
    public global::DashFire.DataStore.DS_FriendInfo GetFriendList(int index) {
      return friendList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasUserBasic) return false;
        if (!hasUserExtra) return false;
        if (!hasUserExpedition) return false;
        if (!UserBasic.IsInitialized) return false;
        if (!UserExtra.IsInitialized) return false;
        foreach (global::DashFire.DataStore.DS_EquipInfo element in EquipListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_ItemInfo element in ItemListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_LegacyInfo element in LegacyListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_XSoulInfo element in XSoulListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_SkillInfo element in SkillListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_MissionInfo element in MissionListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_LevelInfo element in LevelListList) {
          if (!element.IsInitialized) return false;
        }
        if (!UserExpedition.IsInitialized) return false;
        foreach (global::DashFire.DataStore.DS_MailStateInfo element in MailStateListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_PartnerInfo element in PartnerListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::DashFire.DataStore.DS_FriendInfo element in FriendListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPUserFieldNames;
      if (hasUserGuid) {
        output.WriteInt64(1, field_names[12], UserGuid);
      }
      if (hasUserBasic) {
        output.WriteMessage(2, field_names[9], UserBasic);
      }
      if (hasUserExtra) {
        output.WriteMessage(3, field_names[11], UserExtra);
      }
      if (equipList_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], equipList_);
      }
      if (itemList_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], itemList_);
      }
      if (legacyList_.Count > 0) {
        output.WriteMessageArray(6, field_names[3], legacyList_);
      }
      if (xSoulList_.Count > 0) {
        output.WriteMessageArray(7, field_names[13], xSoulList_);
      }
      if (skillList_.Count > 0) {
        output.WriteMessageArray(8, field_names[8], skillList_);
      }
      if (missionList_.Count > 0) {
        output.WriteMessageArray(9, field_names[6], missionList_);
      }
      if (levelList_.Count > 0) {
        output.WriteMessageArray(10, field_names[4], levelList_);
      }
      if (hasUserExpedition) {
        output.WriteMessage(11, field_names[10], UserExpedition);
      }
      if (mailStateList_.Count > 0) {
        output.WriteMessageArray(12, field_names[5], mailStateList_);
      }
      if (partnerList_.Count > 0) {
        output.WriteMessageArray(13, field_names[7], partnerList_);
      }
      if (friendList_.Count > 0) {
        output.WriteMessageArray(14, field_names[1], friendList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, UserGuid);
        }
        if (hasUserBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, UserBasic);
        }
        if (hasUserExtra) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, UserExtra);
        }
        foreach (global::DashFire.DataStore.DS_EquipInfo element in EquipListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        foreach (global::DashFire.DataStore.DS_ItemInfo element in ItemListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        foreach (global::DashFire.DataStore.DS_LegacyInfo element in LegacyListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        foreach (global::DashFire.DataStore.DS_XSoulInfo element in XSoulListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, element);
        }
        foreach (global::DashFire.DataStore.DS_SkillInfo element in SkillListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, element);
        }
        foreach (global::DashFire.DataStore.DS_MissionInfo element in MissionListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, element);
        }
        foreach (global::DashFire.DataStore.DS_LevelInfo element in LevelListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, element);
        }
        if (hasUserExpedition) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, UserExpedition);
        }
        foreach (global::DashFire.DataStore.DS_MailStateInfo element in MailStateListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, element);
        }
        foreach (global::DashFire.DataStore.DS_PartnerInfo element in PartnerListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(13, element);
        }
        foreach (global::DashFire.DataStore.DS_FriendInfo element in FriendListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(14, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSP_User ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_User ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_User ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_User ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_User ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_User ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSP_User ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSP_User ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSP_User ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_User ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSP_User MakeReadOnly() {
      equipList_.MakeReadOnly();
      itemList_.MakeReadOnly();
      legacyList_.MakeReadOnly();
      xSoulList_.MakeReadOnly();
      skillList_.MakeReadOnly();
      missionList_.MakeReadOnly();
      levelList_.MakeReadOnly();
      mailStateList_.MakeReadOnly();
      partnerList_.MakeReadOnly();
      friendList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSP_User prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSP_User, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSP_User cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSP_User result;
      
      private DSP_User PrepareBuilder() {
        if (resultIsReadOnly) {
          DSP_User original = result;
          result = new DSP_User();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSP_User MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSP_User.Descriptor; }
      }
      
      public override DSP_User DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSP_User.DefaultInstance; }
      }
      
      public override DSP_User BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSP_User) {
          return MergeFrom((DSP_User) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSP_User other) {
        if (other == global::DashFire.DataStore.DSP_User.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasUserBasic) {
          MergeUserBasic(other.UserBasic);
        }
        if (other.HasUserExtra) {
          MergeUserExtra(other.UserExtra);
        }
        if (other.equipList_.Count != 0) {
          result.equipList_.Add(other.equipList_);
        }
        if (other.itemList_.Count != 0) {
          result.itemList_.Add(other.itemList_);
        }
        if (other.legacyList_.Count != 0) {
          result.legacyList_.Add(other.legacyList_);
        }
        if (other.xSoulList_.Count != 0) {
          result.xSoulList_.Add(other.xSoulList_);
        }
        if (other.skillList_.Count != 0) {
          result.skillList_.Add(other.skillList_);
        }
        if (other.missionList_.Count != 0) {
          result.missionList_.Add(other.missionList_);
        }
        if (other.levelList_.Count != 0) {
          result.levelList_.Add(other.levelList_);
        }
        if (other.HasUserExpedition) {
          MergeUserExpedition(other.UserExpedition);
        }
        if (other.mailStateList_.Count != 0) {
          result.mailStateList_.Add(other.mailStateList_);
        }
        if (other.partnerList_.Count != 0) {
          result.partnerList_.Add(other.partnerList_);
        }
        if (other.friendList_.Count != 0) {
          result.friendList_.Add(other.friendList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 18: {
              global::DashFire.DataStore.DS_UserInfo.Builder subBuilder = global::DashFire.DataStore.DS_UserInfo.CreateBuilder();
              if (result.hasUserBasic) {
                subBuilder.MergeFrom(UserBasic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserBasic = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::DashFire.DataStore.DS_UserInfoExtra.Builder subBuilder = global::DashFire.DataStore.DS_UserInfoExtra.CreateBuilder();
              if (result.hasUserExtra) {
                subBuilder.MergeFrom(UserExtra);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserExtra = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.equipList_, global::DashFire.DataStore.DS_EquipInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.itemList_, global::DashFire.DataStore.DS_ItemInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.legacyList_, global::DashFire.DataStore.DS_LegacyInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.xSoulList_, global::DashFire.DataStore.DS_XSoulInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.skillList_, global::DashFire.DataStore.DS_SkillInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.missionList_, global::DashFire.DataStore.DS_MissionInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.levelList_, global::DashFire.DataStore.DS_LevelInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 90: {
              global::DashFire.DataStore.DS_ExpeditionInfo.Builder subBuilder = global::DashFire.DataStore.DS_ExpeditionInfo.CreateBuilder();
              if (result.hasUserExpedition) {
                subBuilder.MergeFrom(UserExpedition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserExpedition = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              input.ReadMessageArray(tag, field_name, result.mailStateList_, global::DashFire.DataStore.DS_MailStateInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 106: {
              input.ReadMessageArray(tag, field_name, result.partnerList_, global::DashFire.DataStore.DS_PartnerInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.friendList_, global::DashFire.DataStore.DS_FriendInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasUserBasic {
       get { return result.hasUserBasic; }
      }
      public global::DashFire.DataStore.DS_UserInfo UserBasic {
        get { return result.UserBasic; }
        set { SetUserBasic(value); }
      }
      public Builder SetUserBasic(global::DashFire.DataStore.DS_UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserBasic = true;
        result.userBasic_ = value;
        return this;
      }
      public Builder SetUserBasic(global::DashFire.DataStore.DS_UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserBasic = true;
        result.userBasic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserBasic(global::DashFire.DataStore.DS_UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserBasic &&
            result.userBasic_ != global::DashFire.DataStore.DS_UserInfo.DefaultInstance) {
            result.userBasic_ = global::DashFire.DataStore.DS_UserInfo.CreateBuilder(result.userBasic_).MergeFrom(value).BuildPartial();
        } else {
          result.userBasic_ = value;
        }
        result.hasUserBasic = true;
        return this;
      }
      public Builder ClearUserBasic() {
        PrepareBuilder();
        result.hasUserBasic = false;
        result.userBasic_ = null;
        return this;
      }
      
      public bool HasUserExtra {
       get { return result.hasUserExtra; }
      }
      public global::DashFire.DataStore.DS_UserInfoExtra UserExtra {
        get { return result.UserExtra; }
        set { SetUserExtra(value); }
      }
      public Builder SetUserExtra(global::DashFire.DataStore.DS_UserInfoExtra value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserExtra = true;
        result.userExtra_ = value;
        return this;
      }
      public Builder SetUserExtra(global::DashFire.DataStore.DS_UserInfoExtra.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserExtra = true;
        result.userExtra_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserExtra(global::DashFire.DataStore.DS_UserInfoExtra value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserExtra &&
            result.userExtra_ != global::DashFire.DataStore.DS_UserInfoExtra.DefaultInstance) {
            result.userExtra_ = global::DashFire.DataStore.DS_UserInfoExtra.CreateBuilder(result.userExtra_).MergeFrom(value).BuildPartial();
        } else {
          result.userExtra_ = value;
        }
        result.hasUserExtra = true;
        return this;
      }
      public Builder ClearUserExtra() {
        PrepareBuilder();
        result.hasUserExtra = false;
        result.userExtra_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_EquipInfo> EquipListList {
        get { return PrepareBuilder().equipList_; }
      }
      public int EquipListCount {
        get { return result.EquipListCount; }
      }
      public global::DashFire.DataStore.DS_EquipInfo GetEquipList(int index) {
        return result.GetEquipList(index);
      }
      public Builder SetEquipList(int index, global::DashFire.DataStore.DS_EquipInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipList_[index] = value;
        return this;
      }
      public Builder SetEquipList(int index, global::DashFire.DataStore.DS_EquipInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEquipList(global::DashFire.DataStore.DS_EquipInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.equipList_.Add(value);
        return this;
      }
      public Builder AddEquipList(global::DashFire.DataStore.DS_EquipInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.equipList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEquipList(scg::IEnumerable<global::DashFire.DataStore.DS_EquipInfo> values) {
        PrepareBuilder();
        result.equipList_.Add(values);
        return this;
      }
      public Builder ClearEquipList() {
        PrepareBuilder();
        result.equipList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_ItemInfo> ItemListList {
        get { return PrepareBuilder().itemList_; }
      }
      public int ItemListCount {
        get { return result.ItemListCount; }
      }
      public global::DashFire.DataStore.DS_ItemInfo GetItemList(int index) {
        return result.GetItemList(index);
      }
      public Builder SetItemList(int index, global::DashFire.DataStore.DS_ItemInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.itemList_[index] = value;
        return this;
      }
      public Builder SetItemList(int index, global::DashFire.DataStore.DS_ItemInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.itemList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItemList(global::DashFire.DataStore.DS_ItemInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.itemList_.Add(value);
        return this;
      }
      public Builder AddItemList(global::DashFire.DataStore.DS_ItemInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.itemList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItemList(scg::IEnumerable<global::DashFire.DataStore.DS_ItemInfo> values) {
        PrepareBuilder();
        result.itemList_.Add(values);
        return this;
      }
      public Builder ClearItemList() {
        PrepareBuilder();
        result.itemList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_LegacyInfo> LegacyListList {
        get { return PrepareBuilder().legacyList_; }
      }
      public int LegacyListCount {
        get { return result.LegacyListCount; }
      }
      public global::DashFire.DataStore.DS_LegacyInfo GetLegacyList(int index) {
        return result.GetLegacyList(index);
      }
      public Builder SetLegacyList(int index, global::DashFire.DataStore.DS_LegacyInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legacyList_[index] = value;
        return this;
      }
      public Builder SetLegacyList(int index, global::DashFire.DataStore.DS_LegacyInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legacyList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegacyList(global::DashFire.DataStore.DS_LegacyInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legacyList_.Add(value);
        return this;
      }
      public Builder AddLegacyList(global::DashFire.DataStore.DS_LegacyInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legacyList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegacyList(scg::IEnumerable<global::DashFire.DataStore.DS_LegacyInfo> values) {
        PrepareBuilder();
        result.legacyList_.Add(values);
        return this;
      }
      public Builder ClearLegacyList() {
        PrepareBuilder();
        result.legacyList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_XSoulInfo> XSoulListList {
        get { return PrepareBuilder().xSoulList_; }
      }
      public int XSoulListCount {
        get { return result.XSoulListCount; }
      }
      public global::DashFire.DataStore.DS_XSoulInfo GetXSoulList(int index) {
        return result.GetXSoulList(index);
      }
      public Builder SetXSoulList(int index, global::DashFire.DataStore.DS_XSoulInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.xSoulList_[index] = value;
        return this;
      }
      public Builder SetXSoulList(int index, global::DashFire.DataStore.DS_XSoulInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.xSoulList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddXSoulList(global::DashFire.DataStore.DS_XSoulInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.xSoulList_.Add(value);
        return this;
      }
      public Builder AddXSoulList(global::DashFire.DataStore.DS_XSoulInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.xSoulList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeXSoulList(scg::IEnumerable<global::DashFire.DataStore.DS_XSoulInfo> values) {
        PrepareBuilder();
        result.xSoulList_.Add(values);
        return this;
      }
      public Builder ClearXSoulList() {
        PrepareBuilder();
        result.xSoulList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_SkillInfo> SkillListList {
        get { return PrepareBuilder().skillList_; }
      }
      public int SkillListCount {
        get { return result.SkillListCount; }
      }
      public global::DashFire.DataStore.DS_SkillInfo GetSkillList(int index) {
        return result.GetSkillList(index);
      }
      public Builder SetSkillList(int index, global::DashFire.DataStore.DS_SkillInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.skillList_[index] = value;
        return this;
      }
      public Builder SetSkillList(int index, global::DashFire.DataStore.DS_SkillInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.skillList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSkillList(global::DashFire.DataStore.DS_SkillInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.skillList_.Add(value);
        return this;
      }
      public Builder AddSkillList(global::DashFire.DataStore.DS_SkillInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.skillList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSkillList(scg::IEnumerable<global::DashFire.DataStore.DS_SkillInfo> values) {
        PrepareBuilder();
        result.skillList_.Add(values);
        return this;
      }
      public Builder ClearSkillList() {
        PrepareBuilder();
        result.skillList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_MissionInfo> MissionListList {
        get { return PrepareBuilder().missionList_; }
      }
      public int MissionListCount {
        get { return result.MissionListCount; }
      }
      public global::DashFire.DataStore.DS_MissionInfo GetMissionList(int index) {
        return result.GetMissionList(index);
      }
      public Builder SetMissionList(int index, global::DashFire.DataStore.DS_MissionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.missionList_[index] = value;
        return this;
      }
      public Builder SetMissionList(int index, global::DashFire.DataStore.DS_MissionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.missionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMissionList(global::DashFire.DataStore.DS_MissionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.missionList_.Add(value);
        return this;
      }
      public Builder AddMissionList(global::DashFire.DataStore.DS_MissionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.missionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMissionList(scg::IEnumerable<global::DashFire.DataStore.DS_MissionInfo> values) {
        PrepareBuilder();
        result.missionList_.Add(values);
        return this;
      }
      public Builder ClearMissionList() {
        PrepareBuilder();
        result.missionList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_LevelInfo> LevelListList {
        get { return PrepareBuilder().levelList_; }
      }
      public int LevelListCount {
        get { return result.LevelListCount; }
      }
      public global::DashFire.DataStore.DS_LevelInfo GetLevelList(int index) {
        return result.GetLevelList(index);
      }
      public Builder SetLevelList(int index, global::DashFire.DataStore.DS_LevelInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.levelList_[index] = value;
        return this;
      }
      public Builder SetLevelList(int index, global::DashFire.DataStore.DS_LevelInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.levelList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLevelList(global::DashFire.DataStore.DS_LevelInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.levelList_.Add(value);
        return this;
      }
      public Builder AddLevelList(global::DashFire.DataStore.DS_LevelInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.levelList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLevelList(scg::IEnumerable<global::DashFire.DataStore.DS_LevelInfo> values) {
        PrepareBuilder();
        result.levelList_.Add(values);
        return this;
      }
      public Builder ClearLevelList() {
        PrepareBuilder();
        result.levelList_.Clear();
        return this;
      }
      
      public bool HasUserExpedition {
       get { return result.hasUserExpedition; }
      }
      public global::DashFire.DataStore.DS_ExpeditionInfo UserExpedition {
        get { return result.UserExpedition; }
        set { SetUserExpedition(value); }
      }
      public Builder SetUserExpedition(global::DashFire.DataStore.DS_ExpeditionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserExpedition = true;
        result.userExpedition_ = value;
        return this;
      }
      public Builder SetUserExpedition(global::DashFire.DataStore.DS_ExpeditionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserExpedition = true;
        result.userExpedition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserExpedition(global::DashFire.DataStore.DS_ExpeditionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserExpedition &&
            result.userExpedition_ != global::DashFire.DataStore.DS_ExpeditionInfo.DefaultInstance) {
            result.userExpedition_ = global::DashFire.DataStore.DS_ExpeditionInfo.CreateBuilder(result.userExpedition_).MergeFrom(value).BuildPartial();
        } else {
          result.userExpedition_ = value;
        }
        result.hasUserExpedition = true;
        return this;
      }
      public Builder ClearUserExpedition() {
        PrepareBuilder();
        result.hasUserExpedition = false;
        result.userExpedition_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_MailStateInfo> MailStateListList {
        get { return PrepareBuilder().mailStateList_; }
      }
      public int MailStateListCount {
        get { return result.MailStateListCount; }
      }
      public global::DashFire.DataStore.DS_MailStateInfo GetMailStateList(int index) {
        return result.GetMailStateList(index);
      }
      public Builder SetMailStateList(int index, global::DashFire.DataStore.DS_MailStateInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mailStateList_[index] = value;
        return this;
      }
      public Builder SetMailStateList(int index, global::DashFire.DataStore.DS_MailStateInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mailStateList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMailStateList(global::DashFire.DataStore.DS_MailStateInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mailStateList_.Add(value);
        return this;
      }
      public Builder AddMailStateList(global::DashFire.DataStore.DS_MailStateInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mailStateList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMailStateList(scg::IEnumerable<global::DashFire.DataStore.DS_MailStateInfo> values) {
        PrepareBuilder();
        result.mailStateList_.Add(values);
        return this;
      }
      public Builder ClearMailStateList() {
        PrepareBuilder();
        result.mailStateList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_PartnerInfo> PartnerListList {
        get { return PrepareBuilder().partnerList_; }
      }
      public int PartnerListCount {
        get { return result.PartnerListCount; }
      }
      public global::DashFire.DataStore.DS_PartnerInfo GetPartnerList(int index) {
        return result.GetPartnerList(index);
      }
      public Builder SetPartnerList(int index, global::DashFire.DataStore.DS_PartnerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.partnerList_[index] = value;
        return this;
      }
      public Builder SetPartnerList(int index, global::DashFire.DataStore.DS_PartnerInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.partnerList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPartnerList(global::DashFire.DataStore.DS_PartnerInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.partnerList_.Add(value);
        return this;
      }
      public Builder AddPartnerList(global::DashFire.DataStore.DS_PartnerInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.partnerList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePartnerList(scg::IEnumerable<global::DashFire.DataStore.DS_PartnerInfo> values) {
        PrepareBuilder();
        result.partnerList_.Add(values);
        return this;
      }
      public Builder ClearPartnerList() {
        PrepareBuilder();
        result.partnerList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_FriendInfo> FriendListList {
        get { return PrepareBuilder().friendList_; }
      }
      public int FriendListCount {
        get { return result.FriendListCount; }
      }
      public global::DashFire.DataStore.DS_FriendInfo GetFriendList(int index) {
        return result.GetFriendList(index);
      }
      public Builder SetFriendList(int index, global::DashFire.DataStore.DS_FriendInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friendList_[index] = value;
        return this;
      }
      public Builder SetFriendList(int index, global::DashFire.DataStore.DS_FriendInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friendList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFriendList(global::DashFire.DataStore.DS_FriendInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friendList_.Add(value);
        return this;
      }
      public Builder AddFriendList(global::DashFire.DataStore.DS_FriendInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friendList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFriendList(scg::IEnumerable<global::DashFire.DataStore.DS_FriendInfo> values) {
        PrepareBuilder();
        result.friendList_.Add(values);
        return this;
      }
      public Builder ClearFriendList() {
        PrepareBuilder();
        result.friendList_.Clear();
        return this;
      }
    }
    static DSP_User() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSP_CreateAccount : pb::GeneratedMessage<DSP_CreateAccount, DSP_CreateAccount.Builder> {
    private DSP_CreateAccount() { }
    private static readonly DSP_CreateAccount defaultInstance = new DSP_CreateAccount().MakeReadOnly();
    private static readonly string[] _dSPCreateAccountFieldNames = new string[] { "Account", "AccountBasic", "UsedActivationCode" };
    private static readonly uint[] _dSPCreateAccountFieldTags = new uint[] { 10, 18, 26 };
    public static DSP_CreateAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSP_CreateAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSP_CreateAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_CreateAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSP_CreateAccount, DSP_CreateAccount.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_CreateAccount__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int AccountBasicFieldNumber = 2;
    private bool hasAccountBasic;
    private global::DashFire.DataStore.DS_Account accountBasic_;
    public bool HasAccountBasic {
      get { return hasAccountBasic; }
    }
    public global::DashFire.DataStore.DS_Account AccountBasic {
      get { return accountBasic_ ?? global::DashFire.DataStore.DS_Account.DefaultInstance; }
    }
    
    public const int UsedActivationCodeFieldNumber = 3;
    private bool hasUsedActivationCode;
    private global::DashFire.DataStore.DS_ActivationCode usedActivationCode_;
    public bool HasUsedActivationCode {
      get { return hasUsedActivationCode; }
    }
    public global::DashFire.DataStore.DS_ActivationCode UsedActivationCode {
      get { return usedActivationCode_ ?? global::DashFire.DataStore.DS_ActivationCode.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasAccountBasic) return false;
        if (!hasUsedActivationCode) return false;
        if (!AccountBasic.IsInitialized) return false;
        if (!UsedActivationCode.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPCreateAccountFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasAccountBasic) {
        output.WriteMessage(2, field_names[1], AccountBasic);
      }
      if (hasUsedActivationCode) {
        output.WriteMessage(3, field_names[2], UsedActivationCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasAccountBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, AccountBasic);
        }
        if (hasUsedActivationCode) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, UsedActivationCode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSP_CreateAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSP_CreateAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_CreateAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSP_CreateAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSP_CreateAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSP_CreateAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSP_CreateAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSP_CreateAccount result;
      
      private DSP_CreateAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          DSP_CreateAccount original = result;
          result = new DSP_CreateAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSP_CreateAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSP_CreateAccount.Descriptor; }
      }
      
      public override DSP_CreateAccount DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSP_CreateAccount.DefaultInstance; }
      }
      
      public override DSP_CreateAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSP_CreateAccount) {
          return MergeFrom((DSP_CreateAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSP_CreateAccount other) {
        if (other == global::DashFire.DataStore.DSP_CreateAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasAccountBasic) {
          MergeAccountBasic(other.AccountBasic);
        }
        if (other.HasUsedActivationCode) {
          MergeUsedActivationCode(other.UsedActivationCode);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPCreateAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPCreateAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 18: {
              global::DashFire.DataStore.DS_Account.Builder subBuilder = global::DashFire.DataStore.DS_Account.CreateBuilder();
              if (result.hasAccountBasic) {
                subBuilder.MergeFrom(AccountBasic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountBasic = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::DashFire.DataStore.DS_ActivationCode.Builder subBuilder = global::DashFire.DataStore.DS_ActivationCode.CreateBuilder();
              if (result.hasUsedActivationCode) {
                subBuilder.MergeFrom(UsedActivationCode);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UsedActivationCode = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasAccountBasic {
       get { return result.hasAccountBasic; }
      }
      public global::DashFire.DataStore.DS_Account AccountBasic {
        get { return result.AccountBasic; }
        set { SetAccountBasic(value); }
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = value;
        return this;
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountBasic &&
            result.accountBasic_ != global::DashFire.DataStore.DS_Account.DefaultInstance) {
            result.accountBasic_ = global::DashFire.DataStore.DS_Account.CreateBuilder(result.accountBasic_).MergeFrom(value).BuildPartial();
        } else {
          result.accountBasic_ = value;
        }
        result.hasAccountBasic = true;
        return this;
      }
      public Builder ClearAccountBasic() {
        PrepareBuilder();
        result.hasAccountBasic = false;
        result.accountBasic_ = null;
        return this;
      }
      
      public bool HasUsedActivationCode {
       get { return result.hasUsedActivationCode; }
      }
      public global::DashFire.DataStore.DS_ActivationCode UsedActivationCode {
        get { return result.UsedActivationCode; }
        set { SetUsedActivationCode(value); }
      }
      public Builder SetUsedActivationCode(global::DashFire.DataStore.DS_ActivationCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsedActivationCode = true;
        result.usedActivationCode_ = value;
        return this;
      }
      public Builder SetUsedActivationCode(global::DashFire.DataStore.DS_ActivationCode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUsedActivationCode = true;
        result.usedActivationCode_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUsedActivationCode(global::DashFire.DataStore.DS_ActivationCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUsedActivationCode &&
            result.usedActivationCode_ != global::DashFire.DataStore.DS_ActivationCode.DefaultInstance) {
            result.usedActivationCode_ = global::DashFire.DataStore.DS_ActivationCode.CreateBuilder(result.usedActivationCode_).MergeFrom(value).BuildPartial();
        } else {
          result.usedActivationCode_ = value;
        }
        result.hasUsedActivationCode = true;
        return this;
      }
      public Builder ClearUsedActivationCode() {
        PrepareBuilder();
        result.hasUsedActivationCode = false;
        result.usedActivationCode_ = null;
        return this;
      }
    }
    static DSP_CreateAccount() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSP_CreateUser : pb::GeneratedMessage<DSP_CreateUser, DSP_CreateUser.Builder> {
    private DSP_CreateUser() { }
    private static readonly DSP_CreateUser defaultInstance = new DSP_CreateUser().MakeReadOnly();
    private static readonly string[] _dSPCreateUserFieldNames = new string[] { "Account", "AccountBasic", "UsedNickname" };
    private static readonly uint[] _dSPCreateUserFieldTags = new uint[] { 10, 18, 26 };
    public static DSP_CreateUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSP_CreateUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSP_CreateUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_CreateUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSP_CreateUser, DSP_CreateUser.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_CreateUser__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int AccountBasicFieldNumber = 2;
    private bool hasAccountBasic;
    private global::DashFire.DataStore.DS_Account accountBasic_;
    public bool HasAccountBasic {
      get { return hasAccountBasic; }
    }
    public global::DashFire.DataStore.DS_Account AccountBasic {
      get { return accountBasic_ ?? global::DashFire.DataStore.DS_Account.DefaultInstance; }
    }
    
    public const int UsedNicknameFieldNumber = 3;
    private bool hasUsedNickname;
    private global::DashFire.DataStore.DS_Nickname usedNickname_;
    public bool HasUsedNickname {
      get { return hasUsedNickname; }
    }
    public global::DashFire.DataStore.DS_Nickname UsedNickname {
      get { return usedNickname_ ?? global::DashFire.DataStore.DS_Nickname.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasAccountBasic) return false;
        if (!hasUsedNickname) return false;
        if (!AccountBasic.IsInitialized) return false;
        if (!UsedNickname.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPCreateUserFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasAccountBasic) {
        output.WriteMessage(2, field_names[1], AccountBasic);
      }
      if (hasUsedNickname) {
        output.WriteMessage(3, field_names[2], UsedNickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasAccountBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, AccountBasic);
        }
        if (hasUsedNickname) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, UsedNickname);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSP_CreateUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSP_CreateUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSP_CreateUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_CreateUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSP_CreateUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSP_CreateUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSP_CreateUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSP_CreateUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSP_CreateUser result;
      
      private DSP_CreateUser PrepareBuilder() {
        if (resultIsReadOnly) {
          DSP_CreateUser original = result;
          result = new DSP_CreateUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSP_CreateUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSP_CreateUser.Descriptor; }
      }
      
      public override DSP_CreateUser DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSP_CreateUser.DefaultInstance; }
      }
      
      public override DSP_CreateUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSP_CreateUser) {
          return MergeFrom((DSP_CreateUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSP_CreateUser other) {
        if (other == global::DashFire.DataStore.DSP_CreateUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasAccountBasic) {
          MergeAccountBasic(other.AccountBasic);
        }
        if (other.HasUsedNickname) {
          MergeUsedNickname(other.UsedNickname);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPCreateUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPCreateUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 18: {
              global::DashFire.DataStore.DS_Account.Builder subBuilder = global::DashFire.DataStore.DS_Account.CreateBuilder();
              if (result.hasAccountBasic) {
                subBuilder.MergeFrom(AccountBasic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountBasic = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::DashFire.DataStore.DS_Nickname.Builder subBuilder = global::DashFire.DataStore.DS_Nickname.CreateBuilder();
              if (result.hasUsedNickname) {
                subBuilder.MergeFrom(UsedNickname);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UsedNickname = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasAccountBasic {
       get { return result.hasAccountBasic; }
      }
      public global::DashFire.DataStore.DS_Account AccountBasic {
        get { return result.AccountBasic; }
        set { SetAccountBasic(value); }
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = value;
        return this;
      }
      public Builder SetAccountBasic(global::DashFire.DataStore.DS_Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountBasic = true;
        result.accountBasic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountBasic(global::DashFire.DataStore.DS_Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountBasic &&
            result.accountBasic_ != global::DashFire.DataStore.DS_Account.DefaultInstance) {
            result.accountBasic_ = global::DashFire.DataStore.DS_Account.CreateBuilder(result.accountBasic_).MergeFrom(value).BuildPartial();
        } else {
          result.accountBasic_ = value;
        }
        result.hasAccountBasic = true;
        return this;
      }
      public Builder ClearAccountBasic() {
        PrepareBuilder();
        result.hasAccountBasic = false;
        result.accountBasic_ = null;
        return this;
      }
      
      public bool HasUsedNickname {
       get { return result.hasUsedNickname; }
      }
      public global::DashFire.DataStore.DS_Nickname UsedNickname {
        get { return result.UsedNickname; }
        set { SetUsedNickname(value); }
      }
      public Builder SetUsedNickname(global::DashFire.DataStore.DS_Nickname value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsedNickname = true;
        result.usedNickname_ = value;
        return this;
      }
      public Builder SetUsedNickname(global::DashFire.DataStore.DS_Nickname.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUsedNickname = true;
        result.usedNickname_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUsedNickname(global::DashFire.DataStore.DS_Nickname value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUsedNickname &&
            result.usedNickname_ != global::DashFire.DataStore.DS_Nickname.DefaultInstance) {
            result.usedNickname_ = global::DashFire.DataStore.DS_Nickname.CreateBuilder(result.usedNickname_).MergeFrom(value).BuildPartial();
        } else {
          result.usedNickname_ = value;
        }
        result.hasUsedNickname = true;
        return this;
      }
      public Builder ClearUsedNickname() {
        PrepareBuilder();
        result.hasUsedNickname = false;
        result.usedNickname_ = null;
        return this;
      }
    }
    static DSP_CreateUser() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSP_UserArena : pb::GeneratedMessage<DSP_UserArena, DSP_UserArena.Builder> {
    private DSP_UserArena() { }
    private static readonly DSP_UserArena defaultInstance = new DSP_UserArena().MakeReadOnly();
    private static readonly string[] _dSPUserArenaFieldNames = new string[] { "ArenaBasic", "ArenaRecordList", "UserGuid" };
    private static readonly uint[] _dSPUserArenaFieldTags = new uint[] { 18, 26, 8 };
    public static DSP_UserArena DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSP_UserArena DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSP_UserArena ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_UserArena__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSP_UserArena, DSP_UserArena.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSP_UserArena__FieldAccessorTable; }
    }
    
    public const int UserGuidFieldNumber = 1;
    private bool hasUserGuid;
    private long userGuid_;
    public bool HasUserGuid {
      get { return hasUserGuid; }
    }
    public long UserGuid {
      get { return userGuid_; }
    }
    
    public const int ArenaBasicFieldNumber = 2;
    private bool hasArenaBasic;
    private global::DashFire.DataStore.DS_ArenaInfo arenaBasic_;
    public bool HasArenaBasic {
      get { return hasArenaBasic; }
    }
    public global::DashFire.DataStore.DS_ArenaInfo ArenaBasic {
      get { return arenaBasic_ ?? global::DashFire.DataStore.DS_ArenaInfo.DefaultInstance; }
    }
    
    public const int ArenaRecordListFieldNumber = 3;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaRecord> arenaRecordList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaRecord>();
    public scg::IList<global::DashFire.DataStore.DS_ArenaRecord> ArenaRecordListList {
      get { return arenaRecordList_; }
    }
    public int ArenaRecordListCount {
      get { return arenaRecordList_.Count; }
    }
    public global::DashFire.DataStore.DS_ArenaRecord GetArenaRecordList(int index) {
      return arenaRecordList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserGuid) return false;
        if (!hasArenaBasic) return false;
        if (!ArenaBasic.IsInitialized) return false;
        foreach (global::DashFire.DataStore.DS_ArenaRecord element in ArenaRecordListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSPUserArenaFieldNames;
      if (hasUserGuid) {
        output.WriteInt64(1, field_names[2], UserGuid);
      }
      if (hasArenaBasic) {
        output.WriteMessage(2, field_names[0], ArenaBasic);
      }
      if (arenaRecordList_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], arenaRecordList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserGuid) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, UserGuid);
        }
        if (hasArenaBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ArenaBasic);
        }
        foreach (global::DashFire.DataStore.DS_ArenaRecord element in ArenaRecordListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSP_UserArena ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSP_UserArena ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSP_UserArena ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSP_UserArena ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSP_UserArena MakeReadOnly() {
      arenaRecordList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSP_UserArena prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSP_UserArena, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSP_UserArena cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSP_UserArena result;
      
      private DSP_UserArena PrepareBuilder() {
        if (resultIsReadOnly) {
          DSP_UserArena original = result;
          result = new DSP_UserArena();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSP_UserArena MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSP_UserArena.Descriptor; }
      }
      
      public override DSP_UserArena DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSP_UserArena.DefaultInstance; }
      }
      
      public override DSP_UserArena BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSP_UserArena) {
          return MergeFrom((DSP_UserArena) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSP_UserArena other) {
        if (other == global::DashFire.DataStore.DSP_UserArena.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserGuid) {
          UserGuid = other.UserGuid;
        }
        if (other.HasArenaBasic) {
          MergeArenaBasic(other.ArenaBasic);
        }
        if (other.arenaRecordList_.Count != 0) {
          result.arenaRecordList_.Add(other.arenaRecordList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSPUserArenaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSPUserArenaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserGuid = input.ReadInt64(ref result.userGuid_);
              break;
            }
            case 18: {
              global::DashFire.DataStore.DS_ArenaInfo.Builder subBuilder = global::DashFire.DataStore.DS_ArenaInfo.CreateBuilder();
              if (result.hasArenaBasic) {
                subBuilder.MergeFrom(ArenaBasic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ArenaBasic = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.arenaRecordList_, global::DashFire.DataStore.DS_ArenaRecord.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserGuid {
        get { return result.hasUserGuid; }
      }
      public long UserGuid {
        get { return result.UserGuid; }
        set { SetUserGuid(value); }
      }
      public Builder SetUserGuid(long value) {
        PrepareBuilder();
        result.hasUserGuid = true;
        result.userGuid_ = value;
        return this;
      }
      public Builder ClearUserGuid() {
        PrepareBuilder();
        result.hasUserGuid = false;
        result.userGuid_ = 0L;
        return this;
      }
      
      public bool HasArenaBasic {
       get { return result.hasArenaBasic; }
      }
      public global::DashFire.DataStore.DS_ArenaInfo ArenaBasic {
        get { return result.ArenaBasic; }
        set { SetArenaBasic(value); }
      }
      public Builder SetArenaBasic(global::DashFire.DataStore.DS_ArenaInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArenaBasic = true;
        result.arenaBasic_ = value;
        return this;
      }
      public Builder SetArenaBasic(global::DashFire.DataStore.DS_ArenaInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasArenaBasic = true;
        result.arenaBasic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeArenaBasic(global::DashFire.DataStore.DS_ArenaInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasArenaBasic &&
            result.arenaBasic_ != global::DashFire.DataStore.DS_ArenaInfo.DefaultInstance) {
            result.arenaBasic_ = global::DashFire.DataStore.DS_ArenaInfo.CreateBuilder(result.arenaBasic_).MergeFrom(value).BuildPartial();
        } else {
          result.arenaBasic_ = value;
        }
        result.hasArenaBasic = true;
        return this;
      }
      public Builder ClearArenaBasic() {
        PrepareBuilder();
        result.hasArenaBasic = false;
        result.arenaBasic_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_ArenaRecord> ArenaRecordListList {
        get { return PrepareBuilder().arenaRecordList_; }
      }
      public int ArenaRecordListCount {
        get { return result.ArenaRecordListCount; }
      }
      public global::DashFire.DataStore.DS_ArenaRecord GetArenaRecordList(int index) {
        return result.GetArenaRecordList(index);
      }
      public Builder SetArenaRecordList(int index, global::DashFire.DataStore.DS_ArenaRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.arenaRecordList_[index] = value;
        return this;
      }
      public Builder SetArenaRecordList(int index, global::DashFire.DataStore.DS_ArenaRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.arenaRecordList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddArenaRecordList(global::DashFire.DataStore.DS_ArenaRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.arenaRecordList_.Add(value);
        return this;
      }
      public Builder AddArenaRecordList(global::DashFire.DataStore.DS_ArenaRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.arenaRecordList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeArenaRecordList(scg::IEnumerable<global::DashFire.DataStore.DS_ArenaRecord> values) {
        PrepareBuilder();
        result.arenaRecordList_.Add(values);
        return this;
      }
      public Builder ClearArenaRecordList() {
        PrepareBuilder();
        result.arenaRecordList_.Clear();
        return this;
      }
    }
    static DSP_UserArena() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_Guid : pb::GeneratedMessage<DSG_Guid, DSG_Guid.Builder> {
    private DSG_Guid() { }
    private static readonly DSG_Guid defaultInstance = new DSG_Guid().MakeReadOnly();
    private static readonly string[] _dSGGuidFieldNames = new string[] { "DataMsgId", "GuidList" };
    private static readonly uint[] _dSGGuidFieldTags = new uint[] { 8, 18 };
    public static DSG_Guid DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_Guid DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_Guid ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Guid__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_Guid, DSG_Guid.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Guid__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int GuidListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_Guid> guidList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_Guid>();
    public scg::IList<global::DashFire.DataStore.DS_Guid> GuidListList {
      get { return guidList_; }
    }
    public int GuidListCount {
      get { return guidList_.Count; }
    }
    public global::DashFire.DataStore.DS_Guid GetGuidList(int index) {
      return guidList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_Guid element in GuidListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGGuidFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (guidList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], guidList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_Guid element in GuidListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_Guid ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_Guid ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_Guid ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_Guid ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Guid ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_Guid MakeReadOnly() {
      guidList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_Guid prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_Guid, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_Guid cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_Guid result;
      
      private DSG_Guid PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_Guid original = result;
          result = new DSG_Guid();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_Guid MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_Guid.Descriptor; }
      }
      
      public override DSG_Guid DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_Guid.DefaultInstance; }
      }
      
      public override DSG_Guid BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_Guid) {
          return MergeFrom((DSG_Guid) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_Guid other) {
        if (other == global::DashFire.DataStore.DSG_Guid.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.guidList_.Count != 0) {
          result.guidList_.Add(other.guidList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGGuidFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGGuidFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.guidList_, global::DashFire.DataStore.DS_Guid.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_Guid> GuidListList {
        get { return PrepareBuilder().guidList_; }
      }
      public int GuidListCount {
        get { return result.GuidListCount; }
      }
      public global::DashFire.DataStore.DS_Guid GetGuidList(int index) {
        return result.GetGuidList(index);
      }
      public Builder SetGuidList(int index, global::DashFire.DataStore.DS_Guid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.guidList_[index] = value;
        return this;
      }
      public Builder SetGuidList(int index, global::DashFire.DataStore.DS_Guid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.guidList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGuidList(global::DashFire.DataStore.DS_Guid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.guidList_.Add(value);
        return this;
      }
      public Builder AddGuidList(global::DashFire.DataStore.DS_Guid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.guidList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGuidList(scg::IEnumerable<global::DashFire.DataStore.DS_Guid> values) {
        PrepareBuilder();
        result.guidList_.Add(values);
        return this;
      }
      public Builder ClearGuidList() {
        PrepareBuilder();
        result.guidList_.Clear();
        return this;
      }
    }
    static DSG_Guid() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_ActivationCode : pb::GeneratedMessage<DSG_ActivationCode, DSG_ActivationCode.Builder> {
    private DSG_ActivationCode() { }
    private static readonly DSG_ActivationCode defaultInstance = new DSG_ActivationCode().MakeReadOnly();
    private static readonly string[] _dSGActivationCodeFieldNames = new string[] { "ActivationCodeList", "DataMsgId" };
    private static readonly uint[] _dSGActivationCodeFieldTags = new uint[] { 18, 8 };
    public static DSG_ActivationCode DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_ActivationCode DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_ActivationCode ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ActivationCode__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_ActivationCode, DSG_ActivationCode.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ActivationCode__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int ActivationCodeListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_ActivationCode> activationCodeList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_ActivationCode>();
    public scg::IList<global::DashFire.DataStore.DS_ActivationCode> ActivationCodeListList {
      get { return activationCodeList_; }
    }
    public int ActivationCodeListCount {
      get { return activationCodeList_.Count; }
    }
    public global::DashFire.DataStore.DS_ActivationCode GetActivationCodeList(int index) {
      return activationCodeList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_ActivationCode element in ActivationCodeListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGActivationCodeFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[1], DataMsgId);
      }
      if (activationCodeList_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], activationCodeList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_ActivationCode element in ActivationCodeListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_ActivationCode ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_ActivationCode ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_ActivationCode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ActivationCode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_ActivationCode MakeReadOnly() {
      activationCodeList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_ActivationCode prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_ActivationCode, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_ActivationCode cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_ActivationCode result;
      
      private DSG_ActivationCode PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_ActivationCode original = result;
          result = new DSG_ActivationCode();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_ActivationCode MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_ActivationCode.Descriptor; }
      }
      
      public override DSG_ActivationCode DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_ActivationCode.DefaultInstance; }
      }
      
      public override DSG_ActivationCode BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_ActivationCode) {
          return MergeFrom((DSG_ActivationCode) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_ActivationCode other) {
        if (other == global::DashFire.DataStore.DSG_ActivationCode.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.activationCodeList_.Count != 0) {
          result.activationCodeList_.Add(other.activationCodeList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGActivationCodeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGActivationCodeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.activationCodeList_, global::DashFire.DataStore.DS_ActivationCode.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_ActivationCode> ActivationCodeListList {
        get { return PrepareBuilder().activationCodeList_; }
      }
      public int ActivationCodeListCount {
        get { return result.ActivationCodeListCount; }
      }
      public global::DashFire.DataStore.DS_ActivationCode GetActivationCodeList(int index) {
        return result.GetActivationCodeList(index);
      }
      public Builder SetActivationCodeList(int index, global::DashFire.DataStore.DS_ActivationCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.activationCodeList_[index] = value;
        return this;
      }
      public Builder SetActivationCodeList(int index, global::DashFire.DataStore.DS_ActivationCode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.activationCodeList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddActivationCodeList(global::DashFire.DataStore.DS_ActivationCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.activationCodeList_.Add(value);
        return this;
      }
      public Builder AddActivationCodeList(global::DashFire.DataStore.DS_ActivationCode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.activationCodeList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeActivationCodeList(scg::IEnumerable<global::DashFire.DataStore.DS_ActivationCode> values) {
        PrepareBuilder();
        result.activationCodeList_.Add(values);
        return this;
      }
      public Builder ClearActivationCodeList() {
        PrepareBuilder();
        result.activationCodeList_.Clear();
        return this;
      }
    }
    static DSG_ActivationCode() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_Nickname : pb::GeneratedMessage<DSG_Nickname, DSG_Nickname.Builder> {
    private DSG_Nickname() { }
    private static readonly DSG_Nickname defaultInstance = new DSG_Nickname().MakeReadOnly();
    private static readonly string[] _dSGNicknameFieldNames = new string[] { "DataMsgId", "NicknameList" };
    private static readonly uint[] _dSGNicknameFieldTags = new uint[] { 8, 18 };
    public static DSG_Nickname DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_Nickname DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_Nickname ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Nickname__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_Nickname, DSG_Nickname.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Nickname__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int NicknameListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_Nickname> nicknameList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_Nickname>();
    public scg::IList<global::DashFire.DataStore.DS_Nickname> NicknameListList {
      get { return nicknameList_; }
    }
    public int NicknameListCount {
      get { return nicknameList_.Count; }
    }
    public global::DashFire.DataStore.DS_Nickname GetNicknameList(int index) {
      return nicknameList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_Nickname element in NicknameListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGNicknameFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (nicknameList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], nicknameList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_Nickname element in NicknameListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_Nickname ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_Nickname ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_Nickname ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Nickname ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_Nickname MakeReadOnly() {
      nicknameList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_Nickname prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_Nickname, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_Nickname cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_Nickname result;
      
      private DSG_Nickname PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_Nickname original = result;
          result = new DSG_Nickname();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_Nickname MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_Nickname.Descriptor; }
      }
      
      public override DSG_Nickname DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_Nickname.DefaultInstance; }
      }
      
      public override DSG_Nickname BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_Nickname) {
          return MergeFrom((DSG_Nickname) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_Nickname other) {
        if (other == global::DashFire.DataStore.DSG_Nickname.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.nicknameList_.Count != 0) {
          result.nicknameList_.Add(other.nicknameList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGNicknameFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGNicknameFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.nicknameList_, global::DashFire.DataStore.DS_Nickname.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_Nickname> NicknameListList {
        get { return PrepareBuilder().nicknameList_; }
      }
      public int NicknameListCount {
        get { return result.NicknameListCount; }
      }
      public global::DashFire.DataStore.DS_Nickname GetNicknameList(int index) {
        return result.GetNicknameList(index);
      }
      public Builder SetNicknameList(int index, global::DashFire.DataStore.DS_Nickname value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nicknameList_[index] = value;
        return this;
      }
      public Builder SetNicknameList(int index, global::DashFire.DataStore.DS_Nickname.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.nicknameList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNicknameList(global::DashFire.DataStore.DS_Nickname value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nicknameList_.Add(value);
        return this;
      }
      public Builder AddNicknameList(global::DashFire.DataStore.DS_Nickname.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.nicknameList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNicknameList(scg::IEnumerable<global::DashFire.DataStore.DS_Nickname> values) {
        PrepareBuilder();
        result.nicknameList_.Add(values);
        return this;
      }
      public Builder ClearNicknameList() {
        PrepareBuilder();
        result.nicknameList_.Clear();
        return this;
      }
    }
    static DSG_Nickname() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_GowStar : pb::GeneratedMessage<DSG_GowStar, DSG_GowStar.Builder> {
    private DSG_GowStar() { }
    private static readonly DSG_GowStar defaultInstance = new DSG_GowStar().MakeReadOnly();
    private static readonly string[] _dSGGowStarFieldNames = new string[] { "DataMsgId", "GowStarList" };
    private static readonly uint[] _dSGGowStarFieldTags = new uint[] { 8, 18 };
    public static DSG_GowStar DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_GowStar DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_GowStar ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_GowStar__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_GowStar, DSG_GowStar.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_GowStar__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int GowStarListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_GowStar> gowStarList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_GowStar>();
    public scg::IList<global::DashFire.DataStore.DS_GowStar> GowStarListList {
      get { return gowStarList_; }
    }
    public int GowStarListCount {
      get { return gowStarList_.Count; }
    }
    public global::DashFire.DataStore.DS_GowStar GetGowStarList(int index) {
      return gowStarList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_GowStar element in GowStarListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGGowStarFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (gowStarList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], gowStarList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_GowStar element in GowStarListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_GowStar ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_GowStar ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_GowStar ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_GowStar ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_GowStar MakeReadOnly() {
      gowStarList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_GowStar prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_GowStar, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_GowStar cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_GowStar result;
      
      private DSG_GowStar PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_GowStar original = result;
          result = new DSG_GowStar();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_GowStar MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_GowStar.Descriptor; }
      }
      
      public override DSG_GowStar DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_GowStar.DefaultInstance; }
      }
      
      public override DSG_GowStar BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_GowStar) {
          return MergeFrom((DSG_GowStar) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_GowStar other) {
        if (other == global::DashFire.DataStore.DSG_GowStar.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.gowStarList_.Count != 0) {
          result.gowStarList_.Add(other.gowStarList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGGowStarFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGGowStarFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.gowStarList_, global::DashFire.DataStore.DS_GowStar.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_GowStar> GowStarListList {
        get { return PrepareBuilder().gowStarList_; }
      }
      public int GowStarListCount {
        get { return result.GowStarListCount; }
      }
      public global::DashFire.DataStore.DS_GowStar GetGowStarList(int index) {
        return result.GetGowStarList(index);
      }
      public Builder SetGowStarList(int index, global::DashFire.DataStore.DS_GowStar value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gowStarList_[index] = value;
        return this;
      }
      public Builder SetGowStarList(int index, global::DashFire.DataStore.DS_GowStar.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gowStarList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGowStarList(global::DashFire.DataStore.DS_GowStar value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gowStarList_.Add(value);
        return this;
      }
      public Builder AddGowStarList(global::DashFire.DataStore.DS_GowStar.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gowStarList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGowStarList(scg::IEnumerable<global::DashFire.DataStore.DS_GowStar> values) {
        PrepareBuilder();
        result.gowStarList_.Add(values);
        return this;
      }
      public Builder ClearGowStarList() {
        PrepareBuilder();
        result.gowStarList_.Clear();
        return this;
      }
    }
    static DSG_GowStar() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_Mail : pb::GeneratedMessage<DSG_Mail, DSG_Mail.Builder> {
    private DSG_Mail() { }
    private static readonly DSG_Mail defaultInstance = new DSG_Mail().MakeReadOnly();
    private static readonly string[] _dSGMailFieldNames = new string[] { "DataMsgId", "MailList" };
    private static readonly uint[] _dSGMailFieldTags = new uint[] { 8, 18 };
    public static DSG_Mail DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_Mail DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_Mail ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Mail__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_Mail, DSG_Mail.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_Mail__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int MailListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_MailInfo> mailList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_MailInfo>();
    public scg::IList<global::DashFire.DataStore.DS_MailInfo> MailListList {
      get { return mailList_; }
    }
    public int MailListCount {
      get { return mailList_.Count; }
    }
    public global::DashFire.DataStore.DS_MailInfo GetMailList(int index) {
      return mailList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_MailInfo element in MailListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGMailFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (mailList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], mailList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_MailInfo element in MailListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_Mail ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_Mail ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_Mail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_Mail ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_Mail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_Mail MakeReadOnly() {
      mailList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_Mail prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_Mail, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_Mail cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_Mail result;
      
      private DSG_Mail PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_Mail original = result;
          result = new DSG_Mail();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_Mail MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_Mail.Descriptor; }
      }
      
      public override DSG_Mail DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_Mail.DefaultInstance; }
      }
      
      public override DSG_Mail BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_Mail) {
          return MergeFrom((DSG_Mail) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_Mail other) {
        if (other == global::DashFire.DataStore.DSG_Mail.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.mailList_.Count != 0) {
          result.mailList_.Add(other.mailList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGMailFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGMailFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.mailList_, global::DashFire.DataStore.DS_MailInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_MailInfo> MailListList {
        get { return PrepareBuilder().mailList_; }
      }
      public int MailListCount {
        get { return result.MailListCount; }
      }
      public global::DashFire.DataStore.DS_MailInfo GetMailList(int index) {
        return result.GetMailList(index);
      }
      public Builder SetMailList(int index, global::DashFire.DataStore.DS_MailInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mailList_[index] = value;
        return this;
      }
      public Builder SetMailList(int index, global::DashFire.DataStore.DS_MailInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mailList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMailList(global::DashFire.DataStore.DS_MailInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mailList_.Add(value);
        return this;
      }
      public Builder AddMailList(global::DashFire.DataStore.DS_MailInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mailList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMailList(scg::IEnumerable<global::DashFire.DataStore.DS_MailInfo> values) {
        PrepareBuilder();
        result.mailList_.Add(values);
        return this;
      }
      public Builder ClearMailList() {
        PrepareBuilder();
        result.mailList_.Clear();
        return this;
      }
    }
    static DSG_Mail() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_GiftCode : pb::GeneratedMessage<DSG_GiftCode, DSG_GiftCode.Builder> {
    private DSG_GiftCode() { }
    private static readonly DSG_GiftCode defaultInstance = new DSG_GiftCode().MakeReadOnly();
    private static readonly string[] _dSGGiftCodeFieldNames = new string[] { "DataMsgId", "GiftCodeList" };
    private static readonly uint[] _dSGGiftCodeFieldTags = new uint[] { 8, 18 };
    public static DSG_GiftCode DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_GiftCode DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_GiftCode ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_GiftCode__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_GiftCode, DSG_GiftCode.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_GiftCode__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int GiftCodeListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_GiftCode> giftCodeList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_GiftCode>();
    public scg::IList<global::DashFire.DataStore.DS_GiftCode> GiftCodeListList {
      get { return giftCodeList_; }
    }
    public int GiftCodeListCount {
      get { return giftCodeList_.Count; }
    }
    public global::DashFire.DataStore.DS_GiftCode GetGiftCodeList(int index) {
      return giftCodeList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_GiftCode element in GiftCodeListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGGiftCodeFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (giftCodeList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], giftCodeList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_GiftCode element in GiftCodeListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_GiftCode ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_GiftCode ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_GiftCode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_GiftCode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_GiftCode MakeReadOnly() {
      giftCodeList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_GiftCode prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_GiftCode, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_GiftCode cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_GiftCode result;
      
      private DSG_GiftCode PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_GiftCode original = result;
          result = new DSG_GiftCode();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_GiftCode MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_GiftCode.Descriptor; }
      }
      
      public override DSG_GiftCode DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_GiftCode.DefaultInstance; }
      }
      
      public override DSG_GiftCode BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_GiftCode) {
          return MergeFrom((DSG_GiftCode) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_GiftCode other) {
        if (other == global::DashFire.DataStore.DSG_GiftCode.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.giftCodeList_.Count != 0) {
          result.giftCodeList_.Add(other.giftCodeList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGGiftCodeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGGiftCodeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.giftCodeList_, global::DashFire.DataStore.DS_GiftCode.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_GiftCode> GiftCodeListList {
        get { return PrepareBuilder().giftCodeList_; }
      }
      public int GiftCodeListCount {
        get { return result.GiftCodeListCount; }
      }
      public global::DashFire.DataStore.DS_GiftCode GetGiftCodeList(int index) {
        return result.GetGiftCodeList(index);
      }
      public Builder SetGiftCodeList(int index, global::DashFire.DataStore.DS_GiftCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.giftCodeList_[index] = value;
        return this;
      }
      public Builder SetGiftCodeList(int index, global::DashFire.DataStore.DS_GiftCode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.giftCodeList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGiftCodeList(global::DashFire.DataStore.DS_GiftCode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.giftCodeList_.Add(value);
        return this;
      }
      public Builder AddGiftCodeList(global::DashFire.DataStore.DS_GiftCode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.giftCodeList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGiftCodeList(scg::IEnumerable<global::DashFire.DataStore.DS_GiftCode> values) {
        PrepareBuilder();
        result.giftCodeList_.Add(values);
        return this;
      }
      public Builder ClearGiftCodeList() {
        PrepareBuilder();
        result.giftCodeList_.Clear();
        return this;
      }
    }
    static DSG_GiftCode() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_ArenaRank : pb::GeneratedMessage<DSG_ArenaRank, DSG_ArenaRank.Builder> {
    private DSG_ArenaRank() { }
    private static readonly DSG_ArenaRank defaultInstance = new DSG_ArenaRank().MakeReadOnly();
    private static readonly string[] _dSGArenaRankFieldNames = new string[] { "ArenaList", "DataMsgId" };
    private static readonly uint[] _dSGArenaRankFieldTags = new uint[] { 18, 8 };
    public static DSG_ArenaRank DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_ArenaRank DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_ArenaRank ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ArenaRank__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_ArenaRank, DSG_ArenaRank.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ArenaRank__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int ArenaListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaInfo> arenaList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaInfo>();
    public scg::IList<global::DashFire.DataStore.DS_ArenaInfo> ArenaListList {
      get { return arenaList_; }
    }
    public int ArenaListCount {
      get { return arenaList_.Count; }
    }
    public global::DashFire.DataStore.DS_ArenaInfo GetArenaList(int index) {
      return arenaList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_ArenaInfo element in ArenaListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGArenaRankFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[1], DataMsgId);
      }
      if (arenaList_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], arenaList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_ArenaInfo element in ArenaListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_ArenaRank ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRank ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_ArenaRank ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ArenaRank ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_ArenaRank MakeReadOnly() {
      arenaList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_ArenaRank prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_ArenaRank, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_ArenaRank cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_ArenaRank result;
      
      private DSG_ArenaRank PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_ArenaRank original = result;
          result = new DSG_ArenaRank();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_ArenaRank MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_ArenaRank.Descriptor; }
      }
      
      public override DSG_ArenaRank DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_ArenaRank.DefaultInstance; }
      }
      
      public override DSG_ArenaRank BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_ArenaRank) {
          return MergeFrom((DSG_ArenaRank) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_ArenaRank other) {
        if (other == global::DashFire.DataStore.DSG_ArenaRank.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.arenaList_.Count != 0) {
          result.arenaList_.Add(other.arenaList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGArenaRankFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGArenaRankFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.arenaList_, global::DashFire.DataStore.DS_ArenaInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_ArenaInfo> ArenaListList {
        get { return PrepareBuilder().arenaList_; }
      }
      public int ArenaListCount {
        get { return result.ArenaListCount; }
      }
      public global::DashFire.DataStore.DS_ArenaInfo GetArenaList(int index) {
        return result.GetArenaList(index);
      }
      public Builder SetArenaList(int index, global::DashFire.DataStore.DS_ArenaInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.arenaList_[index] = value;
        return this;
      }
      public Builder SetArenaList(int index, global::DashFire.DataStore.DS_ArenaInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.arenaList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddArenaList(global::DashFire.DataStore.DS_ArenaInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.arenaList_.Add(value);
        return this;
      }
      public Builder AddArenaList(global::DashFire.DataStore.DS_ArenaInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.arenaList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeArenaList(scg::IEnumerable<global::DashFire.DataStore.DS_ArenaInfo> values) {
        PrepareBuilder();
        result.arenaList_.Add(values);
        return this;
      }
      public Builder ClearArenaList() {
        PrepareBuilder();
        result.arenaList_.Clear();
        return this;
      }
    }
    static DSG_ArenaRank() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSG_ArenaRecord : pb::GeneratedMessage<DSG_ArenaRecord, DSG_ArenaRecord.Builder> {
    private DSG_ArenaRecord() { }
    private static readonly DSG_ArenaRecord defaultInstance = new DSG_ArenaRecord().MakeReadOnly();
    private static readonly string[] _dSGArenaRecordFieldNames = new string[] { "DataMsgId", "RecordList" };
    private static readonly uint[] _dSGArenaRecordFieldTags = new uint[] { 8, 18 };
    public static DSG_ArenaRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSG_ArenaRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSG_ArenaRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ArenaRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSG_ArenaRecord, DSG_ArenaRecord.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSG_ArenaRecord__FieldAccessorTable; }
    }
    
    public const int DataMsgIdFieldNumber = 1;
    private bool hasDataMsgId;
    private int dataMsgId_;
    public bool HasDataMsgId {
      get { return hasDataMsgId; }
    }
    public int DataMsgId {
      get { return dataMsgId_; }
    }
    
    public const int RecordListFieldNumber = 2;
    private pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaRecord> recordList_ = new pbc::PopsicleList<global::DashFire.DataStore.DS_ArenaRecord>();
    public scg::IList<global::DashFire.DataStore.DS_ArenaRecord> RecordListList {
      get { return recordList_; }
    }
    public int RecordListCount {
      get { return recordList_.Count; }
    }
    public global::DashFire.DataStore.DS_ArenaRecord GetRecordList(int index) {
      return recordList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDataMsgId) return false;
        foreach (global::DashFire.DataStore.DS_ArenaRecord element in RecordListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSGArenaRecordFieldNames;
      if (hasDataMsgId) {
        output.WriteInt32(1, field_names[0], DataMsgId);
      }
      if (recordList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], recordList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDataMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DataMsgId);
        }
        foreach (global::DashFire.DataStore.DS_ArenaRecord element in RecordListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSG_ArenaRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSG_ArenaRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSG_ArenaRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSG_ArenaRecord MakeReadOnly() {
      recordList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSG_ArenaRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSG_ArenaRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSG_ArenaRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSG_ArenaRecord result;
      
      private DSG_ArenaRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          DSG_ArenaRecord original = result;
          result = new DSG_ArenaRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSG_ArenaRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSG_ArenaRecord.Descriptor; }
      }
      
      public override DSG_ArenaRecord DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSG_ArenaRecord.DefaultInstance; }
      }
      
      public override DSG_ArenaRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSG_ArenaRecord) {
          return MergeFrom((DSG_ArenaRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSG_ArenaRecord other) {
        if (other == global::DashFire.DataStore.DSG_ArenaRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDataMsgId) {
          DataMsgId = other.DataMsgId;
        }
        if (other.recordList_.Count != 0) {
          result.recordList_.Add(other.recordList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSGArenaRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSGArenaRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDataMsgId = input.ReadInt32(ref result.dataMsgId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.recordList_, global::DashFire.DataStore.DS_ArenaRecord.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDataMsgId {
        get { return result.hasDataMsgId; }
      }
      public int DataMsgId {
        get { return result.DataMsgId; }
        set { SetDataMsgId(value); }
      }
      public Builder SetDataMsgId(int value) {
        PrepareBuilder();
        result.hasDataMsgId = true;
        result.dataMsgId_ = value;
        return this;
      }
      public Builder ClearDataMsgId() {
        PrepareBuilder();
        result.hasDataMsgId = false;
        result.dataMsgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.DataStore.DS_ArenaRecord> RecordListList {
        get { return PrepareBuilder().recordList_; }
      }
      public int RecordListCount {
        get { return result.RecordListCount; }
      }
      public global::DashFire.DataStore.DS_ArenaRecord GetRecordList(int index) {
        return result.GetRecordList(index);
      }
      public Builder SetRecordList(int index, global::DashFire.DataStore.DS_ArenaRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recordList_[index] = value;
        return this;
      }
      public Builder SetRecordList(int index, global::DashFire.DataStore.DS_ArenaRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recordList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRecordList(global::DashFire.DataStore.DS_ArenaRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recordList_.Add(value);
        return this;
      }
      public Builder AddRecordList(global::DashFire.DataStore.DS_ArenaRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recordList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRecordList(scg::IEnumerable<global::DashFire.DataStore.DS_ArenaRecord> values) {
        PrepareBuilder();
        result.recordList_.Add(values);
        return this;
      }
      public Builder ClearRecordList() {
        PrepareBuilder();
        result.recordList_.Clear();
        return this;
      }
    }
    static DSG_ArenaRecord() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DSD_BanAccount : pb::GeneratedMessage<DSD_BanAccount, DSD_BanAccount.Builder> {
    private DSD_BanAccount() { }
    private static readonly DSD_BanAccount defaultInstance = new DSD_BanAccount().MakeReadOnly();
    private static readonly string[] _dSDBanAccountFieldNames = new string[] { "Account", "IsBanned" };
    private static readonly uint[] _dSDBanAccountFieldTags = new uint[] { 10, 16 };
    public static DSD_BanAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DSD_BanAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DSD_BanAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.DataStore.Data.internal__static_DSD_BanAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DSD_BanAccount, DSD_BanAccount.Builder> InternalFieldAccessors {
      get { return global::DashFire.DataStore.Data.internal__static_DSD_BanAccount__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private string account_ = "";
    public bool HasAccount {
      get { return hasAccount; }
    }
    public string Account {
      get { return account_; }
    }
    
    public const int IsBannedFieldNumber = 2;
    private bool hasIsBanned;
    private bool isBanned_;
    public bool HasIsBanned {
      get { return hasIsBanned; }
    }
    public bool IsBanned {
      get { return isBanned_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasIsBanned) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dSDBanAccountFieldNames;
      if (hasAccount) {
        output.WriteString(1, field_names[0], Account);
      }
      if (hasIsBanned) {
        output.WriteBool(2, field_names[1], IsBanned);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Account);
        }
        if (hasIsBanned) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsBanned);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DSD_BanAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DSD_BanAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DSD_BanAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DSD_BanAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DSD_BanAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DSD_BanAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DSD_BanAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DSD_BanAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DSD_BanAccount result;
      
      private DSD_BanAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          DSD_BanAccount original = result;
          result = new DSD_BanAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DSD_BanAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.DataStore.DSD_BanAccount.Descriptor; }
      }
      
      public override DSD_BanAccount DefaultInstanceForType {
        get { return global::DashFire.DataStore.DSD_BanAccount.DefaultInstance; }
      }
      
      public override DSD_BanAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DSD_BanAccount) {
          return MergeFrom((DSD_BanAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DSD_BanAccount other) {
        if (other == global::DashFire.DataStore.DSD_BanAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          Account = other.Account;
        }
        if (other.HasIsBanned) {
          IsBanned = other.IsBanned;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dSDBanAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dSDBanAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccount = input.ReadString(ref result.account_);
              break;
            }
            case 16: {
              result.hasIsBanned = input.ReadBool(ref result.isBanned_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
        get { return result.hasAccount; }
      }
      public string Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = "";
        return this;
      }
      
      public bool HasIsBanned {
        get { return result.hasIsBanned; }
      }
      public bool IsBanned {
        get { return result.IsBanned; }
        set { SetIsBanned(value); }
      }
      public Builder SetIsBanned(bool value) {
        PrepareBuilder();
        result.hasIsBanned = true;
        result.isBanned_ = value;
        return this;
      }
      public Builder ClearIsBanned() {
        PrepareBuilder();
        result.hasIsBanned = false;
        result.isBanned_ = false;
        return this;
      }
    }
    static DSD_BanAccount() {
      object.ReferenceEquals(global::DashFire.DataStore.Data.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
